-- Name: views.inventory
-- Created: 2015-04-24 18:22:48
-- Updated: 2015-05-06 17:29:22

CREATE VIEW views.inventory
AS
SELECT
	case 
		when inv.article_id is not null then inv.article_id
		when inv.article_id is null then sales.article_id
	end as article_id,
	/*combine all date_created -> remove null which caused by full join*/ 
	case 
		when inv.date_created is not null then inv.date_created
		when inv.date_created is null then sales.date_shipped
	end as date_created,
	inv.quantity,
	inv.reserved,
	inv.quantity2,
	inv.reserved2,
	inv.quantity_ow_dlv,
	inv.quantity_z_dlv,
	inv.quantity_ow_lret,
	inv.quantity_z_lret,
	inv.pop_fulfilled_quantity,
	inv.pop_quantity,
	inv.pop_initial_quantity,
	inv.pop_retail_price_min,
	inv.pop_purchase_price_min,
	inv.pop_retail_price_max,
	inv.pop_purchase_price_max,
	inv.pop_retail_price_avg,
	inv.pop_purchase_price_avg,
	inv.pop_intial_quantity_retail,
	inv.pop_intial_quantity_purchase,
	inv.pop_quantity_retail,
	inv.pop_quantity_purchase,
	inv.pop_fulfilled_quantity_retail,
	inv.pop_fulfilled_quantity_purchase,
	inv.oo_id,
	inv.ean,
	inv.brand,
	inv.article_name,
	inv.supplier_availability,
	inv.commodity_group1,
	inv.commodity_group2,
	inv.commodity_group3,
	inv.commodity_group4,
	inv.commodity_group5,
	inv.country_of_production,
	inv.processing_code,
	inv.color1,
	inv.supplier_sku,
	inv.supplier_color_code,
	inv.supplier_color_name,
	inv.purchase_price,
	inv.pic1,
	inv.color1_shade,
	inv.nos,
	inv.season,
	inv.amidala_deactive,
	inv.amidala_categories,
	inv.supplier_size,
	inv.eu_size,
	inv.supplier_length,
	inv.eu_length,
	inv.alternative_supplier_sku,
	inv.push,
	inv.reduced,
	inv.season_start,
	inv.net_weight_gram,
	inv.gross_weight_gram,
	inv.de_customs_tarff_number,
	inv.ch_customs_tariff_number,
	inv.age,
	inv.style,
	inv.core_article,
	inv.article_o_parentId,
	inv.activation_ch,
	inv.o_published,
	inv.o_creationDate,
	inv.supplier_article_id,
	inv.supplier_article_article_id,
	inv.supplier_article_sku,
	inv.supplier_article_purchase_price,
	inv.supplier_article_ean,
	inv.supplier_article_image_url,
	inv.supplier_article_partner_shop_url,
	inv.supplier_article_manufacturer_sku,
	inv.article_article_id,
	inv.article_title,
	inv.article_color,
	inv.article_size,
	inv.article_sku,
	inv.article_model_id,
	inv.check_tariff_numbers,
	inv.price_retail_de,
	inv.date_available,
    inv.promotion_item,
    inv.production_textile,
    inv.reason_deactive,
	inv.price_retail_original,
	inv.price_retail_chf,
	inv.price_retail_original_chf,
	inv.price_retail_dkk,
	inv.price_retail_original_dkk,
	inv.price_retail_sek,
	inv.price_retail_original_sek,
	inv.price_retail_benelux,
	inv.price_retail_original_benelux,
	inv.min_date_delivery,
	inv.max_date_delivery,
	inv.final_stock,
	inv.final_reserved,
	inv.stock_type,
	/*sales data - always do retail (use retail price in euro from order_position (convert to € in order_position only!), purchase and item based*/
	avg_purchase_price_128_all,
	avg_retail_price_128_all,
	shipped_128_all,
	shipped_128_ek_all,
	shipped_128_vk_all,
	shipped_128_de,
	shipped_128_ek_de,
	shipped_128_vk_de,
	shipped_128_at,
	shipped_128_ek_at,
	shipped_128_vk_at,
	shipped_128_ch,
	shipped_128_ek_ch,
	shipped_128_vk_ch,
	shipped_128_nl,
	shipped_128_ek_nl,
	shipped_128_vk_nl,
	shipped_128_dk,
	shipped_128_ek_dk,
	shipped_128_vk_dk,
	shipped_128_se,
	shipped_128_ek_se,
	shipped_128_vk_se,
	shipped_128_lu,
	shipped_128_ek_lu,
	shipped_128_vk_lu,
	shipped_128_be,
	shipped_128_ek_be,
	shipped_128_vk_be,
	completed_1024_all,
	completed_1024_ek_all,
	completed_1024_vk_all,
	completed_1024_de,
	completed_1024_ek_de,
	completed_1024_vk_de,
	completed_1024_at,
	completed_1024_ek_at,
	completed_1024_vk_at,
	completed_1024_ch,
	completed_1024_ek_ch,
	completed_1024_vk_ch,
	completed_1024_nl,
	completed_1024_ek_nl,
	completed_1024_vk_nl,
	completed_1024_dk,
	completed_1024_ek_dk,
	completed_1024_vk_dk,
	completed_1024_se,
	completed_1024_ek_se,
	completed_1024_vk_se,
	completed_1024_lu,
	completed_1024_ek_lu,
	completed_1024_vk_lu,
	completed_1024_be,
	completed_1024_ek_be,
	completed_1024_vk_be,
	avg_retail_price_1024_all,
	avg_retail_price_1024_de,
	avg_retail_price_1024_at,
	avg_retail_price_1024_ch,
	avg_retail_price_1024_nl,
	avg_retail_price_1024_dk,
	avg_retail_price_1024_se,
	avg_retail_price_1024_lu,
	avg_retail_price_1024_be,
	returned_512_all,
	returned_512_ek_all,
	returned_512_vk_all,
	avg_purchase_price_512_all,
	avg_retail_price_512_all,
	returned_512_de,
	returned_512_ek_de,
	returned_512_vk_de,
	returned_512_at,
	returned_512_ek_at,
	returned_512_vk_at,
	returned_512_ch,
	returned_512_ek_ch,
	returned_512_vk_ch,
	returned_512_nl,
	returned_512_ek_nl,
	returned_512_vk_nl,
	returned_512_dk,
	returned_512_ek_dk,
	returned_512_vk_dk,
	returned_512_se,
	returned_512_ek_se,
	returned_512_vk_se,
	returned_512_lu,
	returned_512_ek_lu,
	returned_512_vk_lu,
	returned_512_be,
	returned_512_ek_be,
	returned_512_vk_be,
	lost_1536_all,
	lost_1536_ek_all,
	lost_1536_vk_all,
	sum_virtual_stock_quantity,
	sum_vk_stock,
	sum_ek_stock,
	avg_virtual_stock_vk,
	avg_virtual_stock_ek,
	/*partner stock*/
	avg_purchase_price_128_partner,
	avg_retail_price_128_partner,
	/*Shipped-Patner*/
	shipped_128_partner,
	shipped_128_ek_partner,
	shipped_128_vk_partner,
	/*Shipped-Partner(Country)*/
	shipped_128_de_partner,
	shipped_128_ek_de_partner,
	shipped_128_vk_de_partner,
	shipped_128_at_partner,
	shipped_128_ek_at_partner,
	shipped_128_vk_at_partner,
	shipped_128_ch_partner,
	shipped_128_ek_ch_partner,
	shipped_128_vk_ch_partner,
	shipped_128_nl_partner,
	shipped_128_ek_nl_partner,
	shipped_128_vk_nl_partner,
	shipped_128_dk_partner,
	shipped_128_ek_dk_partner,
	shipped_128_vk_dk_partner,
	shipped_128_se_partner,
	shipped_128_ek_se_partner,
	shipped_128_vk_se_partner,
	shipped_128_lu_partner,
	shipped_128_ek_lu_partner,
	shipped_128_vk_lu_partner,
	shipped_128_be_partner,
	shipped_128_ek_be_partner,
	shipped_128_vk_be_partner,
	/*Completed-Partner*/
	completed_1024_partner,
	completed_1024_ek_partner,
	completed_1024_vk_partner,
	/*Completed-Partner(Country)*/
	avg_retail_price_1024_de_partner,
	completed_1024_de_partner,
	completed_1024_ek_de_partner,
	completed_1024_vk_de_partner,
	avg_retail_price_1024_at_partner,
	completed_1024_at_partner,
	completed_1024_ek_at_partner,
	completed_1024_vk_at_partner,
	avg_retail_price_1024_ch_partner,
	completed_1024_ch_partner,
	completed_1024_ek_ch_partner,
	completed_1024_vk_ch_partner,
	avg_retail_price_1024_nl_partner,
	completed_1024_nl_partner,
	completed_1024_ek_nl_partner,
	completed_1024_vk_nl_partner,
	avg_retail_price_1024_dk_partner,
	completed_1024_dk_partner,
	completed_1024_ek_dk_partner,
	completed_1024_vk_dk_partner,
	avg_retail_price_1024_se_partner,
	completed_1024_se_partner,
	completed_1024_ek_se_partner,
	completed_1024_vk_se_partner,
	avg_retail_price_1024_lu_partner,
	completed_1024_lu_partner,
	completed_1024_ek_lu_partner,
	completed_1024_vk_lu_partner,
	avg_retail_price_1024_be_partner,
	completed_1024_be_partner,
	completed_1024_ek_be_partner,
	completed_1024_vk_be_partner,
	avg_purchase_price_1024_partner,
	avg_retail_price_1024_partner,
	/*Returned-Partner*/
	returned_512_partner,
	returned_512_ek_partner,
	returned_512_vk_partner,
	avg_purchase_price_512_partner, 
	avg_retail_price_512_partner,
	/*Virtual Stock-Partner*/
	sum_virtual_stock_quantity_partner,
	sum_vk_stock_partner,
	sum_ek_stock_partner,
	avg_virtual_stock_vk_partner,
	avg_virtual_stock_ek_partner
FROM views.inventory_1 inv
FULL JOIN
(
	SELECT
		date_shipped, 
		article_id,
		sum(avg_purchase_price_128_all) as avg_purchase_price_128_all,
		avg(avg_retail_price_128_all) as avg_retail_price_128_all,
		sum(shipped_128_all) as  shipped_128_all,
		sum(shipped_128_ek_all) as  shipped_128_ek_all,
		sum(shipped_128_vk_all) as  shipped_128_vk_all,
		sum(shipped_128_de) as  shipped_128_de,
		sum(shipped_128_ek_de) as  shipped_128_ek_de,
		sum(shipped_128_vk_de) as  shipped_128_vk_de,
		sum(shipped_128_at) as  shipped_128_at,
		sum(shipped_128_ek_at) as  shipped_128_ek_at,
		sum(shipped_128_vk_at) as  shipped_128_vk_at,
		sum(shipped_128_ch) as  shipped_128_ch,
		sum(shipped_128_ek_ch) as  shipped_128_ek_ch,
		sum(shipped_128_vk_ch) as  shipped_128_vk_ch,
		sum(shipped_128_nl) as  shipped_128_nl,
		sum(shipped_128_ek_nl) as  shipped_128_ek_nl,
		sum(shipped_128_vk_nl) as  shipped_128_vk_nl,
		sum(shipped_128_dk) as  shipped_128_dk,
		sum(shipped_128_ek_dk) as  shipped_128_ek_dk,
		sum(shipped_128_vk_dk) as  shipped_128_vk_dk,
		sum(shipped_128_se) as  shipped_128_se,
		sum(shipped_128_ek_se) as  shipped_128_ek_se,
		sum(shipped_128_vk_se) as  shipped_128_vk_se,
		sum(shipped_128_lu) as  shipped_128_lu,
		sum(shipped_128_ek_lu) as  shipped_128_ek_lu,
		sum(shipped_128_vk_lu) as  shipped_128_vk_lu,
		sum(shipped_128_be) as  shipped_128_be,
		sum(shipped_128_ek_be) as  shipped_128_ek_be,
		sum(shipped_128_vk_be) as  shipped_128_vk_be, 
		sum(completed_1024_all) as  completed_1024_all,
		sum(completed_1024_ek_all) as  completed_1024_ek_all,
		sum(completed_1024_vk_all) as  completed_1024_vk_all,
		sum(completed_1024_de) as  completed_1024_de,
		sum(completed_1024_ek_de) as  completed_1024_ek_de,
		sum(completed_1024_vk_de) as  completed_1024_vk_de,
		sum(completed_1024_at) as  completed_1024_at,
		sum(completed_1024_ek_at) as  completed_1024_ek_at,
		sum(completed_1024_vk_at) as  completed_1024_vk_at,
		sum(completed_1024_ch) as  completed_1024_ch,
		sum(completed_1024_ek_ch) as  completed_1024_ek_ch,
		sum(completed_1024_vk_ch) as  completed_1024_vk_ch,
		sum(completed_1024_nl) as  completed_1024_nl,
		sum(completed_1024_ek_nl) as  completed_1024_ek_nl,
		sum(completed_1024_vk_nl) as  completed_1024_vk_nl,
		sum(completed_1024_dk) as  completed_1024_dk,
		sum(completed_1024_ek_dk) as  completed_1024_ek_dk,
		sum(completed_1024_vk_dk) as  completed_1024_vk_dk,
		sum(completed_1024_se) as  completed_1024_se,
		sum(completed_1024_ek_se) as  completed_1024_ek_se,
		sum(completed_1024_vk_se) as  completed_1024_vk_se,
		sum(completed_1024_lu) as  completed_1024_lu,
		sum(completed_1024_ek_lu) as  completed_1024_ek_lu,
		sum(completed_1024_vk_lu) as  completed_1024_vk_lu,
		sum(completed_1024_be) as  completed_1024_be,
		sum(completed_1024_ek_be) as  completed_1024_ek_be,
		sum(completed_1024_vk_be) as  completed_1024_vk_be,
		avg(avg_retail_price_1024_all) as  avg_retail_price_1024_all,
		avg(avg_retail_price_1024_de) as  avg_retail_price_1024_de,
		avg(avg_retail_price_1024_at) as  avg_retail_price_1024_at,
		avg(avg_retail_price_1024_ch) as  avg_retail_price_1024_ch,
		avg(avg_retail_price_1024_nl) as  avg_retail_price_1024_nl,
		avg(avg_retail_price_1024_dk) as  avg_retail_price_1024_dk,
		avg(avg_retail_price_1024_se) as  avg_retail_price_1024_se,
		avg(avg_retail_price_1024_lu) as  avg_retail_price_1024_lu,
		avg(avg_retail_price_1024_be) as  avg_retail_price_1024_be,
		sum(returned_512_all) as  returned_512_all,
		sum(returned_512_ek_all) as  returned_512_ek_all,
		sum(returned_512_vk_all) as  returned_512_vk_all,
		avg(avg_purchase_price_512_all ) as  avg_purchase_price_512_all, 
		avg(avg_retail_price_512_all) as  avg_retail_price_512_all,
		sum(returned_512_de) as  returned_512_de,
		sum(returned_512_ek_de) as  returned_512_ek_de,
		sum(returned_512_vk_de) as  returned_512_vk_de,
		sum(returned_512_at) as  returned_512_at, 
		sum(returned_512_ek_at) as  returned_512_ek_at,
		sum(returned_512_vk_at) as  returned_512_vk_at,
		sum(returned_512_ch) as  returned_512_ch,
		sum(returned_512_ek_ch) as  returned_512_ek_ch,
		sum(returned_512_vk_ch) as  returned_512_vk_ch,
		sum(returned_512_nl) as  returned_512_nl, 
		sum(returned_512_ek_nl) as  returned_512_ek_nl,
		sum(returned_512_vk_nl) as  returned_512_vk_nl,
		sum(returned_512_dk) as  returned_512_dk, 
		sum(returned_512_ek_dk) as  returned_512_ek_dk,
		sum(returned_512_vk_dk) as  returned_512_vk_dk,
		sum(returned_512_se) as  returned_512_se, 
		sum(returned_512_ek_se) as  returned_512_ek_se,
		sum(returned_512_vk_se) as  returned_512_vk_se,
		sum(returned_512_lu) as  returned_512_lu, 
		sum(returned_512_ek_lu) as  returned_512_ek_lu,
		sum(returned_512_vk_lu) as  returned_512_vk_lu,
		sum(returned_512_be) as  returned_512_be, 
		sum(returned_512_ek_be) as  returned_512_ek_be,
		sum(returned_512_vk_be) as  returned_512_vk_be,
		sum(lost_1536_all) as  lost_1536_all,
		sum(lost_1536_ek_all) as  lost_1536_ek_all,
		sum(lost_1536_vk_all) as  lost_1536_vk_all,
		sum(sum_virtual_stock_quantity) as sum_virtual_stock_quantity,
		sum(sum_vk_stock) as sum_vk_stock,
		sum(sum_ek_stock) as sum_ek_stock,
		avg(avg_virtual_stock_vk) as avg_virtual_stock_vk,
		avg(avg_virtual_stock_ek) as avg_virtual_stock_ek,
		sum(avg_purchase_price_128_partner) as avg_purchase_price_128_partner,
		avg(avg_retail_price_128_partner) as avg_retail_price_128_partner,
		sum(shipped_128_partner) as  shipped_128_partner,
		sum(shipped_128_ek_partner) as  shipped_128_ek_partner,
		sum(shipped_128_vk_partner) as  shipped_128_vk_partner,
		sum(completed_1024_partner) as  completed_1024_partner,
		sum(completed_1024_ek_partner) as  completed_1024_ek_partner,
		sum(completed_1024_vk_partner) as  completed_1024_vk_partner,
		avg(avg_purchase_price_1024_partner) as avg_purchase_price_1024_partner,
		avg(avg_retail_price_1024_partner) as  avg_retail_price_1024_partner,
		sum(returned_512_partner) as  returned_512_partner,
		sum(returned_512_ek_partner) as  returned_512_ek_partner,
		sum(returned_512_vk_partner) as  returned_512_vk_partner,
		avg(avg_purchase_price_512_partner ) as  avg_purchase_price_512_partner, 
		avg(avg_retail_price_512_partner) as  avg_retail_price_512_partner,
		sum(sum_virtual_stock_quantity_partner) as sum_virtual_stock_quantity_partner,
		sum(sum_vk_stock_partner) as sum_vk_stock_partner,
		sum(sum_ek_stock_partner) as sum_ek_stock_partner,
		avg(avg_virtual_stock_vk_partner) as avg_virtual_stock_vk_partner,
		avg(avg_virtual_stock_ek_partner) as avg_virtual_stock_ek_partner,
		sum(shipped_128_de_partner) as shipped_128_de_partner,
		sum(shipped_128_ek_de_partner) as shipped_128_ek_de_partner,
		sum(shipped_128_vk_de_partner) as shipped_128_vk_de_partner,
		sum(shipped_128_at_partner) as shipped_128_at_partner,
		sum(shipped_128_ek_at_partner) as shipped_128_ek_at_partner,
		sum(shipped_128_vk_at_partner) as shipped_128_vk_at_partner,
		sum(shipped_128_ch_partner) as shipped_128_ch_partner,
		sum(shipped_128_ek_ch_partner) as shipped_128_ek_ch_partner,
		sum(shipped_128_vk_ch_partner) as shipped_128_vk_ch_partner,
		sum(shipped_128_nl_partner) as shipped_128_nl_partner,
		sum(shipped_128_ek_nl_partner) as shipped_128_ek_nl_partner,
		sum(shipped_128_vk_nl_partner) as shipped_128_vk_nl_partner,
		sum(shipped_128_dk_partner) as shipped_128_dk_partner,
		sum(shipped_128_ek_dk_partner) as shipped_128_ek_dk_partner,
		sum(shipped_128_vk_dk_partner) as shipped_128_vk_dk_partner,
		sum(shipped_128_se_partner) as shipped_128_se_partner,
		sum(shipped_128_ek_se_partner) as shipped_128_ek_se_partner,
		sum(shipped_128_vk_se_partner) as shipped_128_vk_se_partner,
		sum(shipped_128_lu_partner) as shipped_128_lu_partner,
		sum(shipped_128_ek_lu_partner) as shipped_128_ek_lu_partner,
		sum(shipped_128_vk_lu_partner) as shipped_128_vk_lu_partner,
		sum(shipped_128_be_partner) as shipped_128_be_partner,
		sum(shipped_128_ek_be_partner) as shipped_128_ek_be_partner,
		sum(shipped_128_vk_be_partner) as shipped_128_vk_be_partner,
		avg(avg_retail_price_1024_de_partner) as avg_retail_price_1024_de_partner,
		sum(completed_1024_de_partner) as completed_1024_de_partner,
		sum(completed_1024_ek_de_partner) as completed_1024_ek_de_partner,
		sum(completed_1024_vk_de_partner) as completed_1024_vk_de_partner,
		avg(avg_retail_price_1024_at_partner) as avg_retail_price_1024_at_partner,
		sum(completed_1024_at_partner) as completed_1024_at_partner,
		sum(completed_1024_ek_at_partner) as completed_1024_ek_at_partner,
		sum(completed_1024_vk_at_partner) as completed_1024_vk_at_partner,
		avg(avg_retail_price_1024_ch_partner) as avg_retail_price_1024_ch_partner,
		sum(completed_1024_ch_partner) as completed_1024_ch_partner,
		sum(completed_1024_ek_ch_partner) as completed_1024_ek_ch_partner,
		sum(completed_1024_vk_ch_partner) as completed_1024_vk_ch_partner,
		avg(avg_retail_price_1024_nl_partner) as avg_retail_price_1024_nl_partner,
		sum(completed_1024_nl_partner) as completed_1024_nl_partner,
		sum(completed_1024_ek_nl_partner) as completed_1024_ek_nl_partner,
		sum(completed_1024_vk_nl_partner) as completed_1024_vk_nl_partner,
		avg(avg_retail_price_1024_dk_partner) as avg_retail_price_1024_dk_partner,
		sum(completed_1024_dk_partner) as completed_1024_dk_partner,
		sum(completed_1024_ek_dk_partner) as completed_1024_ek_dk_partner,
		sum(completed_1024_vk_dk_partner) as completed_1024_vk_dk_partner,
		avg(avg_retail_price_1024_se_partner) as avg_retail_price_1024_se_partner,
		sum(completed_1024_se_partner) as completed_1024_se_partner,
		sum(completed_1024_ek_se_partner) as completed_1024_ek_se_partner,
		sum(completed_1024_vk_se_partner) as completed_1024_vk_se_partner,
		avg(avg_retail_price_1024_lu_partner) as avg_retail_price_1024_lu_partner,
		sum(completed_1024_lu_partner) as completed_1024_lu_partner,
		sum(completed_1024_ek_lu_partner) as completed_1024_ek_lu_partner,
		sum(completed_1024_vk_lu_partner) as completed_1024_vk_lu_partner,
		avg(avg_retail_price_1024_be_partner) as avg_retail_price_1024_be_partner,
		sum(completed_1024_be_partner) as completed_1024_be_partner,
		sum(completed_1024_ek_be_partner) as completed_1024_ek_be_partner,
		sum(completed_1024_vk_be_partner) as completed_1024_vk_be_partner
	FROM 
	(
		SELECT 
			cast(date_shipped as date) as date_shipped,
			article_id,
			/*-----------------------------------------------------------Shipped-OW-----------------------------------------------------------*/
			sum(case when stock_location_id=2 and state !=2048 and date_shipped is not null then quantity else 0 end) as shipped_128_all, 
			sum(case when stock_location_id=2 and state !=2048 and date_shipped is not null then quantity*cast(purchase_price as double) else 0 end) as shipped_128_ek_all,
			sum(case when stock_location_id=2 and state !=2048 and date_shipped is not null then quantity*cast(retail_price_euro as double) else 0 end)  as shipped_128_vk_all,
			avg(case when stock_location_id=2 and state !=2048 and date_shipped is not null then purchase_price else 0 end) as avg_purchase_price_128_all, 
			avg(case when stock_location_id=2 and state !=2048 and date_shipped is not null then retail_price_euro else 0 end) as avg_retail_price_128_all,
			/*------Shipped-OW(Country)------*/
			sum(case when shipping_country='DE' and stock_location_id=2 and state !=2048 and date_shipped is not null then quantity else 0 end) as shipped_128_de, 
			sum(case when shipping_country='DE' and stock_location_id=2 and state !=2048 and date_shipped is not null then quantity*cast(purchase_price as double)else 0 end) as shipped_128_ek_de,
			sum(case when shipping_country='DE' and stock_location_id=2 and state !=2048 and date_shipped is not null then quantity*cast(retail_price_euro as double)else 0 end) as shipped_128_vk_de,
			sum(case when shipping_country='AT' and stock_location_id=2 and state !=2048 and date_shipped is not null then quantity else 0 end) as shipped_128_at, 
			sum(case when shipping_country='AT' and stock_location_id=2 and state !=2048 and date_shipped is not null then quantity*cast(purchase_price as double)else 0 end) as shipped_128_ek_at,
			sum(case when shipping_country='AT' and stock_location_id=2 and state !=2048 and date_shipped is not null then quantity*cast(retail_price_euro as double)else 0 end) as shipped_128_vk_at,
			sum(case when shipping_country='CH' and stock_location_id=2 and state !=2048 and date_shipped is not null then quantity else 0 end) as shipped_128_ch, 
			sum(case when shipping_country='CH' and stock_location_id=2 and state !=2048 and date_shipped is not null then quantity*cast(purchase_price as double)else 0 end) as shipped_128_ek_ch,
			sum(case when shipping_country='CH' and stock_location_id=2 and state !=2048 and date_shipped is not null then quantity*cast(retail_price_euro as double)else 0 end) as shipped_128_vk_ch,
			sum(case when shipping_country='NL' and stock_location_id=2 and state !=2048 and date_shipped is not null then quantity else 0 end) as shipped_128_nl, 
			sum(case when shipping_country='NL' and stock_location_id=2 and state !=2048 and date_shipped is not null then quantity*cast(purchase_price as double)else 0 end) as shipped_128_ek_nl,
			sum(case when shipping_country='NL' and stock_location_id=2 and state !=2048 and date_shipped is not null then quantity*cast(retail_price_euro as double)else 0 end) as shipped_128_vk_nl,
			sum(case when shipping_country='DK' and stock_location_id=2 and state !=2048 and date_shipped is not null then quantity else 0 end) as shipped_128_dk, 
			sum(case when shipping_country='DK' and stock_location_id=2 and state !=2048 and date_shipped is not null then quantity*cast(purchase_price as double)else 0 end) as shipped_128_ek_dk,
			sum(case when shipping_country='DK' and stock_location_id=2 and state !=2048 and date_shipped is not null then quantity*cast(retail_price_euro as double)else 0 end) as shipped_128_vk_dk,
			sum(case when shipping_country='SE' and stock_location_id=2 and state !=2048 and date_shipped is not null then quantity else 0 end) as shipped_128_se, 
			sum(case when shipping_country='SE' and stock_location_id=2 and state !=2048 and date_shipped is not null then quantity*cast(purchase_price as double)else 0 end) as shipped_128_ek_se,
			sum(case when shipping_country='SE' and stock_location_id=2 and state !=2048 and date_shipped is not null then quantity*cast(retail_price_euro as double)else 0 end) as shipped_128_vk_se,
			sum(case when shipping_country='LU' and stock_location_id=2 and state !=2048 and date_shipped is not null then quantity else 0 end) as shipped_128_lu, 
			sum(case when shipping_country='LU' and stock_location_id=2 and state !=2048 and date_shipped is not null then quantity*cast(purchase_price as double)else 0 end) as shipped_128_ek_lu,
			sum(case when shipping_country='LU' and stock_location_id=2 and state !=2048 and date_shipped is not null then quantity*cast(retail_price_euro as double)else 0 end) as shipped_128_vk_lu,
			sum(case when shipping_country='BE' and stock_location_id=2 and state !=2048 and date_shipped is not null then quantity else 0 end) as shipped_128_be, 
			sum(case when shipping_country='BE' and stock_location_id=2 and state !=2048 and date_shipped is not null then quantity*cast(purchase_price as double)else 0 end) as shipped_128_ek_be,
			sum(case when shipping_country='BE' and stock_location_id=2 and state !=2048 and date_shipped is not null then quantity*cast(retail_price_euro as double)else 0 end) as shipped_128_vk_be,
			/*-----------------------------------------------------------Completed-OW-----------------------------------------------------------*/
			sum(case when stock_location_id=2 and state = 1024 then quantity else 0 end) as completed_1024_all, 
			sum(case when stock_location_id=2 and state = 1024 then quantity*cast(purchase_price as double) else 0 end) as completed_1024_ek_all,
			sum(case when stock_location_id=2 and state = 1024 then quantity*cast(retail_price_euro as double) else 0 end)  as completed_1024_vk_all,
			avg(case when stock_location_id=2 and state = 1024 then retail_price_euro else 0 end) as avg_retail_price_1024_all,
			/*------Completed-OW(Country)------*/
			avg(case when shipping_country='DE' and stock_location_id=2 and state = 1024 then retail_price_euro else 0 end) as avg_retail_price_1024_de,
			sum(case when shipping_country='DE' and stock_location_id=2 and state = 1024 then quantity else 0 end) as completed_1024_de, 
			sum(case when shipping_country='DE' and stock_location_id=2 and state = 1024 then quantity*cast(purchase_price as double)else 0 end) as completed_1024_ek_de,
			sum(case when shipping_country='DE' and stock_location_id=2 and state = 1024 then quantity*cast(retail_price_euro as double)else 0 end) as completed_1024_vk_de,
			avg(case when shipping_country='AT' and stock_location_id=2 and state = 1024 then retail_price_euro else 0 end) as avg_retail_price_1024_at,
			sum(case when shipping_country='AT' and stock_location_id=2 and state = 1024 then quantity else 0 end) as completed_1024_at, 
			sum(case when shipping_country='AT' and stock_location_id=2 and state = 1024 then quantity*cast(purchase_price as double)else 0 end) as completed_1024_ek_at,
			sum(case when shipping_country='AT' and stock_location_id=2 and state = 1024 then quantity*cast(retail_price_euro as double)else 0 end) as completed_1024_vk_at,
			avg(case when shipping_country='CH' and stock_location_id=2 and state = 1024 then retail_price_euro else 0 end) as avg_retail_price_1024_ch,
			sum(case when shipping_country='CH' and stock_location_id=2 and state = 1024 then quantity else 0 end) as completed_1024_ch, 
			sum(case when shipping_country='CH' and stock_location_id=2 and state = 1024 then quantity*cast(purchase_price as double)else 0 end) as completed_1024_ek_ch,
			sum(case when shipping_country='CH' and stock_location_id=2 and state = 1024 then quantity*cast(retail_price_euro as double)else 0 end) as completed_1024_vk_ch,
			avg(case when shipping_country='NL' and stock_location_id=2 and state = 1024 then retail_price_euro else 0 end) as avg_retail_price_1024_nl,
			sum(case when shipping_country='NL' and stock_location_id=2 and state = 1024 then quantity else 0 end) as completed_1024_nl, 
			sum(case when shipping_country='NL' and stock_location_id=2 and state = 1024 then quantity*cast(purchase_price as double)else 0 end) as completed_1024_ek_nl,
			sum(case when shipping_country='NL' and stock_location_id=2 and state = 1024 then quantity*cast(retail_price_euro as double)else 0 end) as completed_1024_vk_nl,
			avg(case when shipping_country='DK' and stock_location_id=2 and state = 1024 then retail_price_euro else 0 end) as avg_retail_price_1024_dk,
			sum(case when shipping_country='DK' and stock_location_id=2 and state = 1024 then quantity else 0 end) as completed_1024_dk, 
			sum(case when shipping_country='DK' and stock_location_id=2 and state = 1024 then quantity*cast(purchase_price as double)else 0 end) as completed_1024_ek_dk,
			sum(case when shipping_country='DK' and stock_location_id=2 and state = 1024 then quantity*cast(retail_price_euro as double)else 0 end) as completed_1024_vk_dk,
			avg(case when shipping_country='SE' and stock_location_id=2 and state = 1024 then retail_price_euro else 0 end) as avg_retail_price_1024_se,
			sum(case when shipping_country='SE' and stock_location_id=2 and state = 1024 then quantity else 0 end) as completed_1024_se, 
			sum(case when shipping_country='SE' and stock_location_id=2 and state = 1024 then quantity*cast(purchase_price as double)else 0 end) as completed_1024_ek_se,
			sum(case when shipping_country='SE' and stock_location_id=2 and state = 1024 then quantity*cast(retail_price_euro as double)else 0 end) as completed_1024_vk_se,
			avg(case when shipping_country='LU' and stock_location_id=2 and state = 1024 then retail_price_euro else 0 end) as avg_retail_price_1024_lu,
			sum(case when shipping_country='LU' and stock_location_id=2 and state = 1024 then quantity else 0 end) as completed_1024_lu, 
			sum(case when shipping_country='LU' and stock_location_id=2 and state = 1024 then quantity*cast(purchase_price as double)else 0 end) as completed_1024_ek_lu,
			sum(case when shipping_country='LU' and stock_location_id=2 and state = 1024 then quantity*cast(retail_price_euro as double)else 0 end) as completed_1024_vk_lu,
			avg(case when shipping_country='BE' and stock_location_id=2 and state = 1024 then retail_price_euro else 0 end) as avg_retail_price_1024_be,
			sum(case when shipping_country='BE' and stock_location_id=2 and state = 1024 then quantity else 0 end) as completed_1024_be, 
			sum(case when shipping_country='BE' and stock_location_id=2 and state = 1024 then quantity*cast(purchase_price as double)else 0 end) as completed_1024_ek_be,
			sum(case when shipping_country='BE' and stock_location_id=2 and state = 1024 then quantity*cast(retail_price_euro as double)else 0 end) as completed_1024_vk_be,
			/*-----------------------------------------------------------Returned-OW-----------------------------------------------------------*/
			sum(case when stock_location_id=2 and state = 512 then  quantity else 0 end) as returned_512_all, 
			sum(case when stock_location_id=2 and state = 512 then quantity*cast(purchase_price as double) else 0 end) as returned_512_ek_all,
			sum(case when stock_location_id=2 and state = 512 then quantity*cast(retail_price_euro as double) else 0 end)  as returned_512_vk_all,
			avg(case when stock_location_id=2 and state = 512 then purchase_price else 0 end) as avg_purchase_price_512_all, 
			avg(case when stock_location_id=2 and state = 512 then retail_price_euro else 0 end) as avg_retail_price_512_all,
			/*---------Returned-OW(Country)------------*/
			sum(case when shipping_country='DE' and stock_location_id=2 and state = 512 then  quantity else 0 end) as returned_512_de, 
			sum(case when shipping_country='DE' and stock_location_id=2 and state = 512 then  quantity*cast(purchase_price as double)else 0 end) as returned_512_ek_de,
			sum(case when shipping_country='DE' and stock_location_id=2 and state = 512 then  quantity*cast(retail_price_euro as double)else 0 end) as returned_512_vk_de,
			sum(case when shipping_country='AT' and stock_location_id=2 and state = 512 then  quantity else 0 end) as returned_512_at, 
			sum(case when shipping_country='AT' and stock_location_id=2 and state = 512 then  quantity*cast(purchase_price as double)else 0 end) as returned_512_ek_at,
			sum(case when shipping_country='AT' and stock_location_id=2 and state = 512 then  quantity*cast(retail_price_euro as double)else 0 end) as returned_512_vk_at,
			sum(case when shipping_country='CH' and stock_location_id=2 and state = 512 then  quantity else 0 end) as returned_512_ch, 
			sum(case when shipping_country='CH' and stock_location_id=2 and state = 512 then  quantity*cast(purchase_price as double)else 0 end) as returned_512_ek_ch,
			sum(case when shipping_country='CH' and stock_location_id=2 and state = 512 then  quantity*cast(retail_price_euro as double)else 0 end) as returned_512_vk_ch,
			sum(case when shipping_country='NL' and stock_location_id=2 and state = 512 then  quantity else 0 end) as returned_512_nl, 
			sum(case when shipping_country='NL' and stock_location_id=2 and state = 512 then  quantity*cast(purchase_price as double)else 0 end) as returned_512_ek_nl,
			sum(case when shipping_country='NL' and stock_location_id=2 and state = 512 then  quantity*cast(retail_price_euro as double)else 0 end) as returned_512_vk_nl,
			sum(case when shipping_country='DK' and stock_location_id=2 and state = 512 then  quantity else 0 end) as returned_512_dk, 
			sum(case when shipping_country='DK' and stock_location_id=2 and state = 512 then  quantity*cast(purchase_price as double)else 0 end) as returned_512_ek_dk,
			sum(case when shipping_country='DK' and stock_location_id=2 and state = 512 then  quantity*cast(retail_price_euro as double)else 0 end) as returned_512_vk_dk,
			sum(case when shipping_country='SE' and stock_location_id=2 and state = 512 then  quantity else 0 end) as returned_512_se, 
			sum(case when shipping_country='SE' and stock_location_id=2 and state = 512 then  quantity*cast(purchase_price as double)else 0 end) as returned_512_ek_se,
			sum(case when shipping_country='SE' and stock_location_id=2 and state = 512 then  quantity*cast(retail_price_euro as double)else 0 end) as returned_512_vk_se,
			sum(case when shipping_country='LU' and stock_location_id=2 and state = 512 then  quantity else 0 end) as returned_512_lu, 
			sum(case when shipping_country='LU' and stock_location_id=2 and state = 512 then  quantity*cast(purchase_price as double)else 0 end) as returned_512_ek_lu,
			sum(case when shipping_country='LU' and stock_location_id=2 and state = 512 then  quantity*cast(retail_price_euro as double)else 0 end) as returned_512_vk_lu,
			sum(case when shipping_country='BE' and stock_location_id=2 and state = 512 then  quantity else 0 end) as returned_512_be, 
			sum(case when shipping_country='BE' and stock_location_id=2 and state = 512 then  quantity*cast(purchase_price as double)else 0 end) as returned_512_ek_be,
			sum(case when shipping_country='BE' and stock_location_id=2 and state = 512 then  quantity*cast(retail_price_euro as double)else 0 end) as returned_512_vk_be,
			/*-----------------------------------------------------------Lost-OW-----------------------------------------------------------*/
			sum(case when stock_location_id=2 and state = 1536 and date_shipped is not null then quantity else 0 end) as lost_1536_all,
			sum(case when stock_location_id=2 and state = 1536 and date_shipped is not null then quantity*cast(purchase_price as double) else 0 end) as lost_1536_ek_all,
			sum(case when stock_location_id=2 and state = 1536 and date_shipped is not null then quantity*cast(retail_price_euro as double) else 0 end) as lost_1536_vk_all,
			/*-----------------------------------------------------------Shipped-OW-----------------------------------------------------------*/
			sum(case when stock_location_id=2 and state in (128, 256, 384)  then quantity else 0 end) as sum_virtual_stock_quantity,
			sum(case when stock_location_id=2 and state in (128, 256, 384)  then quantity*cast(purchase_price as double) else 0 end) as sum_ek_stock,
			sum(case when stock_location_id=2 and state in (128, 256, 384)  then quantity*cast(retail_price_euro as double) else 0 end) as sum_vk_stock,
			avg(case when stock_location_id=2 and state in (128, 256, 384)  then cast(purchase_price as double) else 0 end) as avg_virtual_stock_ek,
			avg(case when stock_location_id=2 and state in (128, 256, 384)  then cast(retail_price_euro as double) else 0 end) as avg_virtual_stock_vk,
			/*-----------------------------------------------------------Shipped-Patner-------------------------------------------------------*/
			sum(case when stock_location_id=4 and state !=2048 and date_shipped is not null  then quantity else 0 end) as shipped_128_partner,
			sum(case when stock_location_id=4 and state !=2048 and date_shipped is not null  then quantity*cast(purchase_price as double) else 0 end) as shipped_128_ek_partner,
			sum(case when stock_location_id=4 and state !=2048 and date_shipped is not null  then quantity*cast(retail_price_euro as double) else 0 end) as shipped_128_vk_partner,
			avg(case when stock_location_id=4 and state !=2048 and date_shipped is not null  then cast(purchase_price as double) else 0 end) as avg_purchase_price_128_partner,
			avg(case when stock_location_id=4 and state !=2048 and date_shipped is not null  then cast(retail_price_euro as double) else 0 end) as avg_retail_price_128_partner,
			/*----Shipped-Partner(Country)-----*/
			sum(case when shipping_country='DE' and stock_location_id=4 and state !=2048 and date_shipped is not null then quantity else 0 end) as shipped_128_de_partner, 
			sum(case when shipping_country='DE' and stock_location_id=4 and state !=2048 and date_shipped is not null then quantity*cast(purchase_price as double)else 0 end) as shipped_128_ek_de_partner,
			sum(case when shipping_country='DE' and stock_location_id=4 and state !=2048 and date_shipped is not null then quantity*cast(retail_price_euro as double)else 0 end) as shipped_128_vk_de_partner,
			sum(case when shipping_country='AT' and stock_location_id=4 and state !=2048 and date_shipped is not null then quantity else 0 end) as shipped_128_at_partner, 
			sum(case when shipping_country='AT' and stock_location_id=4 and state !=2048 and date_shipped is not null then quantity*cast(purchase_price as double)else 0 end) as shipped_128_ek_at_partner,
			sum(case when shipping_country='AT' and stock_location_id=4 and state !=2048 and date_shipped is not null then quantity*cast(retail_price_euro as double)else 0 end) as shipped_128_vk_at_partner,
			sum(case when shipping_country='CH' and stock_location_id=4 and state !=2048 and date_shipped is not null then quantity else 0 end) as shipped_128_ch_partner, 
			sum(case when shipping_country='CH' and stock_location_id=4 and state !=2048 and date_shipped is not null then quantity*cast(purchase_price as double)else 0 end) as shipped_128_ek_ch_partner,
			sum(case when shipping_country='CH' and stock_location_id=4 and state !=2048 and date_shipped is not null then quantity*cast(retail_price_euro as double)else 0 end) as shipped_128_vk_ch_partner,
			sum(case when shipping_country='NL' and stock_location_id=4 and state !=2048 and date_shipped is not null then quantity else 0 end) as shipped_128_nl_partner, 
			sum(case when shipping_country='NL' and stock_location_id=4 and state !=2048 and date_shipped is not null then quantity*cast(purchase_price as double)else 0 end) as shipped_128_ek_nl_partner,
			sum(case when shipping_country='NL' and stock_location_id=4 and state !=2048 and date_shipped is not null then quantity*cast(retail_price_euro as double)else 0 end) as shipped_128_vk_nl_partner,
			sum(case when shipping_country='DK' and stock_location_id=4 and state !=2048 and date_shipped is not null then quantity else 0 end) as shipped_128_dk_partner, 
			sum(case when shipping_country='DK' and stock_location_id=4 and state !=2048 and date_shipped is not null then quantity*cast(purchase_price as double)else 0 end) as shipped_128_ek_dk_partner,
			sum(case when shipping_country='DK' and stock_location_id=4 and state !=2048 and date_shipped is not null then quantity*cast(retail_price_euro as double)else 0 end) as shipped_128_vk_dk_partner,
			sum(case when shipping_country='SE' and stock_location_id=4 and state !=2048 and date_shipped is not null then quantity else 0 end) as shipped_128_se_partner, 
			sum(case when shipping_country='SE' and stock_location_id=4 and state !=2048 and date_shipped is not null then quantity*cast(purchase_price as double)else 0 end) as shipped_128_ek_se_partner,
			sum(case when shipping_country='SE' and stock_location_id=4 and state !=2048 and date_shipped is not null then quantity*cast(retail_price_euro as double)else 0 end) as shipped_128_vk_se_partner,
			sum(case when shipping_country='LU' and stock_location_id=4 and state !=2048 and date_shipped is not null then quantity else 0 end) as shipped_128_lu_partner, 
			sum(case when shipping_country='LU' and stock_location_id=4 and state !=2048 and date_shipped is not null then quantity*cast(purchase_price as double)else 0 end) as shipped_128_ek_lu_partner,
			sum(case when shipping_country='LU' and stock_location_id=4 and state !=2048 and date_shipped is not null then quantity*cast(retail_price_euro as double)else 0 end) as shipped_128_vk_lu_partner,
			sum(case when shipping_country='BE' and stock_location_id=4 and state !=2048 and date_shipped is not null then quantity else 0 end) as shipped_128_be_partner, 
			sum(case when shipping_country='BE' and stock_location_id=4 and state !=2048 and date_shipped is not null then quantity*cast(purchase_price as double)else 0 end) as shipped_128_ek_be_partner,
			sum(case when shipping_country='BE' and stock_location_id=4 and state !=2048 and date_shipped is not null then quantity*cast(retail_price_euro as double)else 0 end) as shipped_128_vk_be_partner,
			/*-----------------------------------------------------------Completed-Patner-----------------------------------------------------------*/
			sum(case when stock_location_id=4 and state = 1024 then quantity else 0 end) as completed_1024_partner,
			sum(case when stock_location_id=4 and state = 1024 then quantity*cast(purchase_price as double) else 0 end) as completed_1024_ek_partner,
			sum(case when stock_location_id=4 and state = 1024 then quantity*cast(retail_price_euro as double) else 0 end) as completed_1024_vk_partner,
			avg(case when stock_location_id=4 and state = 1024 then cast(purchase_price as double) else 0 end) as avg_purchase_price_1024_partner,
			avg(case when stock_location_id=4 and state = 1024 then cast(retail_price_euro as double) else 0 end) as avg_retail_price_1024_partner,
			/*----*Completed-Partner(Country)----*/
			avg(case when shipping_country='DE' and stock_location_id=4 and state = 1024 then retail_price_euro else 0 end) as avg_retail_price_1024_de_partner,
			sum(case when shipping_country='DE' and stock_location_id=4 and state = 1024 then quantity else 0 end) as completed_1024_de_partner, 
			sum(case when shipping_country='DE' and stock_location_id=4 and state = 1024 then quantity*cast(purchase_price as double)else 0 end) as completed_1024_ek_de_partner,
			sum(case when shipping_country='DE' and stock_location_id=4 and state = 1024 then quantity*cast(retail_price_euro as double)else 0 end) as completed_1024_vk_de_partner,
			avg(case when shipping_country='AT' and stock_location_id=4 and state = 1024 then retail_price_euro else 0 end) as avg_retail_price_1024_at_partner,
			sum(case when shipping_country='AT' and stock_location_id=4 and state = 1024 then quantity else 0 end) as completed_1024_at_partner, 
			sum(case when shipping_country='AT' and stock_location_id=4 and state = 1024 then quantity*cast(purchase_price as double)else 0 end) as completed_1024_ek_at_partner,
			sum(case when shipping_country='AT' and stock_location_id=4 and state = 1024 then quantity*cast(retail_price_euro as double)else 0 end) as completed_1024_vk_at_partner,
			avg(case when shipping_country='CH' and stock_location_id=4 and state = 1024 then retail_price_euro else 0 end) as avg_retail_price_1024_ch_partner,
			sum(case when shipping_country='CH' and stock_location_id=4 and state = 1024 then quantity else 0 end) as completed_1024_ch_partner, 
			sum(case when shipping_country='CH' and stock_location_id=4 and state = 1024 then quantity*cast(purchase_price as double)else 0 end) as completed_1024_ek_ch_partner,
			sum(case when shipping_country='CH' and stock_location_id=4 and state = 1024 then quantity*cast(retail_price_euro as double)else 0 end) as completed_1024_vk_ch_partner,
			avg(case when shipping_country='NL' and stock_location_id=4 and state = 1024 then retail_price_euro else 0 end) as avg_retail_price_1024_nl_partner,
			sum(case when shipping_country='NL' and stock_location_id=4 and state = 1024 then quantity else 0 end) as completed_1024_nl_partner, 
			sum(case when shipping_country='NL' and stock_location_id=4 and state = 1024 then quantity*cast(purchase_price as double)else 0 end) as completed_1024_ek_nl_partner,
			sum(case when shipping_country='NL' and stock_location_id=4 and state = 1024 then quantity*cast(retail_price_euro as double)else 0 end) as completed_1024_vk_nl_partner,
			avg(case when shipping_country='DK' and stock_location_id=4 and state = 1024 then retail_price_euro else 0 end) as avg_retail_price_1024_dk_partner,
			sum(case when shipping_country='DK' and stock_location_id=4 and state = 1024 then quantity else 0 end) as completed_1024_dk_partner, 
			sum(case when shipping_country='DK' and stock_location_id=4 and state = 1024 then quantity*cast(purchase_price as double)else 0 end) as completed_1024_ek_dk_partner,
			sum(case when shipping_country='DK' and stock_location_id=4 and state = 1024 then quantity*cast(retail_price_euro as double)else 0 end) as completed_1024_vk_dk_partner,
			avg(case when shipping_country='SE' and stock_location_id=4 and state = 1024 then retail_price_euro else 0 end) as avg_retail_price_1024_se_partner,
			sum(case when shipping_country='SE' and stock_location_id=4 and state = 1024 then quantity else 0 end) as completed_1024_se_partner, 
			sum(case when shipping_country='SE' and stock_location_id=4 and state = 1024 then quantity*cast(purchase_price as double)else 0 end) as completed_1024_ek_se_partner,
			sum(case when shipping_country='SE' and stock_location_id=4 and state = 1024 then quantity*cast(retail_price_euro as double)else 0 end) as completed_1024_vk_se_partner,
			avg(case when shipping_country='LU' and stock_location_id=4 and state = 1024 then retail_price_euro else 0 end) as avg_retail_price_1024_lu_partner,
			sum(case when shipping_country='LU' and stock_location_id=4 and state = 1024 then quantity else 0 end) as completed_1024_lu_partner, 
			sum(case when shipping_country='LU' and stock_location_id=4 and state = 1024 then quantity*cast(purchase_price as double)else 0 end) as completed_1024_ek_lu_partner,
			sum(case when shipping_country='LU' and stock_location_id=4 and state = 1024 then quantity*cast(retail_price_euro as double)else 0 end) as completed_1024_vk_lu_partner,
			avg(case when shipping_country='BE' and stock_location_id=4 and state = 1024 then retail_price_euro else 0 end) as avg_retail_price_1024_be_partner,
			sum(case when shipping_country='BE' and stock_location_id=4 and state = 1024 then quantity else 0 end) as completed_1024_be_partner, 
			sum(case when shipping_country='BE' and stock_location_id=4 and state = 1024 then quantity*cast(purchase_price as double)else 0 end) as completed_1024_ek_be_partner,
			sum(case when shipping_country='BE' and stock_location_id=4 and state = 1024 then quantity*cast(retail_price_euro as double)else 0 end) as completed_1024_vk_be_partner,
			/*-----------------------------------------------------------Returned-Patner-----------------------------------------------------------*/
			sum(case when stock_location_id=4 and state = 512 then quantity else 0 end) as returned_512_partner,
			sum(case when stock_location_id=4 and state = 512 then quantity*cast(purchase_price as double) else 0 end) as returned_512_ek_partner,
			sum(case when stock_location_id=4 and state = 512 then quantity*cast(retail_price_euro as double) else 0 end) as returned_512_vk_partner,
			avg(case when stock_location_id=4 and state = 512 then cast(purchase_price as double) else 0 end) as avg_purchase_price_512_partner,
			avg(case when stock_location_id=4 and state = 512 then cast(retail_price_euro as double) else 0 end) as avg_retail_price_512_partner,
			/*-----------------------------------------------------------Verschickt-Patner-----------------------------------------------------------*/
			sum(case when stock_location_id=4 and state in (128, 256, 384)  then quantity else 0 end) as sum_virtual_stock_quantity_partner,
			sum(case when stock_location_id=4 and state in (128, 256, 384)  then quantity*cast(purchase_price as double) else 0 end) as sum_ek_stock_partner,
			sum(case when stock_location_id=4 and state in (128, 256, 384)  then quantity*cast(retail_price_euro as double) else 0 end) as sum_vk_stock_partner,
			avg(case when stock_location_id=4 and state in (128, 256, 384)  then cast(purchase_price as double) else 0 end) as avg_virtual_stock_ek_partner,
			avg(case when stock_location_id=4 and state in (128, 256, 384)  then cast(retail_price_euro as double) else 0 end) as avg_virtual_stock_vk_partner
		FROM views.order_position
		WHERE state <> 2048 and date_shipped is not null
		GROUP BY 1,2
	) shipped
	GROUP BY 1,2
) sales on sales.article_id = inv.article_id AND sales.date_shipped = inv.date_created

WHERE
	case 
		when inv.date_created is not null then inv.date_created
		when inv.date_created is null then sales.date_shipped
	end >='2014-01-01'


