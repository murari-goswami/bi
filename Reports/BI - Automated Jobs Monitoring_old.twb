<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9100.15.0828.1711                                -->
<workbook source-platform='win' version='9.1' xml:base='http://10.0.0.51' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location derived-from='http://10.0.0.51/workbooks/BI-AutomatedJobsMonitoring?rev=4.1' id='BI-AutomatedJobsMonitoring' path='/workbooks' revision='4.3' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='DV Failures' inline='true' name='genericodbc.41969.773509710649' version='9.1'>
      <connection class='genericodbc' dbname='datavirtuality' odbc-connect-string-extras='SSLmode=disable;ReadOnly=0;Protocol=7.4;FakeOidIndex=0;ShowOidColumn=0;RowVersioning=0;ShowSystemTables=0;ConnSettings=;Fetch=10000;Socket=4096;UnknownSizes=0;MaxVarcharSize=8000;MaxLongVarcharSize=8190;Debug=0;CommLog=0;Optimizer=0;Ksqo=0;UseDeclareFetch=1;TextAsLongVarchar=1;UseTransactionOnDeclareFetch=0;bracketsReplacements=0;minMemBlockSize=1000000;predictMemCellCount=10;blockCountForGcStart=100;maxFields=2048;UnknownsAsLongVarchar=0;BoolsAsChar=1;Parse=1;CancelAsFreeStmt=0;ExtraSysTablePrefixes=dd_;LFConversion=0;UpdatableCursors=1;DisallowPremature=0;TrueIsMinus1=0;BI=0;ByteaAsLongVarBinary=1;UseServerSidePrepare=1;LowerCaseIdentifier=0;GssAuthUseGSS=0' odbc-dbms-name='DataVirtuality' odbc-driver='DataVirtuality Unicode(x64)' odbc-dsn='DataVirtuality64' odbc-suppress-connection-pooling='' odbc-use-connection-pooling='' port='35432' server='10.0.0.54' username='admin'>
        <relation name='monitoring_dv_failures' table='[tableau].[monitoring_dv_failures]' type='table' />
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>job_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[job_name]</local-name>
            <parent-name>[monitoring_dv_failures]</parent-name>
            <remote-alias>job_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4000</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>job_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[job_type]</local-name>
            <parent-name>[monitoring_dv_failures]</parent-name>
            <remote-alias>job_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4000</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_time]</local-name>
            <parent-name>[monitoring_dv_failures]</parent-name>
            <remote-alias>start_time</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mins</remote-name>
            <remote-type>131</remote-type>
            <local-name>[mins]</local-name>
            <parent-name>[monitoring_dv_failures]</parent-name>
            <remote-alias>mins</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>-1</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[monitoring_dv_failures]</parent-name>
            <remote-alias>status</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4000</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>failure_reason</remote-name>
            <remote-type>130</remote-type>
            <local-name>[failure_reason]</local-name>
            <parent-name>[monitoring_dv_failures]</parent-name>
            <remote-alias>failure_reason</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4000</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Failure Reason' datatype='string' name='[failure_reason]' role='dimension' type='nominal' />
      <column caption='Job Name' datatype='string' name='[job_name]' role='dimension' type='nominal' />
      <column caption='Job Type' datatype='string' name='[job_type]' role='dimension' type='nominal' />
      <column caption='Mins' datatype='real' name='[mins]' role='measure' type='quantitative' />
      <column caption='Start Time' datatype='datetime' name='[start_time]' role='dimension' type='ordinal' />
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
      <extract count='-1' enabled='false' units='records'>
        <connection class='dataengine' dbname='C:\Users\ps328\AppData\Local\Temp\TableauTemp\0jas0fo0l0jeg916po9r3022b0j2.tmp' schema='Extract' tablename='Extract' update-time='09/11/2015 04:42:18 PM' updated-database='C:\Users\ps328\AppData\Local\Temp\TableauTemp\0e9aon215qc7j71dd6fl21mrkv4e.tde'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='5' timestamp-start='2015-09-11 16:42:18.429' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>failure_reason</remote-name>
              <remote-type>129</remote-type>
              <local-name>[failure_reason]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>failure_reason</remote-alias>
              <ordinal>1</ordinal>
              <family>monitoring_dv_failures</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>4000</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;com.datavirtuality.dv.core.replicator.ReplicatorException: com.datavirtuality.dv.core.replicator.ReplicatorException: Error i&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;org.teiid.client.ProcedureErrorInstructionException: TEIID30167 org.teiid.jdbc.TeiidSQLException: Another \&quot;cs_desk_populate_s&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>job_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[job_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>job_name</remote-alias>
              <ordinal>2</ordinal>
              <family>monitoring_dv_failures</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>4000</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Desk Populate Stagged Report&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;raw.marketing_voucher_campaign_details&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>job_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[job_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>job_type</remote-alias>
              <ordinal>3</ordinal>
              <family>monitoring_dv_failures</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>4000</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;optimisation&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;sql&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mins</remote-name>
              <remote-type>5</remote-type>
              <local-name>[mins]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mins</remote-alias>
              <ordinal>4</ordinal>
              <family>monitoring_dv_failures</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.02</statistic>
                <statistic aggregation='Max' datatype='real'>56.5</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start_time</remote-name>
              <remote-type>135</remote-type>
              <local-name>[start_time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start_time</remote-alias>
              <ordinal>5</ordinal>
              <family>monitoring_dv_failures</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2015-09-11 09:57:07#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2015-09-11 18:39:43#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>status</remote-alias>
              <ordinal>6</ordinal>
              <family>monitoring_dv_failures</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>4000</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;FAILED&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;RUNNING&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Last 3 Hours Queries' inline='true' name='genericodbc.42262.434083206019' version='9.1'>
      <connection class='genericodbc' dbname='datavirtuality' odbc-connect-string-extras='SSLmode=disable;ReadOnly=0;Protocol=7.4;FakeOidIndex=0;ShowOidColumn=0;RowVersioning=0;ShowSystemTables=0;ConnSettings=;Fetch=10000;Socket=4096;UnknownSizes=0;MaxVarcharSize=8000;MaxLongVarcharSize=8190;Debug=0;CommLog=0;Optimizer=0;Ksqo=0;UseDeclareFetch=1;TextAsLongVarchar=1;UseTransactionOnDeclareFetch=0;bracketsReplacements=0;minMemBlockSize=1000000;predictMemCellCount=10;blockCountForGcStart=100;maxFields=2048;UnknownsAsLongVarchar=0;BoolsAsChar=1;Parse=1;CancelAsFreeStmt=0;ExtraSysTablePrefixes=dd_;LFConversion=0;UpdatableCursors=1;DisallowPremature=0;TrueIsMinus1=0;BI=0;ByteaAsLongVarBinary=1;UseServerSidePrepare=1;LowerCaseIdentifier=0;GssAuthUseGSS=0' odbc-dbms-name='DataVirtuality' odbc-driver='DataVirtuality Unicode(x64)' odbc-dsn='DataVirtuality64' odbc-suppress-connection-pooling='' odbc-use-connection-pooling='' port='35432' server='10.0.0.54' username='admin'>
        <relation name='dv_queries_last_Dhours' table='[tableau].[dv_queries_last_3hours]' type='table' />
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>131</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[dv_queries_last_Dhours]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>28</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>startTime</remote-name>
            <remote-type>7</remote-type>
            <local-name>[startTime]</local-name>
            <parent-name>[dv_queries_last_Dhours]</parent-name>
            <remote-alias>startTime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>endTime</remote-name>
            <remote-type>7</remote-type>
            <local-name>[endTime]</local-name>
            <parent-name>[dv_queries_last_Dhours]</parent-name>
            <remote-alias>endTime</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[dv_queries_last_Dhours]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>128</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>issuer</remote-name>
            <remote-type>130</remote-type>
            <local-name>[issuer]</local-name>
            <parent-name>[dv_queries_last_Dhours]</parent-name>
            <remote-alias>issuer</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>512</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='End Time' datatype='datetime' name='[endTime]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='real' name='[id]' role='dimension' type='ordinal' />
      <column caption='Issuer' datatype='string' name='[issuer]' role='dimension' type='nominal' />
      <column caption='Start Time' datatype='datetime' name='[startTime]' role='dimension' type='ordinal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='false' units='records'>
        <connection class='dataengine' dbname='C:\Users\ps328\AppData\Local\Temp\TableauTemp\Custom_SQL_Query (datavirtuality).tde' schema='Extract' tablename='Extract' update-time='09/15/2015 09:13:48 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='2446' timestamp-start='2015-09-15 09:13:48.293' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>endTime</remote-name>
              <remote-type>135</remote-type>
              <local-name>[endTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>endTime</remote-alias>
              <ordinal>0</ordinal>
              <family>Custom_SQL_Query</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1705</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2015-09-15 00:00:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2015-09-15 11:13:49#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>4</remote-type>
              <local-name>[id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>1</ordinal>
              <family>Custom_SQL_Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2446</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1288943.0</statistic>
                <statistic aggregation='Max' datatype='real'>1291388.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>issuer</remote-name>
              <remote-type>129</remote-type>
              <local-name>[issuer]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>issuer</remote-alias>
              <ordinal>2</ordinal>
              <family>Custom_SQL_Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <scale>1</scale>
              <width>512</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;admin&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;system&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2048</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>startTime</remote-name>
              <remote-type>135</remote-type>
              <local-name>[startTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>startTime</remote-alias>
              <ordinal>3</ordinal>
              <family>Custom_SQL_Query</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1244</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2015-09-15 00:00:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2015-09-15 11:13:47#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>4</ordinal>
              <family>Custom_SQL_Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>128</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;FAILED&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;SUCCESS&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>512</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#2ca02c'>
              <bucket>&quot;SUCCESS&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;FAILED&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;RUNNING&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Tableau Failure' inline='true' name='postgres.42193.404858935188' version='9.1'>
      <connection class='postgres' dbname='workgroup' odbc-native-protocol='yes' port='8060' server='10.0.0.51' server-oauth='' username='tableau' workgroup-auth-mode='prompt'>
        <relation name='Custom SQL Query' type='text'>select&#13;&#10;&#9;id, &#13;&#10;&#9;title,&#13;&#10;&#9;args,&#13;&#10;&#9;notes,&#13;&#10;&#9;updated_at,&#13;&#10;&#9;started_at,&#13;&#10;&#9;subtitle&#13;&#10;from background_jobs&#13;&#10;where (lower(subtitle) = &apos;workbook&apos; or lower(subtitle) like &apos;data%source&apos;)&#13;&#10;&#9;and (lower(notes) not like &apos;%finished%&apos;)</relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>args</remote-name>
            <remote-type>130</remote-type>
            <local-name>[args]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>args</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>notes</remote-name>
            <remote-type>130</remote-type>
            <local-name>[notes]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>notes</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>updated_at</remote-name>
            <remote-type>7</remote-type>
            <local-name>[updated_at]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>updated_at</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>started_at</remote-name>
            <remote-type>7</remote-type>
            <local-name>[started_at]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>started_at</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subtitle</remote-name>
            <remote-type>130</remote-type>
            <local-name>[subtitle]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>subtitle</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Status' datatype='string' name='[Calculation_9600708095741599]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&apos;Failed&apos;' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='false' units='records'>
        <connection class='dataengine' dbname='C:\Users\ps328\AppData\Local\Temp\TableauTemp\0pojbq50wo0yl9149htzw0ao6djb.tmp' schema='Extract' tablename='Extract' update-time='09/11/2015 04:42:38 PM' updated-database='C:\Users\ps328\AppData\Local\Temp\TableauTemp\19ugda50m5bafi17tib0c1p2dc7l.tde'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='169' timestamp-start='2015-09-11 16:42:38.324' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>args</remote-name>
              <remote-type>129</remote-type>
              <local-name>[args]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>args</remote-alias>
              <ordinal>1</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>81</approx-count>
              <scale>1</scale>
              <width>8190</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;---&#10;- Datasource&#10;- 405&#10;- Marketing Data&#10;- 987&#10;- null&#10;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;---&#10;- Workbook&#10;- 7619&#10;- Mkt - 2 Marketing peformance dashboard&#10;- 2107&#10;- null&#10;&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>32760</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>3</remote-type>
              <local-name>[id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>2</ordinal>
              <family>Custom SQL Query</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>169</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>674882</statistic>
                <statistic aggregation='Max' datatype='integer'>715606</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>notes</remote-name>
              <remote-type>129</remote-type>
              <local-name>[notes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>notes</remote-alias>
              <ordinal>3</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>40</approx-count>
              <scale>1</scale>
              <width>8190</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Cleaned up this failed job.&#10;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;java.lang.RuntimeException: Error refreshing extracts for Workbook: &apos;Mkt - Outfittery Club Dashboard&apos;&#10;Errors occurred whil&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>32760</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>started_at</remote-name>
              <remote-type>135</remote-type>
              <local-name>[started_at]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>started_at</remote-alias>
              <ordinal>4</ordinal>
              <family>Custom SQL Query</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>168</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2015-08-13 07:30:30.539#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2015-09-11 09:00:32.072#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>subtitle</remote-name>
              <remote-type>129</remote-type>
              <local-name>[subtitle]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>subtitle</remote-alias>
              <ordinal>5</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Data Source&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Workbook&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[title]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>title</remote-alias>
              <ordinal>6</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>66</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Accounting - Monthly orders and returns for accounting report&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Visits and Funnel Conversion Report&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>updated_at</remote-name>
              <remote-type>135</remote-type>
              <local-name>[updated_at]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>updated_at</remote-alias>
              <ordinal>7</ordinal>
              <family>Custom SQL Query</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>167</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2015-08-13 07:34:18.518#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2015-09-11 10:56:00.147#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Tableau Workbooks' inline='true' name='genericodbc.41967.726792106485' version='9.1'>
      <connection class='genericodbc' dbname='workgroup' odbc-connect-string-extras='SSLmode=disable;ReadOnly=0;Protocol=7.4;FakeOidIndex=0;ShowOidColumn=0;RowVersioning=0;ShowSystemTables=0;ConnSettings=;Fetch=100;Socket=4096;UnknownSizes=0;MaxVarcharSize=255;MaxLongVarcharSize=8190;Debug=0;CommLog=0;Optimizer=0;Ksqo=1;UseDeclareFetch=0;TextAsLongVarchar=1;UnknownsAsLongVarchar=0;BoolsAsChar=1;Parse=0;CancelAsFreeStmt=0;ExtraSysTablePrefixes=dd_;LFConversion=1;UpdatableCursors=1;DisallowPremature=0;TrueIsMinus1=0;BI=0;ByteaAsLongVarBinary=0;UseServerSidePrepare=1;LowerCaseIdentifier=0;GssAuthUseGSS=0;XaOpt=1' odbc-dbms-name='PostgreSQL' odbc-driver='PostgreSQL Unicode(x64)' odbc-dsn='' odbc-suppress-connection-pooling='' odbc-use-connection-pooling='' port='8060' schema='' server='10.0.0.51' username='tableau'>
        <relation name='Custom_SQL_Query' type='text'>select&#13;&#10;&#9;case &#13;&#10;&#9;&#9;when w.name is not null then w.name &#13;&#10;&#9;&#9;when d.name is not null then d.name &#13;&#10;&#9;&#9;else b.title &#13;&#10;&#9;end as background_job,&#13;&#10;&#9;case when w.name is not null then &apos;Workbook&apos; else &apos;Data Source&apos; end as background_job_type,&#13;&#10;&#9;p.name as project_name,&#13;&#10;&#9;b.started_at + interval &apos;1 HOUR&apos; as start_time,&#13;&#10;&#9;b.completed_at + interval &apos;1 HOUR&apos; as end_time,&#13;&#10;&#9;case &#13;&#10;&#9;&#9;when b.completed_at is null then round(cast(extract(epoch from now() - b.started_at)/60 as decimal),2)&#13;&#10;&#9;&#9;else round(cast(extract(epoch from b.completed_at - b.started_at)/60 as decimal),2) &#13;&#10;&#9;end as mins,&#13;&#10;&#9;case &#13;&#10;&#9;&#9;when b.finish_code = 0 then &apos;finished&apos; &#13;&#10;&#9;&#9;when b.completed_at is null then &apos;running&apos;&#13;&#10;&#9;&#9;else &apos;failed&apos; &#13;&#10;&#9;end as status,&#13;&#10;&#9;b.subtitle, &#13;&#10;&#9;cast(b.started_at as date) as start_date&#13;&#10;from public.background_jobs b &#13;&#10;&#9;left join public.workbooks w on w.name = b.title and lower(b.subtitle) = &apos;workbook&apos;&#13;&#10;&#9;left join public.projects p on w.project_id = p.id&#13;&#10;&#9;left join public.datasources d on d.name = b.title and lower(b.subtitle) like &apos;data%source&apos;&#13;&#10;where (lower(b.subtitle) = &apos;workbook&apos; or lower(b.subtitle) like &apos;data%source&apos;)&#13;&#10;&#9;and (w.name is not null or d.name is not null)</relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>background_job</remote-name>
            <remote-type>130</remote-type>
            <local-name>[background_job]</local-name>
            <parent-name>[Custom_SQL_Query]</parent-name>
            <remote-alias>background_job</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>background_job_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[background_job_type]</local-name>
            <parent-name>[Custom_SQL_Query]</parent-name>
            <remote-alias>background_job_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>project_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[project_name]</local-name>
            <parent-name>[Custom_SQL_Query]</parent-name>
            <remote-alias>project_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_time]</local-name>
            <parent-name>[Custom_SQL_Query]</parent-name>
            <remote-alias>start_time</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[end_time]</local-name>
            <parent-name>[Custom_SQL_Query]</parent-name>
            <remote-alias>end_time</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mins</remote-name>
            <remote-type>131</remote-type>
            <local-name>[mins]</local-name>
            <parent-name>[Custom_SQL_Query]</parent-name>
            <remote-alias>mins</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>28</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[Custom_SQL_Query]</parent-name>
            <remote-alias>status</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subtitle</remote-name>
            <remote-type>130</remote-type>
            <local-name>[subtitle]</local-name>
            <parent-name>[Custom_SQL_Query]</parent-name>
            <remote-alias>subtitle</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_date]</local-name>
            <parent-name>[Custom_SQL_Query]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Duration in Days' datatype='real' name='[Calculation_7231124172903168]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(DATEDIFF(&apos;second&apos;, [start_time], [end_time]) )/86400' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[status]' role='dimension' type='nominal' />
      <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:status:nk]' type='palette'>
            <map to='#2ca02c'>
              <bucket>&quot;finished&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;running&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;failed&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='DV Optimisations' inline='true' name='genericodbc.41967.458518171297' version='9.1'>
      <connection class='genericodbc' dbname='datavirtuality' odbc-connect-string-extras='SSLmode=disable;ReadOnly=0;Protocol=7.4;FakeOidIndex=0;ShowOidColumn=0;RowVersioning=0;ShowSystemTables=0;ConnSettings=;Fetch=10000;Socket=4096;UnknownSizes=0;MaxVarcharSize=8000;MaxLongVarcharSize=8190;Debug=0;CommLog=0;Optimizer=0;Ksqo=0;UseDeclareFetch=1;TextAsLongVarchar=1;UseTransactionOnDeclareFetch=0;bracketsReplacements=0;minMemBlockSize=1000000;predictMemCellCount=10;blockCountForGcStart=100;maxFields=2048;UnknownsAsLongVarchar=0;BoolsAsChar=1;Parse=1;CancelAsFreeStmt=0;ExtraSysTablePrefixes=dd_;LFConversion=0;UpdatableCursors=1;DisallowPremature=0;TrueIsMinus1=0;BI=0;ByteaAsLongVarBinary=1;UseServerSidePrepare=1;LowerCaseIdentifier=0;GssAuthUseGSS=0' odbc-dbms-name='DataVirtuality' odbc-driver='DataVirtuality Unicode(x64)' odbc-dsn='DataVirtuality64' odbc-suppress-connection-pooling='' odbc-use-connection-pooling='' port='35432' schema='' server='10.0.0.54' username='admin'>
        <relation name='monitoring_dv_optimizations' table='[tableau].[monitoring_dv_optimizations]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>job_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[job_type]</local-name>
            <parent-name>[monitoring_dv_optimizations]</parent-name>
            <remote-alias>job_type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4000</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>job_id</remote-name>
            <remote-type>131</remote-type>
            <local-name>[job_id]</local-name>
            <parent-name>[monitoring_dv_optimizations]</parent-name>
            <remote-alias>job_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>28</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>job_run_time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[job_run_time]</local-name>
            <parent-name>[monitoring_dv_optimizations]</parent-name>
            <remote-alias>job_run_time</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4000</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>job_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[job_name]</local-name>
            <parent-name>[monitoring_dv_optimizations]</parent-name>
            <remote-alias>job_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4000</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data_source</remote-name>
            <remote-type>130</remote-type>
            <local-name>[data_source]</local-name>
            <parent-name>[monitoring_dv_optimizations]</parent-name>
            <remote-alias>data_source</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4000</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_time]</local-name>
            <parent-name>[monitoring_dv_optimizations]</parent-name>
            <remote-alias>start_time</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[end_time]</local-name>
            <parent-name>[monitoring_dv_optimizations]</parent-name>
            <remote-alias>end_time</remote-alias>
            <ordinal>7</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mins</remote-name>
            <remote-type>131</remote-type>
            <local-name>[mins]</local-name>
            <parent-name>[monitoring_dv_optimizations]</parent-name>
            <remote-alias>mins</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>-1</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[monitoring_dv_optimizations]</parent-name>
            <remote-alias>status</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4000</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>failure_reason</remote-name>
            <remote-type>130</remote-type>
            <local-name>[failure_reason]</local-name>
            <parent-name>[monitoring_dv_optimizations]</parent-name>
            <remote-alias>failure_reason</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[genericodbc.41967.458518171297].[sum:Number of Records:qk]&quot;' value='# Times Run' />
        </aliases>
      </column>
      <column caption='Duration in Days' datatype='real' name='[Calculation_4211124123439587]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(DATEDIFF(&apos;second&apos;, [start_time], [end_time]) )/86400' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Data Source' datatype='string' name='[data_source]' role='dimension' type='nominal' />
      <column caption='End Time' datatype='datetime' name='[end_time]' role='dimension' type='ordinal' />
      <column caption='Failure Reason' datatype='string' name='[failure_reason]' role='dimension' type='nominal' />
      <column caption='Job Id' datatype='real' name='[job_id]' role='dimension' type='ordinal' />
      <column caption='Job Name' datatype='string' name='[job_name]' role='dimension' type='nominal' />
      <column caption='Job Run Time' datatype='string' name='[job_run_time]' role='dimension' type='nominal' />
      <column caption='Job Type' datatype='string' name='[job_type]' role='dimension' type='nominal' />
      <column caption='Mins' datatype='real' name='[mins]' role='measure' type='quantitative' />
      <column caption='Start Time' datatype='datetime' name='[start_time]' role='dimension' type='ordinal' />
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
      <column-instance column='[job_name]' derivation='None' name='[none:job_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:job_name:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Monitoring DWH&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Monitoring DWH mat_tables&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Monitoring DWH views NOOPT&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;dv_test_views_inventory3&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;views.deskcom_cases&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Monitoring Postgres Slave&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Monitoring PIM&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;dv_test_views_inventory_2&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;NL DHL New Entry&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Monitoring DWH views&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:status:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;FAILED&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;finished&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;SUCCESS&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;running&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;failed&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;INTERRUPTED&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;interrupte&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;interrupted&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='DV Incomplete Jobs'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
            <run> last updated at </run>
            <run>&lt;</run>
            <run>Data Update Time</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='http://localhost:9101/workbooks/BI-AutomatedJobsMonitoring/DVIncompleteJobs?rev=' id='DVIncompleteJobs' path='/workbooks/BI-AutomatedJobsMonitoring' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='DV Failures' name='genericodbc.41969.773509710649' />
          </datasources>
          <datasource-dependencies datasource='genericodbc.41969.773509710649'>
            <column caption='Job Name' datatype='string' name='[job_name]' role='dimension' type='nominal' />
            <column caption='Mins' datatype='real' name='[mins]' role='measure' type='quantitative' />
            <column-instance column='[job_name]' derivation='None' name='[none:job_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_time]' derivation='None' name='[none:start_time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column caption='Start Time' datatype='datetime' name='[start_time]' role='dimension' type='ordinal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
            <column-instance column='[mins]' derivation='Sum' name='[sum:mins:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <sort class='alphabetic' column='[genericodbc.41969.773509710649].[none:start_time:ok]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='hnlabel' value='vertical' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='84' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[genericodbc.41969.773509710649].[none:job_name:nk]' value='216' />
            <format attr='width' field='[genericodbc.41969.773509710649].[none:status:nk]' value='88' />
            <format attr='width' field='[genericodbc.41969.773509710649].[none:start_time:ok]' value='112' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='wrap' value='on' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[genericodbc.41969.773509710649].[sum:mins:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([genericodbc.41969.773509710649].[none:job_name:nk] / ([genericodbc.41969.773509710649].[none:start_time:ok] / [genericodbc.41969.773509710649].[none:status:nk]))</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='DV Jobs Failure Reason'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
            <run> last updated at </run>
            <run>&lt;</run>
            <run>Data Update Time</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='http://localhost:9101/workbooks/BI-AutomatedJobsMonitoring/DVIncompleteJobsFailureReason?rev=' id='DVIncompleteJobsFailureReason' path='/workbooks/BI-AutomatedJobsMonitoring' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='DV Failures' name='genericodbc.41969.773509710649' />
          </datasources>
          <datasource-dependencies datasource='genericodbc.41969.773509710649'>
            <column caption='Failure Reason' datatype='string' name='[failure_reason]' role='dimension' type='nominal' />
            <column caption='Job Name' datatype='string' name='[job_name]' role='dimension' type='nominal' />
            <column-instance column='[failure_reason]' derivation='None' name='[none:failure_reason:nk]' pivot='key' type='nominal' />
            <column-instance column='[job_name]' derivation='None' name='[none:job_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_time]' derivation='None' name='[none:start_time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column caption='Start Time' datatype='datetime' name='[start_time]' role='dimension' type='ordinal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='alphabetic' column='[genericodbc.41969.773509710649].[none:start_time:ok]' direction='ASC' />
          <filter class='categorical' column='[genericodbc.41969.773509710649].[none:status:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:status:nk]' member='&quot;FAILED&quot;' />
              <groupfilter function='member' level='[none:status:nk]' member='&quot;INTERRUPTED&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[genericodbc.41969.773509710649].[none:status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='hnlabel' value='vertical' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='84' />
            <format attr='wrap' field='[genericodbc.41969.773509710649].[none:failure_reason:nk]' value='on' />
            <format attr='text-align' field='[genericodbc.41969.773509710649].[none:failure_reason:nk]' value='auto' />
            <format attr='text-orientation' field='[genericodbc.41969.773509710649].[none:failure_reason:nk]' value='90' />
            <format attr='height' field='[genericodbc.41969.773509710649].[none:failure_reason:nk]' value='128' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[genericodbc.41969.773509710649].[none:job_name:nk]' value='240' />
            <format attr='width' field='[genericodbc.41969.773509710649].[none:status:nk]' value='84' />
            <format attr='width' field='[genericodbc.41969.773509710649].[none:start_time:ok]' value='112' />
            <format attr='text-align' data-class='total' field='[genericodbc.41969.773509710649].[none:failure_reason:nk]' value='center' />
            <format attr='width' field='[genericodbc.41969.773509710649].[none:failure_reason:nk]' value='388' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='wrap' value='on' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[genericodbc.41969.773509710649].[none:failure_reason:nk]' value='on' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([genericodbc.41969.773509710649].[none:job_name:nk] / ([genericodbc.41969.773509710649].[none:start_time:ok] / ([genericodbc.41969.773509710649].[none:status:nk] / [genericodbc.41969.773509710649].[none:failure_reason:nk])))</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='DV Speed'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Data Virtuality Monitoring by Source last updated at </run>
            <run>&lt;</run>
            <run>Data Update Time</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='http://localhost:9101/workbooks/BI-AutomatedJobsMonitoring/DVSpeed?rev=' id='DVSpeed' path='/workbooks/BI-AutomatedJobsMonitoring' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='DV Optimisations' name='genericodbc.41967.458518171297' />
          </datasources>
          <datasource-dependencies datasource='genericodbc.41967.458518171297'>
            <column caption='Job Name' datatype='string' name='[job_name]' role='dimension' type='nominal' />
            <column caption='Mins' datatype='real' name='[mins]' role='measure' type='quantitative' />
            <column-instance column='[job_name]' derivation='None' name='[none:job_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_time]' derivation='None' name='[none:start_time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column caption='Start Time' datatype='datetime' name='[start_time]' role='dimension' type='ordinal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
            <column-instance column='[mins]' derivation='Sum' name='[sum:mins:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[genericodbc.41967.458518171297].[none:job_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:job_name:nk]' member='&quot;Monitoring DWH&quot;' />
              <groupfilter function='member' level='[none:job_name:nk]' member='&quot;Monitoring DWH mat_tables&quot;' />
              <groupfilter function='member' level='[none:job_name:nk]' member='&quot;Monitoring DWH views&quot;' />
              <groupfilter function='member' level='[none:job_name:nk]' member='&quot;Monitoring DWH views NOOPT&quot;' />
              <groupfilter function='member' level='[none:job_name:nk]' member='&quot;Monitoring Postgres Slave&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[genericodbc.41967.458518171297].[none:start_time:qk]' included-values='in-range'>
            <min>#2015-01-05 00:00:00#</min>
          </filter>
          <filter class='categorical' column='[genericodbc.41967.458518171297].[none:status:nk]'>
            <groupfilter function='member' level='[none:status:nk]' member='&quot;SUCCESS&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[genericodbc.41967.458518171297].[none:job_name:nk]</column>
            <column>[genericodbc.41967.458518171297].[none:start_time:qk]</column>
            <column>[genericodbc.41967.458518171297].[none:status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[genericodbc.41967.458518171297].[none:start_time:qk]' scope='cols' value='Date' />
            <format attr='subtitle' class='0' field='[genericodbc.41967.458518171297].[none:start_time:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[genericodbc.41967.458518171297].[none:start_time:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[genericodbc.41967.458518171297].[none:job_name:nk]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[genericodbc.41967.458518171297].[none:job_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[genericodbc.41967.458518171297].[sum:mins:qk]</rows>
        <cols>[genericodbc.41967.458518171297].[none:start_time:qk]</cols>
      </table>
    </worksheet>
    <worksheet lock-updates='true' name='Data Virtuality Jobs'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
            <run> last updated at </run>
            <run>&lt;</run>
            <run>Data Update Time</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='http://10.0.0.51/workbooks/BI-AutomatedJobsMonitoring/DataVirtualityJobs?rev=' id='DataVirtualityJobs' path='/workbooks/BI-AutomatedJobsMonitoring' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='DV Optimisations' name='genericodbc.41967.458518171297' />
          </datasources>
          <datasource-dependencies datasource='genericodbc.41967.458518171297'>
            <column caption='Duration in Days' datatype='real' name='[Calculation_4211124123439587]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(DATEDIFF(&apos;second&apos;, [start_time], [end_time]) )/86400' scope-isolation='false' />
            </column>
            <column caption='End Time' datatype='datetime' name='[end_time]' role='dimension' type='ordinal' />
            <column caption='Job Name' datatype='string' name='[job_name]' role='dimension' type='nominal' />
            <column caption='Job Type' datatype='string' name='[job_type]' role='dimension' type='nominal' />
            <column caption='Mins' datatype='real' name='[mins]' role='measure' type='quantitative' />
            <column-instance column='[job_name]' derivation='None' name='[none:job_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[job_type]' derivation='None' name='[none:job_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_time]' derivation='None' name='[none:start_time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column caption='Start Time' datatype='datetime' name='[start_time]' role='dimension' type='ordinal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4211124123439587]' derivation='Sum' name='[sum:Calculation_4211124123439587:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mins]' derivation='Sum' name='[sum:mins:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='alphabetic' column='[genericodbc.41967.458518171297].[none:job_name:nk]' direction='ASC' />
          <filter class='categorical' column='[genericodbc.41967.458518171297].[none:job_type:nk]'>
            <groupfilter from='&quot;cleanup&quot;' function='range' level='[none:job_type:nk]' to='&quot;sql&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[genericodbc.41967.458518171297].[none:start_time:qk]' included-values='in-range'>
            <min>#2015-09-23 01:00:00#</min>
            <max>#2015-09-23 09:00:00#</max>
          </filter>
          <filter class='categorical' column='[genericodbc.41967.458518171297].[none:status:nk]'>
            <groupfilter function='level-members' level='[none:status:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[genericodbc.41967.458518171297].[none:status:nk]</column>
            <column>[genericodbc.41967.458518171297].[none:job_type:nk]</column>
            <column>[genericodbc.41967.458518171297].[none:start_time:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[genericodbc.41967.458518171297].[none:status:nk]' value='88' />
            <format attr='width' field='[genericodbc.41967.458518171297].[none:job_name:nk]' value='272' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[genericodbc.41967.458518171297].[none:status:nk]' />
              <size column='[genericodbc.41967.458518171297].[sum:Calculation_4211124123439587:qk]' />
              <text column='[genericodbc.41967.458518171297].[sum:mins:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([genericodbc.41967.458518171297].[none:job_type:nk] / ([genericodbc.41967.458518171297].[none:job_name:nk] / [genericodbc.41967.458518171297].[none:status:nk]))</rows>
        <cols>[genericodbc.41967.458518171297].[none:start_time:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Queries Last 3 Hours'>
      <repository-location id='QueriesLast3Hours' path='/workbooks/BI-AutomatedJobsMonitoring' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Last 3 Hours Queries' name='genericodbc.42262.434083206019' />
          </datasources>
          <datasource-dependencies datasource='genericodbc.42262.434083206019'>
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[startTime]' derivation='Hour' name='[hr:startTime:ok]' pivot='key' type='ordinal' />
            <column caption='Id' datatype='real' name='[id]' role='dimension' type='ordinal' />
            <column caption='Issuer' datatype='string' name='[issuer]' role='dimension' type='nominal' />
            <column-instance column='[startTime]' derivation='Minute' name='[mi:startTime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[issuer]' derivation='None' name='[none:issuer:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Start Time' datatype='datetime' name='[startTime]' role='dimension' type='ordinal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <sort class='natural' column='[genericodbc.42262.434083206019].[hr:startTime:ok]' direction='DESC' />
          <filter class='categorical' column='[genericodbc.42262.434083206019].[none:issuer:nk]'>
            <groupfilter function='level-members' level='[none:issuer:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[genericodbc.42262.434083206019].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' />
          </filter>
          <slices>
            <column>[genericodbc.42262.434083206019].[none:state:nk]</column>
            <column>[genericodbc.42262.434083206019].[none:issuer:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[genericodbc.42262.434083206019].[ctd:id:qk]' />
            </encodings>
            <reference-line axis-column='[genericodbc.42262.434083206019].[ctd:id:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[genericodbc.42262.434083206019].[ctd:id:qk]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Hour of Start Time:&#9;</run>
                <run bold='true'>&lt;[genericodbc.42262.434083206019].[hr:startTime:ok]&gt;</run>
                <run fontcolor='#787878'>&#10;Minute of Start Time:&#9;</run>
                <run bold='true'>&lt;[genericodbc.42262.434083206019].[mi:startTime:ok]&gt;</run>
                <run fontcolor='#787878'>&#10;No of Queries:&#9;</run>
                <run bold='true'>&lt;[genericodbc.42262.434083206019].[ctd:id:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[genericodbc.42262.434083206019].[ctd:id:qk]</rows>
        <cols>([genericodbc.42262.434083206019].[hr:startTime:ok] / [genericodbc.42262.434083206019].[mi:startTime:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Search DV Jobs'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
            <run> last updated at </run>
            <run>&lt;</run>
            <run>Data Update Time</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='http://10.0.0.51/workbooks/BI-AutomatedJobsMonitoring/SearchDVJobs?rev=' id='SearchDVJobs' path='/workbooks/BI-AutomatedJobsMonitoring' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='DV Optimisations' name='genericodbc.41967.458518171297' />
          </datasources>
          <datasource-dependencies datasource='genericodbc.41967.458518171297'>
            <column caption='Data Source' datatype='string' name='[data_source]' role='dimension' type='nominal' />
            <column caption='Job Name' datatype='string' name='[job_name]' role='dimension' type='nominal' />
            <column caption='Mins' datatype='real' name='[mins]' role='measure' type='quantitative' />
            <column-instance column='[data_source]' derivation='None' name='[none:data_source:nk]' pivot='key' type='nominal' />
            <column-instance column='[job_name]' derivation='None' name='[none:job_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_time]' derivation='None' name='[none:start_time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_time]' derivation='None' name='[none:start_time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column caption='Start Time' datatype='datetime' name='[start_time]' role='dimension' type='ordinal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
            <column-instance column='[mins]' derivation='Sum' name='[sum:mins:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[genericodbc.41967.458518171297].[none:job_name:nk]'>
            <groupfilter expression='CONTAINS(LOWER([job_name]), LOWER(&apos;bi&apos;))' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='bi' user:ui-pattern_type='contains'>
              <groupfilter function='level-members' level='[none:job_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='relative-date' column='[genericodbc.41967.458518171297].[none:start_time:qk]' first-period='-1' include-future='true' include-null='false' last-period='0' period-type='day' />
          <slices>
            <column>[genericodbc.41967.458518171297].[none:job_name:nk]</column>
            <column>[genericodbc.41967.458518171297].[none:start_time:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[genericodbc.41967.458518171297].[none:job_name:nk]' value='272' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[genericodbc.41967.458518171297].[none:job_name:nk]' value='on' />
          </style-rule>
          <style-rule element='table'>
            <format attr='row-levels' value='16' />
            <format attr='row-horiz-levels' value='16' />
            <format attr='col-levels' value='16' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[genericodbc.41967.458518171297].[none:job_name:nk]' value='Search Job Names' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[genericodbc.41967.458518171297].[none:status:nk]' />
              <text column='[genericodbc.41967.458518171297].[sum:mins:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([genericodbc.41967.458518171297].[none:job_name:nk] / ([genericodbc.41967.458518171297].[none:data_source:nk] / ([genericodbc.41967.458518171297].[none:start_time:ok] / [genericodbc.41967.458518171297].[none:status:nk])))</rows>
        <cols>[genericodbc.41967.458518171297].[sum:mins:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Search Tableau Jobs'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
            <run> last updated at </run>
            <run>&lt;</run>
            <run>Data Update Time</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='http://10.0.0.51/workbooks/BI-AutomatedJobsMonitoring/SearchTableauJobs?rev=' id='SearchTableauJobs' path='/workbooks/BI-AutomatedJobsMonitoring' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Workbooks' name='genericodbc.41967.726792106485' />
          </datasources>
          <datasource-dependencies datasource='genericodbc.41967.726792106485'>
            <column datatype='string' name='[background_job]' role='dimension' type='nominal' />
            <column datatype='real' name='[mins]' role='measure' type='quantitative' />
            <column-instance column='[background_job]' derivation='None' name='[none:background_job:nk]' pivot='key' type='nominal' />
            <column-instance column='[project_name]' derivation='None' name='[none:project_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_date]' derivation='None' name='[none:start_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_time]' derivation='None' name='[none:start_time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[project_name]' role='dimension' type='nominal' />
            <column datatype='date' name='[start_date]' role='dimension' type='ordinal' />
            <column datatype='datetime' name='[start_time]' role='dimension' type='ordinal' />
            <column datatype='string' name='[status]' role='dimension' type='nominal' />
            <column-instance column='[mins]' derivation='Sum' name='[sum:mins:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[genericodbc.41967.726792106485].[none:project_name:nk]'>
            <groupfilter function='level-members' level='[none:project_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[genericodbc.41967.726792106485].[none:start_date:qk]' included-values='in-range'>
            <min>#2014-11-23#</min>
          </filter>
          <slices>
            <column>[genericodbc.41967.726792106485].[none:project_name:nk]</column>
            <column>[genericodbc.41967.726792106485].[none:start_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[genericodbc.41967.726792106485].[sum:mins:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[genericodbc.41967.726792106485].[none:background_job:nk]' value='Search Job Names'>
              <formatted-text>
                <run>Search Job Names</run>
              </formatted-text>
            </format>
            <format attr='title' field='[genericodbc.41967.726792106485].[none:project_name:nk]' value='Search Projects'>
              <formatted-text>
                <run>Search Projects</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[genericodbc.41967.726792106485].[none:status:nk]' />
              <text column='[genericodbc.41967.726792106485].[sum:mins:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([genericodbc.41967.726792106485].[none:background_job:nk] / ([genericodbc.41967.726792106485].[none:project_name:nk] / ([genericodbc.41967.726792106485].[none:start_time:ok] / [genericodbc.41967.726792106485].[none:status:nk])))</rows>
        <cols>[genericodbc.41967.726792106485].[sum:mins:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Tableau Background Jobs'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
            <run> last updated at </run>
            <run>&lt;</run>
            <run>Data Update Time</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='http://10.0.0.51/workbooks/BI-AutomatedJobsMonitoring/TableauBackgroundJobs?rev=' id='TableauBackgroundJobs' path='/workbooks/BI-AutomatedJobsMonitoring' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Workbooks' name='genericodbc.41967.726792106485' />
          </datasources>
          <datasource-dependencies datasource='genericodbc.41967.726792106485'>
            <column caption='Duration in Days' datatype='real' name='[Calculation_7231124172903168]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(DATEDIFF(&apos;second&apos;, [start_time], [end_time]) )/86400' scope-isolation='false' />
            </column>
            <column datatype='string' name='[background_job]' role='dimension' type='nominal' />
            <column datatype='string' name='[background_job_type]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[end_time]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_7231124172903168]' derivation='Min' name='[min:Calculation_7231124172903168:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[mins]' role='measure' type='quantitative' />
            <column-instance column='[background_job]' derivation='None' name='[none:background_job:nk]' pivot='key' type='nominal' />
            <column-instance column='[background_job_type]' derivation='None' name='[none:background_job_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[project_name]' derivation='None' name='[none:project_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_date]' derivation='None' name='[none:start_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_time]' derivation='None' name='[none:start_time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[project_name]' role='dimension' type='nominal' />
            <column datatype='date' name='[start_date]' role='dimension' type='ordinal' />
            <column datatype='datetime' name='[start_time]' role='dimension' type='ordinal' />
            <column datatype='string' name='[status]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_7231124172903168]' derivation='Sum' name='[sum:Calculation_7231124172903168:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mins]' derivation='Sum' name='[sum:mins:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[genericodbc.41967.726792106485].[none:background_job:nk]' direction='DESC' using='[genericodbc.41967.726792106485].[min:Calculation_7231124172903168:qk]' />
          <filter class='categorical' column='[genericodbc.41967.726792106485].[none:background_job_type:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:background_job_type:nk]' member='&quot;Data Source&quot;' />
              <groupfilter function='member' level='[none:background_job_type:nk]' member='&quot;Workbook&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[genericodbc.41967.726792106485].[none:project_name:nk]'>
            <groupfilter function='level-members' level='[none:project_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[genericodbc.41967.726792106485].[none:start_date:qk]' included-values='in-range'>
            <min>#2015-09-21#</min>
          </filter>
          <filter class='categorical' column='[genericodbc.41967.726792106485].[none:status:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:status:nk]' member='&quot;failed&quot;' />
              <groupfilter function='member' level='[none:status:nk]' member='&quot;running&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[genericodbc.41967.726792106485].[none:start_date:qk]</column>
            <column>[genericodbc.41967.726792106485].[none:status:nk]</column>
            <column>[genericodbc.41967.726792106485].[none:background_job_type:nk]</column>
            <column>[genericodbc.41967.726792106485].[none:project_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[genericodbc.41967.726792106485].[none:background_job:nk]' value='264' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[genericodbc.41967.726792106485].[none:status:nk]' />
              <size column='[genericodbc.41967.726792106485].[sum:Calculation_7231124172903168:qk]' />
              <text column='[genericodbc.41967.726792106485].[sum:mins:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([genericodbc.41967.726792106485].[none:background_job_type:nk] / ([genericodbc.41967.726792106485].[none:background_job:nk] / [genericodbc.41967.726792106485].[none:status:nk]))</rows>
        <cols>[genericodbc.41967.726792106485].[none:start_time:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Tableau Incomplete Jobs'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Failure' name='postgres.42193.404858935188' />
          </datasources>
          <datasource-dependencies datasource='postgres.42193.404858935188'>
            <column caption='Status' datatype='string' name='[Calculation_9600708095741599]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;Failed&apos;' />
            </column>
            <column-instance column='[updated_at]' derivation='Max' name='[max:updated_at:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9600708095741599]' derivation='None' name='[none:Calculation_9600708095741599:nk]' pivot='key' type='nominal' />
            <column-instance column='[started_at]' derivation='None' name='[none:started_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[subtitle]' derivation='None' name='[none:subtitle:nk]' pivot='key' type='nominal' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column-instance column='[updated_at]' derivation='None' name='[none:updated_at:qk]' pivot='key' type='quantitative' />
            <column datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column datatype='string' name='[subtitle]' role='dimension' type='nominal' />
            <column datatype='string' name='[title]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[updated_at]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <sort class='computed' column='[postgres.42193.404858935188].[none:title:nk]' direction='ASC' using='[postgres.42193.404858935188].[max:updated_at:qk]' />
          <filter class='relative-date' column='[postgres.42193.404858935188].[none:updated_at:qk]' first-period='0' include-future='true' include-null='false' last-period='0' period-type='day' />
          <slices>
            <column>[postgres.42193.404858935188].[none:updated_at:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='wrap' field='[postgres.42193.404858935188].[none:Calculation_9600708095741599:nk]' value='on' />
            <format attr='wrap' field='[postgres.42193.404858935188].[none:title:nk]' value='on' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([postgres.42193.404858935188].[none:subtitle:nk] / ([postgres.42193.404858935188].[none:title:nk] / ([postgres.42193.404858935188].[none:started_at:ok] / [postgres.42193.404858935188].[none:Calculation_9600708095741599:nk])))</rows>
        <cols>[postgres.42193.404858935188].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Tableau Jobs Failure Reason'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Failure' name='postgres.42193.404858935188' />
          </datasources>
          <datasource-dependencies datasource='postgres.42193.404858935188'>
            <column caption='Status' datatype='string' name='[Calculation_9600708095741599]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;Failed&apos;' />
            </column>
            <column-instance column='[updated_at]' derivation='Max' name='[max:updated_at:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9600708095741599]' derivation='None' name='[none:Calculation_9600708095741599:nk]' pivot='key' type='nominal' />
            <column-instance column='[notes]' derivation='None' name='[none:notes:nk]' pivot='key' type='nominal' />
            <column-instance column='[subtitle]' derivation='None' name='[none:subtitle:nk]' pivot='key' type='nominal' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column-instance column='[updated_at]' derivation='None' name='[none:updated_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[updated_at]' derivation='None' name='[none:updated_at:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[notes]' role='dimension' type='nominal' />
            <column datatype='string' name='[subtitle]' role='dimension' type='nominal' />
            <column datatype='string' name='[title]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[updated_at]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <sort class='computed' column='[postgres.42193.404858935188].[none:title:nk]' direction='ASC' using='[postgres.42193.404858935188].[max:updated_at:qk]' />
          <filter class='relative-date' column='[postgres.42193.404858935188].[none:updated_at:qk]' first-period='0' include-future='true' include-null='false' last-period='0' period-type='day' />
          <slices>
            <column>[postgres.42193.404858935188].[none:updated_at:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[postgres.42193.404858935188].[none:notes:nk]' value='132' />
            <format attr='height' field='[postgres.42193.404858935188].[none:Calculation_9600708095741599:nk]' value='112' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[postgres.42193.404858935188].[none:notes:nk]' value='340' />
            <format attr='width' field='[postgres.42193.404858935188].[none:title:nk]' value='188' />
            <format attr='width' field='[postgres.42193.404858935188].[none:updated_at:ok]' value='132' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[postgres.42193.404858935188].[none:notes:nk]' value='on' />
            <format attr='wrap' field='[postgres.42193.404858935188].[none:Calculation_9600708095741599:nk]' value='on' />
            <format attr='wrap' field='[postgres.42193.404858935188].[none:updated_at:ok]' value='on' />
            <format attr='wrap' field='[postgres.42193.404858935188].[none:title:nk]' value='on' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([postgres.42193.404858935188].[none:subtitle:nk] / ([postgres.42193.404858935188].[none:title:nk] / ([postgres.42193.404858935188].[none:Calculation_9600708095741599:nk] / ([postgres.42193.404858935188].[none:updated_at:ok] / [postgres.42193.404858935188].[none:notes:nk]))))</rows>
        <cols>[postgres.42193.404858935188].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Failure Reasons'>
      <repository-location derived-from='http://10.0.0.51/workbooks/BI-AutomatedJobsMonitoring/FailureReasons?rev=' id='FailureReasons' path='/workbooks/BI-AutomatedJobsMonitoring' revision='' />
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='6' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='4' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='50000' id='1' name='DV Jobs Failure Reason' show-title='true' w='99600' x='0' y='0' />
              <zone h='50000' id='3' name='Tableau Jobs Failure Reason' show-title='true' w='99600' x='0' y='50000' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Incomplete Jobs'>
      <repository-location derived-from='http://10.0.0.51/workbooks/BI-AutomatedJobsMonitoring/IncompleteJobs?rev=' id='IncompleteJobs' path='/workbooks/BI-AutomatedJobsMonitoring' revision='' />
      <style />
      <size maxheight='1000' maxwidth='1050' minheight='1000' minwidth='1050' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='19' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='13' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone fixed-size='461' h='100000' id='7' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='0'>
                <zone h='100000' id='5' type='layout-basic' w='99619' x='0' y='0'>
                  <zone h='50000' id='11' name='DV Speed' show-title='true' w='99619' x='0' y='50000' />
                  <zone h='50000' id='16' name='DV Incomplete Jobs' show-title='true' w='49810' x='0' y='0' />
                  <zone h='50000' id='17' name='Tableau Incomplete Jobs' show-title='true' w='49809' x='49810' y='0' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='11500' id='15' name='DV Speed' pane-specification-id='0' param='[genericodbc.41967.458518171297].[none:job_name:nk]' type='color' w='18000' x='5400' y='53900' />
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='dashboard' maximized='0' name='Incomplete Jobs'>
      <zones>
        <zone name='DV Speed'>
          <viewpoint>
            <zoom type='entire-view' />
            <geo-search-visibility value='1' />
          </viewpoint>
          <highlight field='[genericodbc.41967.458518171297].[none:job_name:nk]'>
            <bucket-selection />
          </highlight>
        </zone>
        <zone name='DV Speed' pane-specification-id='0' param='[genericodbc.41967.458518171297].[none:job_name:nk]' type='color' />
      </zones>
      <visuals>
        <visual worksheet='DV Incomplete Jobs' />
        <visual worksheet='DV Speed' />
        <visual worksheet='Tableau Incomplete Jobs' />
      </visuals>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Queries Last 3 Hours'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[genericodbc.42262.434083206019].[none:state:nk]' type='filter' />
            <card param='[genericodbc.42262.434083206019].[none:issuer:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[genericodbc.42262.434083206019].[hr:startTime:ok]</field>
          <field>[genericodbc.42262.434083206019].[mi:startTime:ok]</field>
          <field>[genericodbc.42262.434083206019].[none:issuer:nk]</field>
          <field>[genericodbc.42262.434083206019].[none:startTime:qk]</field>
          <field>[genericodbc.42262.434083206019].[none:state:nk]</field>
          <field>[genericodbc.42262.434083206019].[yr:startTime:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint />
      <visual />
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Failure Reasons'>
      <active id='3' />
      <zones />
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Data Virtuality Jobs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[genericodbc.41967.458518171297].[none:status:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card param='[genericodbc.41967.458518171297].[none:start_time:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[genericodbc.41967.458518171297].[none:status:nk]' type='filter' />
            <card param='[genericodbc.41967.458518171297].[none:job_type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[genericodbc.41967.458518171297].[none:data_source:nk]</field>
          <field>[genericodbc.41967.458518171297].[none:job_name:nk]</field>
          <field>[genericodbc.41967.458518171297].[none:job_run_time:nk]</field>
          <field>[genericodbc.41967.458518171297].[none:job_run_time:ok]</field>
          <field>[genericodbc.41967.458518171297].[none:job_type:nk]</field>
          <field>[genericodbc.41967.458518171297].[none:start_time:qk]</field>
          <field>[genericodbc.41967.458518171297].[none:status:nk]</field>
          <field>[genericodbc.41967.458518171297].[none:view:nk]</field>
          <field>[genericodbc.41967.458518171297].[yr:start_time:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Tableau Background Jobs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[genericodbc.41967.726792106485].[none:status:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card param='[genericodbc.41967.726792106485].[none:start_date:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='164'>
            <card param='[genericodbc.41967.726792106485].[none:status:nk]' type='filter' />
            <card param='[genericodbc.41967.726792106485].[none:background_job_type:nk]' type='filter' />
            <card param='[genericodbc.41967.726792106485].[none:project_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[genericodbc.41967.726792106485].[none:background_job:nk]</field>
          <field>[genericodbc.41967.726792106485].[none:background_job_type:nk]</field>
          <field>[genericodbc.41967.726792106485].[none:finish_code:ok]</field>
          <field>[genericodbc.41967.726792106485].[none:project_name:nk]</field>
          <field>[genericodbc.41967.726792106485].[none:start_date:qk]</field>
          <field>[genericodbc.41967.726792106485].[none:start_time:qk]</field>
          <field>[genericodbc.41967.726792106485].[none:status:nk]</field>
          <field>[genericodbc.41967.726792106485].[none:workbook:nk]</field>
          <field>[genericodbc.41967.726792106485].[yr:start_time:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Search DV Jobs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[genericodbc.41967.458518171297].[none:status:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='pattern' param='[genericodbc.41967.458518171297].[none:job_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[genericodbc.41967.458518171297].[none:data_source:nk]</field>
          <field>[genericodbc.41967.458518171297].[none:job_name:nk]</field>
          <field>[genericodbc.41967.458518171297].[none:status:nk]</field>
          <field>[genericodbc.41967.458518171297].[yr:start_time:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <zoom type='entire-view' />
        <geo-search-visibility value='1' />
      </viewpoint>
      <visual />
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Search Tableau Jobs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[genericodbc.41967.726792106485].[none:status:nk]' type='color' />
          </strip>
          <strip size='160'>
            <card mode='pattern' param='[genericodbc.41967.726792106485].[none:project_name:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card param='[genericodbc.41967.726792106485].[none:start_date:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[genericodbc.41967.726792106485].[none:background_job:nk]</field>
          <field>[genericodbc.41967.726792106485].[none:project_name:nk]</field>
          <field>[genericodbc.41967.726792106485].[none:start_date:qk]</field>
          <field>[genericodbc.41967.726792106485].[none:status:nk]</field>
          <field>[genericodbc.41967.726792106485].[yr:start_date:ok]</field>
          <field>[genericodbc.41967.726792106485].[yr:start_time:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <visual />
    </window>
    <window class='worksheet' hidden='true' name='DV Incomplete Jobs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[genericodbc.41967.458518171297].[none:job_name:nk]</field>
          <field>[genericodbc.41969.773509710649].[none:failure_reason:nk]</field>
          <field>[genericodbc.41969.773509710649].[none:job_name:nk]</field>
          <field>[genericodbc.41969.773509710649].[none:job_type:nk]</field>
          <field>[genericodbc.41969.773509710649].[none:status:nk]</field>
          <field>[genericodbc.41969.773509710649].[yr:start_time:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection />
      <visual />
    </window>
    <window class='worksheet' hidden='true' name='DV Jobs Failure Reason'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[genericodbc.41967.458518171297].[none:job_name:nk]</field>
          <field>[genericodbc.41969.773509710649].[none:failure_reason:nk]</field>
          <field>[genericodbc.41969.773509710649].[none:job_name:nk]</field>
          <field>[genericodbc.41969.773509710649].[none:job_type:nk]</field>
          <field>[genericodbc.41969.773509710649].[none:status:nk]</field>
          <field>[genericodbc.41969.773509710649].[yr:start_time:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection />
      <visual />
    </window>
    <window class='worksheet' hidden='true' name='DV Speed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[genericodbc.41967.458518171297].[none:job_name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card param='[genericodbc.41967.458518171297].[none:start_time:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[genericodbc.41967.458518171297].[none:job_name:nk]</field>
          <field>[genericodbc.41967.458518171297].[none:start_time:qk]</field>
          <field>[genericodbc.41967.458518171297].[none:status:nk]</field>
          <field>[genericodbc.41967.458518171297].[yr:start_time:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection />
      <visual />
    </window>
    <window class='worksheet' hidden='true' name='Tableau Incomplete Jobs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[postgres.42193.404858935188].[none:updated_at:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint />
      <highlight>
        <color-one-way>
          <field>[postgres.42193.404858935188].[:Measure Names]</field>
          <field>[postgres.42193.404858935188].[none:Calculation_9600708095741599:nk]</field>
          <field>[postgres.42193.404858935188].[none:args:nk]</field>
          <field>[postgres.42193.404858935188].[none:notes:nk]</field>
          <field>[postgres.42193.404858935188].[none:started_at:ok]</field>
          <field>[postgres.42193.404858935188].[none:subtitle:nk]</field>
          <field>[postgres.42193.404858935188].[none:title:nk]</field>
          <field>[postgres.42193.404858935188].[none:updated_at:qk]</field>
          <field>[postgres.42193.404858935188].[tdy:updated_at:ok]</field>
          <field>[postgres.42193.404858935188].[yr:started_at:ok]</field>
          <field>[postgres.42193.404858935188].[yr:updated_at:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection />
      <visual />
    </window>
    <window class='worksheet' hidden='true' name='Tableau Jobs Failure Reason'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[postgres.42193.404858935188].[none:updated_at:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint />
      <highlight>
        <color-one-way>
          <field>[postgres.42193.404858935188].[:Measure Names]</field>
          <field>[postgres.42193.404858935188].[none:Calculation_9600708095741599:nk]</field>
          <field>[postgres.42193.404858935188].[none:args:nk]</field>
          <field>[postgres.42193.404858935188].[none:notes:nk]</field>
          <field>[postgres.42193.404858935188].[none:subtitle:nk]</field>
          <field>[postgres.42193.404858935188].[none:title:nk]</field>
          <field>[postgres.42193.404858935188].[none:updated_at:qk]</field>
          <field>[postgres.42193.404858935188].[tdy:updated_at:ok]</field>
          <field>[postgres.42193.404858935188].[yr:updated_at:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection />
      <visual />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Incomplete Jobs' width='192'>
      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
      aoQp+yOdUFefgdP420V0YnZ8bD7Pa9iuvqiuQYWwxYK2laWVQCCgazrjcEoGzpCAARrJBtxm
      dTrdTOWKbgddSi64PJ4WcJGEYQeGLPKs25epSN/71m/M3rhOuZ2Notwyte6wU2jJ6RL/ne98
      g36kExexVZ24ukCYmjMQS8aTXC1bbxoY67Hj8MLZM7TDV7YZ0OVrtdSePnPi0vCWPfvm5zN7
      t/ecOz/q9tv9gWh7NFrOZdujfojdXPHl+bmmpK+uZgfbwxOzcz63hxdaTtapAFKt5zyRbjsF
      CBNE20KktUvRtfT8Qsvj1QslmdjR5VlK5Ac6N+Eu2CfudhEtcPWawmzrCRiaASHhDQRwAmdp
      TDegCWE0GuVUEHLRxWJBh2Qs5B068DpoFVUDo4FMsf5Grd5S5PZIxEZTkVh7OZ8f2LbVUCSu
      JYpN3qQdbtLwtkUZh7enM/JoHwXF0FJLsjGYalIElO3usMPO+AP++MJiV3eXoBgD3VHIOCSu
      EYl14FAPRNs1SXayTKPe9IX8EGK4LggGQ9NUezS81gdREAMhv52hK3UuEGpjKeDwBF00Rjuc
      kUhEl2SP0yYbIBqNER8JkK7r6z+EORiCk1QCJwVJqpYr/YMDFIFRFPVIW+IpssEr0RBmM0mn
      P7L2RMSdRL5easg9ndHN7N3TbeNXoj9URKMr0Z906HYOgG7nQCxCdyQilqAAIZagACGWoAAh
      lqAAIZagACGWoAAhlqAAIZagACGWoAAhlqAAIZagACGWoAAhlqAAIZagACGWoAAhlqAAIZag
      ACGWoAAhlqAAIZagACGWoAAhlqAAIZagACGWoAAhlqAAIZagACGWoAAhlqAAIZagACGWoAAh
      lqAAIZagACGWoAAhlqAAIZagACGWoAAhlqAAIZagACGWoAAhlqAAIZagACGWoAAhlqAAIZag
      ACGWoAAhlqAAIZagACGWoAAhlqAAIZagACGWoAAhlqAAIZagACGWoAAhlqAAIZagACGWoAAh
      lqAAIZagACGWoAAhlqAAIZagACGWoAAhlqAAIZagACGWoAAhlqAAIZagACGWoAAhlqAAIZag
      ACGWoAAhlqAAIZagACGWoAAhlqAAIZagACGWoAAhlqAAIZagACGWoAAhlqAAIZagACGWoAAh
      lqAAIZagACGWoAAhlqAAIZagACGWoAAhlqAAIZagACGWoAAhlqAAIZagACGWoAAhlqwFCI5f
      OPnesVOKDgEAEMJ6vXFrjko2kS1zi7Mzs7PzOgAAgHq9flcrwyMjueRStcnzgnzrRU1qZvK1
      lUTiw/PC+fk5rlHXzdsvmZqyuLxyV5vL01cLDfHOV2YnL58emVjPWo2MjNz5Y6Neh/eazZCa
      50cn16bvWqmRc2e1D3qoSkJLUtc6H1+Oq0L9rTcPzyxnAAAyXzvyzjvVJn/m2HtzK1kAgCo2
      3337HzKlxtT48MjEDQjh8nJc4StvHj48l8gCAAA0l+NxAEAyHtfhzX6txhcFRf7l22+tlhoA
      AKFWeOvtd3lZPXX0naVUYT2r/KQQP/zhDwEAZ4cvvbq7+/z1lWuXzgmq8pOf/DQY8h87drJ/
      2y6WNk4PT9SqpUqhwFfTI5PxU+/9AsewPG8uz81WcsvjM8lmraRw1XRi+djlGbXFZZMrka6e
      4tLk+6NzE+dO+bz294+dVmXh/ROnq7yczSTHTx9rYczYhTOZSvPqhdOlarUhKJfPn7qxkKpk
      l86cv7xl53Or85NnLk1IAl+ui4uLiz3dHadPHAt39mfmrpy7dFVqVHWSnJwYPXXitKap585e
      MKFx7uxZFXdEQ76x8TEGKO+fudwsplKF2ls//2mgc9DHmGfHbuRWluemr14anSBwcOL4iYaG
      l5aup4vNwz//Cet0X7hwXgXk6LmTkzPxQy8dKqcX3nr3ZCkzNzKd37trsJpNHH7v7J7ByHtn
      x/fs3ed3s6dPHN27d9exE6eLnJqILx3YtwfHMCehza5k0iVRLKdcTvrIiZHdvYFfXZjct3ef
      1+VILU2fuDi5Z0vHX/zl/zv4yqGZ69MUUA7//PDQodeweiLFU3wl29XTPzt22t21y0sKN+KV
      bYNdTzon93XzEKYrwtTMksyVrl6/niyLsXBoYWpicuJSsSFTjgDBJdr6nsMBqNcqr37uC7H2
      Lj9L3pi6vhBPjJw/e3HsCjRNisK8gVA02m7whXRDoXGQzBRYwEU7Ok6fn+zsCMzNzvfu2N8o
      l0xdj8SiDlyRcVc+k9Bxx6svHxKbFWjzBiktkUzWJUgRAGBYV2d7oS7NXDxKucMAYHv2Hxg/
      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
    </thumbnail>
    <thumbnail height='192' name='Queries Last 3 Hours' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO2dZ5gjV5X3bwVVqZSz1Oqcc09OnvGMJzngADbYGGzWgJ8lLbDsw/KSlryY
      XXYXlmWxARsDBpvFxgFnT7RnPMkTemY656hu5SxVrvt+0Linp0fdLbXU0924fp9aXaXSrdJf
      59577jnnIhBCICOzUNClboDMykYWkExOyAKSyQlZQDI5IQtIJidkAcnkBL7UDXivIbQdea11
      NAYR4oYdm1o7hj5w0/ZpR6Xek68lnTsbHPhzf/nT4IivunFDRbG+ac1qcskaPA+ygK4xQsAb
      tpU1NVQ4kUDXmXMXmivM58+0hjHHRnvg5CgQfV3mjXWrSyo/eNfN//fsqbtv3/byX17A4j2t
      Eyom7C7QQFi2q0zs6hkLWWq27lxfiSFLfD9yF3aNUV536/urzeD4gdcmBGNxSYkW5RSEwj/p
      jrFs2err11QWFTrtl0+HIBGPs3TcWrfFpgCb9m6NjA2cOH6Wh0jAOyFIS3cf7yJboGsLH3/7
      wD5BW6DRahU4LtGRgb4uP0uqMU4ACIZihAJzhcIAaGa8D8dxXkEqcAwFyqJiJ2kzQ6URWwY/
      f0Reyri2QCYe8YdiCkprMarDwRCpJCOxpJKkSAIChVYhxmOCwqJXQ0kIR5NGvTYcDhM4FBV6
      SEdVWlUsLqgIwReIG2x2NYkvdQ8mC0gmN5aBEZRZyeRBQBzHJRKJ3K8jsxLJg4AghKIo5n4d
      mZWI3IXJ5IQ8jb92SALb+tbrdMGGNVbujYNHMWvtzTdsJLGlblZuyBbo2jF64fCL+45PhpND
      rSdBUQPdf3o0xC91o3JFFtC1w1a18dbrGwEADM0SaqUCgRy/4seOsoCuHSq9SUVgAACT3Rwc
      HIoBlUFDLHWjckUeA11Tilu26XGzU+fkVF3Yps1O7Yr/AefBE82yLMuyOp0uLw2SWVms+F+A
      zNKSkwWKRCIcx4miKIoiQaz47lxmAWQ+BoK9p/efGQjVb9xlZQbevjBauW7bhhonkLuw9zYZ
      d2GQ7e1zbdhxS1Mp1dE2vG5jy4XzF5dBPJPMEpOxBZKk4vKq7hOvdtlKUA6nKBLhOB6AZRur
      K3NtyNgCiQJQ2TasqomGWa0RBAMRpdEoq0cmYwtEaM1k37n+2N7tW6ik6/i5/i0btixmw2RW
      BrIfSCYnZD+QTE7IApLJCVlAMjkhC0gmJ2QByeSELCCZnJAFJJMTsoBkckIWkExOyAKSyQlZ
      QDI5IQtIJidkAcnkhCwgmZyQBSSTE7KAZHJCFpBMTsgCkskJWUAyOSELSCYn8iggGA+42jq6
      Y4yQDE1euNDmjdD5u7jMMiVvWRlaCn3uqacCUR9n3IoOHyBKykaDiu9/6YG8tFJm2ZI3C4Qo
      NO+/+x407kMVMMBItfW1PT1t+bq4zLIlCwFxEdfBg+/E477X//rMM3/dF6SvKM8GJSHCIfc+
      +Jm+jmMfuesm16CnuKQw362VWXZkmpkKRa7tzNG2TkVJIQ8sTY7g2SF31FRuvHyGyB575Y+t
      A77N198y0Hm6o8+//ab7FqXJMsuJTMdAk10nW8ei3pHYmvVGH1uqC73DV+1uspGp+kAqlUrO
      TH1vkqkFwiktIU54PB4RK2SSPsjBYq1Gr1eBdwfRU2eKEhQlSOCyg+A9QTazMCHZP+ArqbL3
      tZ6NIOZ1a+pIFIArc+PjDP+T/b2TEeaf9tbU2LWL1myZ5UI2VVpxVVVtKQCgcf3W2U45NRR8
      /NgwAMCgUvzorpZcWyez7MlzR1NsUpnUBIKACuvMPfdk/ibJs4CqbZqH7mzCUaTMrM7vlWWW
      J3kWEIIgq4oNKIL0uKP5vbLM8iT/cyUNiZdb1O2uSN6vLLMMyb+AKAVWadW0T0QleTfW9wD5
      FxCGIvUF2lCCc4Xk1fi/ffIvIARBmgv1nCj1emJ5v7jMcmNR/MW1Di0AoNstC+hvn0URkIZU
      yOPo9wiLIiBSgVbbtO2uSO7RajLLnEUREI4idQXaQIKbjDCLcX2Z5cOi7Fh4aRwtSD3umNNA
      LcZHyCwSMD7yrw897GO0X/nqfU89/OhEXPnFb36l0jTrl7hYQRd1Di1AQJfsj15xKG2f+Pi9
      iog/jpvu/9i9ajoc5ebaGXixBKRVKkpNqnaXLKAVBoJT9qLyvZs1p7oj9sLS3ZtNZzpdc5y/
      WJvukjhaY780jkYQZJE+RSbvCL72h587Q4bFYjj+yz8eUkQ4Z8tccV2LJSAMReoKdId7vN4Y
      a9cpF+lTZPIObm2450ZFFOytLC0IFFvD4p6KsoK5zl+kdqTG0bwIuyajsoBWFGhBeW1KMvbS
      avu8Zy9eQxoKtACArknZH73yGAsmv/Ni+2+PDXHCPPuaLpYFAgDoKaLYqOqYkP3RK49H3hp4
      6tQohiItRfp1paY5zlxEC6TAkFqHtk32R69AzGoCAUCBIRpSMfeZaQQkcEz0XRI0u+AvPxXX
      MRlmAgluodeQWRp21FhxDHHolIXGefzAabow30j7/kOnIpDUESJhW/3B2zYRC2pEahwtSFLX
      ZPT6auuCriGzNAQTnATBZIRheFFDzjXOSWOBCqrXb2upbth4/d4b1mH8XF7IeWlw6gAAnROy
      O3GFMRFhRAmygjTsT8x9ZhoBQUly1DdLrrYjZ8eb19fO0wfOiVFFFBqodnkcvdJwhZIp52/P
      fEFdaazTZN+ZQyc6BQAAAMODrqpi84I1hGNIfYGufVz2R68wxkJ0sUnljjI9npgEITr7d5dG
      QI6qtfeUr079jaBYLhN9DEHqC3SHur1hmjeqFjaUklkCxoPJSqtaRWBD/gQvSKQCm+3MNF2Y
      f3TYH01IAMEwDEMvSS/hH33lhaf3n+igY+nrA6UFQZCmQp0owS55GLRykCAcD9MFeqrRqR/y
      J5g5fYlp7IsQm/jjH54kHUUmirCVrd51fbMCAEHCWtauOna4dYAqTl8faBaanHqAgPaJ6HVV
      loXfk8w1JJTgkqzoNFCkAn3hvCtK83pq1lFMGgE5W7b/vbmoe2Sck8j6lurUGXpbITN0USKx
      RCKBYw4SxxiBj0QiU/WBZvsAi4Z06JSyP3oF4QrTEoTFJkqrVKAI6PfGi02zfr/pPdGR8f7J
      JGYkYwcPtqZG0+6hnjhutSp5hNAySV+Eg2atRq/XW61Wo3EuO4SiSINTJ/ujVxApARUZVRUW
      NYGj3e7YHN9degFpTfqwa6Snd0xl1qfOsDjsgeFuS/32dWvWlOtEddHactusqrziAxDQUKAb
      9ifirLCQu5G55rhCNISgyEgVGikNgfd5Y9Lsv/30cyxz9ab7CusTPGrQqVMCwinDxut3po7O
      UR/oalL+aAmCzsnYpvK5luVklgmuMK2nFFolrsDQSptm2J9keFE9iz86vQWSRFFBaY06tSTO
      Ib5MaSrUAwDaxsNyL7YiGA/SToMyNQGvc+hGAglm9gWJNLKKTfb9+f+e540FRlLgsMoP37Od
      zK1Bdp3SqiU75Jl8/nB3H3/iuUONO+/Z3aj+0+NPaZr3fmDXKkWeXLVjoWShkcIQBABQY9cE
      k5wvzpo16VWQRkAae8Wt778zwPI4gmlN9lyWMlIgCGhy6tpdEQkCTHZH54PxiPT3X/zsT3/w
      /cCF6qobP0JFBmgOKsg8PFwI4XiI3lBmQlEEAFBmUZM42uOO1TnSV+FN04UhKJaY7D3V2jE4
      ODA6EZgnIi0DEAAanfoBXzzJyePo/LB+0zbE11u+9o6op+vFJx956rXTfO7fEwAAgECco3mx
      0Eilli/KLWoSx+ZYEUs/BkJRKR5LJJNJluVzH7ZMjaPl8NZ8MXbx0NPHA/fceUOJo+yW+z5t
      lkZCcXb+t2XAeDgJIZxy/Ni0pElNDPjivJheoemH1iXrb3ywmQcAoDiRl6DXS+NoV2RDmUle
      VM2drrbWse7I//4u8am7Pvzck3+u3/vpckt+MhfGQzSEoPjdODIEQWrt2pFgIsmJeiqNuUkv
      D+/g+QPHOliBt1dvunnn6txXQZ0GpUlNdExEIIAIkBWUKzfe9+Ub3/37wS99JY9XdoVoCECR
      8bKTr65Ae7TPl+SEtAsa6QXkqFr34dJVUnLsjRPhfH3bTYX6rsmoJEFUHkjniYkw3eOObSgz
      aZR5S44YD9FGlUJNXl5+r7RqGEEaD9EF+jThrbNaoIPHOwQAy1bvnHUhP0uanLpHj/ppXtRi
      8i4IeSCc5B54/J2hQOL2Fue/fbCFzNPeEmOhZKGBmh4AVGZWUwospdSrz0//qQaLjcQgLwK1
      msqTuUCaCvWCCOeNcJPJkCgj+OKsIEJXmJ5thLsAxkP0DAGVmlVKBdrtjqb1A6cX0Ehbm2Pd
      nnvv2DLY2p2XjIqUKwhBQJsrIruj80KRkWp26gEANzc61ER++gkJQleIdhoodJrZ0Cpxp4Ea
      CSTZdIFB6buwsqamC68d7GGklu3vy1ccYZFRZVARnRNRObw1LyAApPKlOEHK1/P0x1iGF4uu
      TOVBEKTOoX1nKJhgBeVVoYnpLVA8GDCUrt17fV3A5c+XcURRZF2psXUszEt5s7fvZTxR1h1l
      AAADvng+ViwBAGDIn4AAVFg1MxTZXKifjDC+2ExXE4SzCIhUqXxD5w4f76YM2jzaiusqzQO+
      uCeaH5fXe5wudzTOCiSODgeSdG7ZV1OkKjNXX7VPV6NTj6PIxauqpvKilL4L0zhrP/ShIlZE
      Nep0zqOF0ujUowBpd0VKZo9wk8mQIV9CgnBTuXk8lKS5edL/MiG1CkbiqFU7c9hSYlJRBNY9
      OXP4EWeF9PKIBQI8ptSqMZ87uEBtQ+gbbn/ppVcGvfG4p//Fl14dD7O1Di2OIXL11rzQ44kV
      6JTNhXpfjM3XIuN4iC7QKzF0Zq9j0hBWLTnkT3BXTvfirJAunGOi56mnnucNdgOJ6gtX31xg
      XsAQH4rsiXMdVpvmf37+yG3rSoxa5he/3P/Dr95WaKTOjoQSrJhH39d7EAhBtztaYlZV2zSs
      IPnibGnO+2vB1BzeqEKvWipAEaTWru2YSHWal+WQSGuBNAXVH33g/j07996894Z1LZULC+dA
      cOUdd95TV2yrrqrffcfdvu4OlVkRTnLBBHd6OPjwm/35Gve9N0mwgitEl5nVKSfNaCCZh4tC
      MB5KFhmptFO6WofWFabjzBWmLsakExCCoP7BLndcUmKJ40cvLtAPBKXJ/rMvHh356D03D46M
      fuCz351se8kXYxOsIEHQ7Y7JAsqFkWCC5sRah9auU1IKbCQfAkpyQjDBFc5SlrnCquFFaSx4
      xQY6EZpL348Y7fbjx9/2dAqmiusW5qISeeb5J37ZwzlCqHZHQfSHf+zYddenK63qv9tS9vix
      oesqzQp5RSwHhv0JVpBqHVqrlqQIfDSYnDsBORNcYRoCUGyi0nqVSkwqFYF3u6Pbqi/n93mj
      bHoBUWan0zDgTSIGNb4wQ4ERqs/94LGpl2t23p364x92Vj11ajSU5Bd0VZlL9PsSCgwtMamU
      CsyhIz1RhuUlKjd/dMq6FBvTT5CLjJSaxGakyntibPpZ2HjbmZjK2dJYazNq8msojCpFoZHq
      cUcFuQvLgR53rNhEqQkcAFBqVuc+EYMQjIWS4MpAjuloSLzQQI0GkvS0uuPeKJNeQApKMdHX
      ce7cud5hT37dxqnoxB5PPO3CikwmQAh73NFSszq1sFBqVvnibGLOevKZXNUVopU4atGkX7tC
      EKTOoXOF6an8PgiBN60FmujuDEi4QuLj8XiS4fJuKBqduokwHZLr3i2UQILzxdhKqzo1jiw2
      qmKMEMltVAAhGA/TTgN1tRNoihqH1hNlwu9+kChJwQSXRkAGh5UJJctb1mzc0KRchHWrOocO
      RUDnpJzls0CG/AlOkGodutRo165Tkjg6GsxpIiYB6ArRs/VfKcrMKgxFBn3x1Ms4K6T3AyES
      6/X6w6FQKMwVVRamhtmRib4Xn336pYMnI0H3qy88/fTzrwcyKO+SllqHlsBQ2R+9YAZ9CU6U
      at9dsbLpSEqBjQTnqUU3NxACV5gumn1XHgBAkVGlIfGpjSjjjJDkxDQCokxFN92yo8BkTIa8
      Cf6SV1LCVNffdBsZ6b/Y1oZamwtw//BCd+KxaAiHnup2xwRRFtBC6PPGdEqFQ38pit6qJSkC
      Gwkkc/lBJlghmOCK5qzJ6jQodUpFr/eSDy/GCnRaAQEAxto7Jsf7WL155EJPauncaHfiCTdu
      rbbrCRwnSBxjBCESifh8vlAolFVbU1Wn+jwxRsjPGvJ7jR53rMyiVr4bw6olcbOamAzTfA4/
      SFeYBgAUGVVzhBaROFZuUbtCl8bRMUZI8um6MJ5hjKVF0SiwKRFHdUlqUB4c7XjjRFdZZaVJ
      b6Dj3jArWbTqTMq7pKXJqR8P0RFa9gZljSjBXk+8zKKeKjuHIEiJWeWPc4kc6p+MBWkEXM7m
      mY1ah3YyzERpHgAQpXlOkNIIyDc86AqEoZDo7R2JRWMpK8HxokFDDg4M4JbKSiPQla7PsLzL
      bO1AEDnPcCFMhOkYw1fbNNOnS6VmtT/OJhbqCoIQjoWSAAFzd2EAgBq7Npjk/HEWAOCLsZQi
      XQlNR7mz8/U2iGK4ytTUWJk6w1G5ylF56QTD2i0La+j0dpA41u6K7Km3yeGtWTHoj/OiVOe4
      Iuar1KQKJrgYs3AL5ArRlAKbrYLCFMUmilJgvZ74mhKjJ8ZolOlyQQbPnMCrt33iwQfv3l17
      8sj5xehm7DrSpiW7ZX909gx4E6IEZwQNOnRKDEUmwvRs75obCYKJ8MxkjLQUGiitEk9laHij
      rCZtMhGdBBajkmFoRKOjuFwdnGlBEKSpUN/vjdOLcvm/ZXo8MbtOaVBdEWVj1ZIqAhte6Jq8
      BKErPI8T6N0PUprUxKAvwYvQE2M0JJ6mC7OW24++tb899XdpyyLFfTUW6l5rn4wxgm72CqAy
      M4AQdE9Gyy1q8srkTIuWVBH4aCCxsIwXUYITYXpd6fyTIQxFqm2azslomOb8MS69gBxVa++u
      WpttI7Kl1q5FANLtjs67H4zMFJwoDvkTd6x2Kq7sOkwqQkfhYyFaghDLXkAJVggl+UwsEACg
      rkB3sNvrCtFJTiizqJYsy7jGriUVaNtVgf4yczDsT7KCVGPXzhisoChSbFQF4mycXciQYDxE
      IwDMFko2g0qrJsmJvZ4YzYs2rXLJBFSgV1o0ZPdkLI9pudceifZ/92PbnrmY7Hrpx/d/7v89
      9pcj3GLeTb83LogwbbGwUrMqkOAWVgp3LJREEJBhV1BooHRK/J2hUJIT7TpyyQSEIEiTUzfg
      iycX9KNZJrhHJ8pKKxAILp4eNVmN5VWl+GI6Jfq8MQQFldY08fNlZrU/zsYXNJMfC9Iogszr
      BEqRWtA4PRykOdGmWzoLBABoKtSPBJJRZgX7o521LQ6NAgDwwW/95Mdf+9yBP/1HMLGIt9Pj
      jqVStK4+VGCgBBFenTw6L6kpGEVgJnVGWex6SmHXK0eDSZoXbdqls0AAgBq7FgDQ5/lb8Ecf
      ev6xnz/8CGFbq8o5wW8Out2xSqtGka4+jlVDqEl8JJD1mrwowckwXWSc3wmUAkGQOrsWAEAp
      MK0y3SzsmlFl01AE1uaK7Kqfd3vy5cvuL/0cKii88cFNcZpQaZSKxerDojQ/EaZvbnTg6WK+
      zBpSTS4kPUOU4ESEni0UOi21Di0AQKPEVUSeqhItDKeBMqmJLvfKHkcrlCoCQ1Cc1BsMFLGI
      Q6B+X1yUYK1Dm9bTY9EQGvJSekZWlxUlOBFmMpzDp0jV/tWSuIpY0mJhGIo0FOiG/IlclpGX
      HAnCh9/s//snzpwdCS1qiFyf55KA0h5VYGiBnvLF2Wyd+3FWiNJ8hiPoFEoFpsBQXpTSr8Zf
      S1Lj6FxWAZecAW/8Zwf69nd6fn6oj1tMU9rriakIbDZTgSBIqXkhS6rjwSSCAKchiyKvx/v9
      cVYYD9HH+v1LLKAau0aSYL83vrTNyAWLhkyNah06JY4u4vPscccqrJo5OslSszoQZ2NZzmrH
      QjSKIM7MvIgpKqwaSoFplHiJSbXEFQ4qrRoVibW5IjvrbEvbkgUjSDAVU6AiFrCKkCkQwh53
      bFu1ZQ6NFhmpBCcGk1mku6TSwVAUydANneLGRvtfLFsUGFphVS+xBSoyUkYV0T0ZFVbsOPpI
      r48TRJOaaB0Ls/nacOAqPDE2lOSqbZrZs26AVUNSCmwskEVQBwTQFabVBGbMzAkEAAiOnnvo
      e98z6VRn//AvX/3mvy2xgHAMrS/QDgVW8HZ0+zs9hQbqg2uLOieiWf36s6LPE5MgrJtlCpbC
      rCE0JJ5VeoYgQneEKTKqMs6rZ4dHhvzDfj7pbu8UVm/duvQlm5sK9aOBZHRlxkfHGP7YgH9H
      jW17jRVCcHY4u/yCzOl1xyEEs03BUpg1pEaJZ5WeIUrSZITJZgpGrr1+q5UiAG598KufL+R7
      ll5AtXYtL8JBf05pTUvF2/3+OCvsbbSvKTZolfjxQf8ila3p8UTNGsIyZ8ipmsAsGsIdZTJP
      GxckOBmh59hTdzakZODoO2fdgfjSC6jcolaTWLtrRSaq7u/0mNXEuhKjRomvKja0joYXaUur
      bnes6spA+qtBEKTEpA5lM5OP0EKMEbIaQQNg+uRX/7HAUXDz9vU1629aegEVGVU1dq0/zq64
      klMML77Z7dtebU2tbl5XaR5cnBq0gij1e+PVNi06p4AAAGVmVTDJZb4+7QolUQTJygkEAFFU
      UUbiqL20bv3qxnwKiGciE55wtu8icPRjm0ur7ZqVtaABIXhnKBhKcnsb7KmvdX2ZCUfRk4OB
      vLujR4NJmhNr7Jp5NzoqMasiST7zQgtjIRpDs3MCzSCPApLGzr/57OsnaUH0ef2CJHp8PiYW
      6OsfiDGC3zs5Mj4Z8U/09faFEnwy7B0aGXZ7IxwdHRzox1EQSfJz7Oy6LIH7Oz1qEr+uypKa
      GdU7tCY1cWowKOS7IkWPOwYBqCvQzTtVsmmVCgx1ZZaeASEcDyYxBEm7DU+G5M2RKLHxnoBy
      dz3aNhJItL5Zsn3LO2+2K+kBmlAzF6rUE8dMO+4pA+7ei+dPFmxTjp5wlNjaXPoa3bArjo4H
      KWXdmjDNG1T52lghOwQ23t/Th+gKqkodGZbeEyR4sMuztcqsfTd+g1Rg68uMraPhOCNk7laZ
      l5QLEUVAtU0z78kmNaFVZhrUkSqooFHiM3I8siJvFijqH+rt7jnXMXDxQm9TS8GpfUfstU3u
      QLSsoqa80AgEVUNLRW9nJ6FS0nQwwqhWN9epcNTt8RUUV7bUFxMY6o0y+WpMtlw48Myzh08/
      +9v/7Q9kavzbXJGJCLO3wTHdKmypME+E6ZHcKq1cTY8nVmikMikl/q6AMmoAL0nuKFOUQTrY
      HORLQDAwGbjpY5+67+8+XqemQUEj4OHa+oLNq+oHBodRQq23mHEAcFRK4FobYWisUL66/+2k
      CNetXedxjWCEmiIxX4zNNhQhXySSCZ2jBBV8o96MJoMQwjfa3QSG7qy1TvfsrS0xKhXYiQF/
      HpflIQA97tjVgfRp0VMKg4pwhelMPPuXvIi57RqQaRcGoejuP9+fNG6u1Ow/8GYc6nbfvNdM
      TcVWIpXrd6X+2nbTXgDARz9xPwBgze4716T+u7YcAHDTPZ8CAAAgXnx7UvIkWtbX1jY46zcA
      AMBLFyYiNM8J0tX7wVwDVl1/c/hE+6DWolXPk9ubQpDgwS7vxnLTjK6qwqou0CtPD4c+uVUi
      83QjNCeOBJM3NTkyMRMYihQZqR53LMoI84ao8qLkjjJ7G3KK5stUQEzE13r2lFe3qYqcRK3N
      BcGzw+6oufxSKlpbWxtNZ5VXq7A6i5iJzkMTnanXZ/v9JwYCuKfctBTDoMneM0fOD5JqR0XP
      yQN9GZwfYdrPXFi1qfTQwZnxuJbo0MnO8Mtmf9odRhfASCAZH2yjS6IHD45ncj4zMj7a53t9
      X8ymnefH4I9zvp7WoDlwAM/oymnJVECUwbF2VcPhESAIwvT6QBzHiaJosVhyrJFQzqt/dyHO
      kqaSkjT7Ki42JSUlm/ZkejIE4MDbQ4Te9qEdq81X/cp3r6eOezppwticpxtpC0/iOuvWVXUl
      5oz6mlVxct+IoDbZSwrSZP9MxzscIg22xpqKXJ551rMwrc5Ee7wSK5Vq1Xq9CgDAsqxKpdLp
      5mnuPOhjpjPxOGmpqanK6ToLJTVoyeRXwItS5z7v2uaGLWuarj5KWYp+cS4xAQ3V1dW5Fx6B
      EMZ7BbUtuX19c4Z9YgAz4adjlKWopsYx95nnIqOUJbi+paFmPqnNQRaDaJ2jZmNjiaGwJvf6
      QFdTbFQZKEXHRFRaCn90jOF/8/bgr48MZFLzaiJMt7siNzWm/3qKjFSpWX1uNJSXPbwkCHo9
      sUqLWpFx9LpRTeiUinlnghDC8SCNo+hUqbyFkYUFUhmdlUYAAGjIuT7Q1VAEVmXTpNLErr03
      6JW2yR++0gUAUCqwB64rm+NMCOH+Tg+CIHvq00fAIQiytcr8hxMjwQSnIvKwh1efJ765wpS5
      KTOqCK0Sn3f7lVRJF40SN+Q2Vlv6tbApmgr146FkeCl2QYAQQAAgAH3e2NwmMDX/qrSqq2Z3
      660vNTGC1JaP5eFwkndHmZo5ozhmYFQROkoxMl96Bi9KnihTbKSgQL/4+H/9x6+foxfkP19G
      Aqov0MUYYXxON7zIRl954hf/+/uXE/mr8MoJ0tE+n1VDri0x/LV14mC3dw4vjj/OnhkJ3tjg
      mGN801SoN1CK4/25eoMghEf6fACASuv8PugpCBx16qlgnJ0j1wVCGE7yQ4GEXadkAheO9Ojs
      Q/vPehfSyGUkoBKTSkcp2ues1zHecWRCvfbGJnUwnrf1pneGgm/2+O7dWPzI/etKzarvvNje
      50kf5A8hPNzthRDsmdN3YtWSNQ7txfFwjtkmo8HkN55rAwAc6w9k9cZSsypM85g29YwAABEt
      SURBVHPYcl6EP3qtayLMHB8IBKIowvX3I1YzvhDbv4wEVGSi9JSi3RWZw/b6h7qOvvXyL594
      MZKnKhgMLz56dNCiIT+8ocSuUz50VzMvwm883xZKF5wqSPBgt7dAr2wp1M992a2V5h5PzJt9
      pvoUEMIhf4IRJABAhM4uUrbUrA4n+fDsEwJBkjxRBgDACZJ78CLRcsfNNfSxvoWEUy4jAakJ
      vNKqHvDF5/jpGJ1l67feekMN0penCq9H+vwnBwP3by5NhXU2Fxq+dVtDmyvyw1e6rl4NiND8
      iYHA3gb7vHE5a0uMKIKcG1l4hGucFf5zX4+GxD+5tfzrt9Rn5REoNlFJTgjGZ5XvsD/Z7oo2
      OXX/8aGWdXvv30FeOEfseWDzQhJjlpGAkpzgjbFdk7Hv/LV9tjlw2br3VYsXJiy33tqcBzdd
      ghV+/dZAqVl955rC1H8QBNzaXPCZHZUvtLoePzY04/y3+/ycIO3OIJO/wakzqojjAwuMcOVF
      6TsvdnRNxn5yz6ovr5OefOS/3xkIZX4hk5rQzj6TT3LCQ692KRXow/evvaW5AMWoGz/6uc9/
      9KaFJfUvIwEFE5w3ygIAXro4ect/H/nXVzpPDgbYK6vZo4T6lo9+9jMf3k3kIwPrjQ73hfHI
      J7aWTd/jCEORT22v2Ntg/5+D/Ye7Lw8sBVE60OUxa4gNZfNrV0Piq4sNnZPR8ILyNHwx9oVW
      1+d3Vu1tsL7ws19tvPemJ37y+8yjjAwqQk8p0q7JQwifP+c6ORj4wq7qrAoqzMYyElChgfqH
      nZXXV1se3FZeYlY9eXL0vsdObf/x4a89e3F/pyfG8BBCmhfztdAdTvK/eXuooUB7S9PMKZWK
      wL9ze2ORkfqXF9oHfZdia2KscKw/sKvOnklFCgRBtlSah/yJiXDWMSoML37rhfY99fbP76oC
      AHE2lr7w8J+rtjQhSKY3blQpdBQ+Ekhc/aiGA8n/Odi3sdx078bivFToXi57b58//Myh1jFE
      7/zxhz7g0JGCBENJ7mif/1CX940O9zNnx3VKvMioGvIn9jTYfvzBVbnXFXnxgqvPE/+ve1Zd
      veqJIMCuI//tgy0P/u701569+OgD6/WU4vRQMMbwuzPOoG0p0lMEdmoo0Fw0z4h7OoIo/fxQ
      /6mh4FtfuUGBoVAS9p93fe2h73/7n78mfmQXmlm0G6XArBrSG2MZXpxejYrhxf8+0MsI0tdv
      qZ++e3cuLBcLVL/p5g/fsk5iMK2aRBBEgaE2rfKuNYU/u3f1oS/f8Mh9a3fV2QZ88Tgr7Ovw
      vNHhztEO+WLs748Prys13nBlQM8UCIK0FOm/fXvDhfHwQ690cYK0v8ujpxSbK8wZfkS1TWvT
      Kk8NBTOP9YYQvtrmfvTI4K3NBZeKxiPYP37q7kf/86d3f+rracsCpQVBkFKzOkLz4WnTNwjB
      wS7va23uj19X1lSY28LlNJaLBSJV2rbWjh3vu1czrXgAgiA4hhjVxI2Njp11thq79g8nR+Ks
      8NVnL54YDPzj7mq7boHrOM+cGXOF6G++r36OMD8UQd7XXNDnif/6yKBdrzzW799WZVFnXIBM
      qcDWlxqPDQQCcS7D9aaLrsj3XupoKdZ/89b61H8QBLHXXfeNf7kuww+dotSsitB8KMlPxTu7
      o/RP9/fWOrSf3Faex+0llouAAO8enlBtLpq11rUCQx+8vvzeDSVxln/06NCfz4y93ef/0p7q
      O1Y58SyrHI2Hkk+9M7qt2rKl0jz3o1Rg6Kd3VPR4Yg8f7hchXF1iyPzJIwjYXGH+y9nx4UAi
      EwG5I8zXn2ujCOzf72rJvfh6iUkVY4SpfUV5UfrVW4PuKPPwfWvzFaiUYrl0YYBmCzau1845
      lcRRVK9SFBpV37y1/vEHNlg0xNeea/vsk+d6s6myCCF48tRoMME9eH0FlcFip4bE37+6UJAg
      hKA7S+dTo1OnpxQnBub3IydY4fsvd44Gkt9/f1NFuiKs2WLVkkocdYUurQudHAw8c3bszrWF
      W6ssc78xW5aNgHSl79/elOG4ToGhmytMj398wz/tqTk7Evzooyd/+dZAhmXOBnzx586N76m3
      ry0xZHJ+anu8YhNFEdiG8uycT2UWdaGROjMSnDtjiRelR48OHuzyfGFX1Q016cdk2aKnFHqV
      IpWeEUxwP93fW6CjPrujcu7c1gWwbLqwLEEQxKAiPr294oZa60/29/7Xvp432t3Vdk1LkeG+
      TSWzfQcQwt8dH6I58cFt5ZlPQ0pNqmc/ex3NiVmmAAMFhm4qN/31/IQnypSa09gVCOHZkdDj
      bw+92eu7raXg41vL5vVxZ4hBRRgoYjiYFCX4hxPDXe7Yj+5sziX/azaWjQVaECiK1Dm0P7t3
      9Y/uau73xZ8+M/7dFzseOzrU742njcromIi+etF9W4uzwZnFNISNjP/sG5/+w6+e8PFZP66N
      5eZwkr96dRZC6I0yr7W7v/rsxVfb3QoM/eTWLDQ9L1oSN6mJiRB9bjT0xImRPXW2W5ozCsvP
      lpVqgaZAEERF4HeuKeqYiP722DCKIj9+o/tXRwaqbdo9DfaN5aYauyb1xUgS/M3bQwgCHriu
      LG2p5dmIuzu9TMk9O7ZaMkrZuII6h9akIY4N+HfX2xAEESXoCiXPjYYPdXtbR0PeGJtK1nEa
      lM68bjqDokixSXWo2/ODlzuVCuwLu6vzqM7prHgBpcBQ5J/21GyuMNt1Sl6QDnZ7TwwG/vON
      HhJHyyzqnbW29WXGNldkX4f7vs2llbbsRqn64g1f+mLBuX2/22f8zq0NWXgFAQBOA1VooI72
      +d/s8U1G6INd3o7JaDDBFRmoTRXm3XW2Mot6NJistmmM+Y7DNGsIT5QNxLlv3lqfSVbrwvgb
      EZAQd//o+499/cf/kuqZNpSbojQ/HEgc7fMf6fU9fmzo4Tf7OUGCAGwqN2VbCjM62fP2+TGO
      wcuz/44jNB9OcgO+xGf+eBZBQLlFfVODfVe9rc6hs2jI1JC2vkCX9PR86/v7vvbtL+RhApZq
      M82nZn8OvfLGBvvi7Sv6tyAgKPHHXn6+wx2ePg3TUYqWIkNLkeETW8tGg8lHDg+8eGECR5EF
      rIEYy9bupAlm05amsqx7GUmCqZIapWbVt29rbHDqjCrFjK9T4hNHX325y83ksbiEBC+V/tQq
      8Uy8FQvmb0FAkYG3n2sN68XAiDtqumorJBWB1zl03769ob5AZ9YQGzNYS58BipM1zesW1jaz
      hvjXO5tODAR219uaC/VpLcFo677DgyxJeyf8CZ0lPzZITym+d3vj4R7vtmqLMYfaCfOysmdh
      KUhT5Qf2zrPFollDfvo6E3vqTz/4918M+vJc/GA2Ri8cfuj73+o43/P53TUtRYbZ+hFjcfNN
      19Xn+bPF5PhbTwZPPI9JYFH3xca++93vZvUGKHITYyOBGKPRalJ1kUVRFEWRJLOfouQJhUpf
      Xl7R0tJSU1ow10xD4Ai9M3jxBFq+piKbMPUFw4posRU98ubwpp3r5thYS6k1lVdUtrQ0VxZZ
      8/aDFgWEsqDezgmkeFWlNV9XvZqsGxxxdR453X7i4MsD3mv0O84IBK2qrpzbUiOkvqLQYC5Q
      Tbh916ZRtsJStdpIUd5obL6wMoyorizN43gCUajKS+xqoy4YdOXvqmnIus2xSMRa1KgLJ4Ox
      JHDka9JwLRBDQy8cGzDo1THhGtWkbj2+Lwq0KsUSVFGXEp6XD58zafVSeLFKV6fI2gIpCBIC
      QUIQpWKFbdeNGUvWOAno2PLhHc3X5hMbGluEaGDv3Z8pMV3rXFtUbd1QaUkQxX/3gb2L+kFI
      tpFZfMz96msHo4Lq5g/cYVVhAACWZVmWzbW4gszKJGsBXY0soPcyOQloqj6QKIoEcdlKS5KE
      TvP2Ls+XqRufmuJe/RJCuBzauXxeIgiS5nHBnGEYJhKJTL0URZFhmOkvfT7f9PNpmp7+0uv1
      LtJRv98vCMLUS5ZlRVGcehmNRqefz/M8x3EZ3pQkSdfmpiRJumaPa8ZRhmEkSZp6GQ6HWZad
      eslxHM/zEML8e6JRFJ3bJ6RUzhXfuXhHp9vIq8Hn3H94qW4KQZClelxz36/i3SlUnj3REEp0
      IhaLJ6eicRAE0Wiu8NoJHMNPq60x7Sjk6GQsFp8+651+VOCYWCzOpz8KAABQ5Gn2clq0Wq2e
      MsJQ5GOxaDxBTzWMJMkp0UAoMclEIslMHcVxfOr5SgIXjUaj0Rg7LbBQrb7swuCYZCx+RTmV
      6c3mWXq2ZkuiwHI8hFIyEYsnLj20qaNQEhiGS/1FMyy88qgocCwvSiIfj8WSDDfjqCRwLCdA
      SUwmYkmGg2DGlUWGYQEAEEKWvlTX5XKbocQwLISApePRaJQTJACAUqnEMCx1lGUYCQKRZ2Ox
      eNae6KuZ7olmImN//tMLbWdPKcvX2NQ4SGVWTPtxC3Twz4/8e9i6pcx8ScJTWgZM8JVX9nV3
      nh9OqmuLLTOPSuyp/a+/09bqiquri80zjwIAodT39jPPtbIbGi7lKeM4PtVnh3qP/uGNcyJA
      nQ5HajkVw7ApeSW8A6/uO9Lb128srtYpMQAAiqKXnhcAbHDsrROnj73xmlTYXGxUpm5q2kfH
      nn7sj+1trZKtzqknZzaMj77052c6e3vGGaq6yIJMOyoJ9Dv7/nSgm6+zck8/8/LF06e1last
      Kix1FEp825Hn/nI8sKmldPj8/kf/2rp1QxOKvPteLrb/qUfaGafCe+HEhc4TpzvKa2pVxKX3
      ilzirRd+e9qrLlL4Xz94tPV8b3FdowoH715Z6H3njd8f6N62to6PT/ziod+U796qvdxmOHzx
      4KPPn9m0vvGF3/98PEBrbKUGFY7jOIqiAEDPwJnHn3q1qmV151svnWnL93ZPTMitr9p6XZNl
      0pc+/jweTTqLCtKvzSjNd3zoQ3u3tAApnaMPVW7atcdCQph2ZQdCxj/QEwKzeTbdk25UkgBO
      YWiaSYPbNcKJQGsrManTdGRKS9murautdZs3l6cLo4a4koQ8SqjTLnozkQhi3rKuzjU0OuOu
      eI7V2GxKESQDHmvdto11Bk/gcuCiBGmNwY4DAACPmS0a/oq7ZhJJk9OBI6Bmw64777i9zIxN
      91VyDGNw2AkJmEqadqwtZwWITstqlQQR05v0GIQCd+b4aYNjRqokjxrNWgkBgs8fgLSAUcT0
      lFhBJFVGUgkY/8Akq1Dme8tLFFegUEIAMtuQwmAv0itnWbCCMBkYOz2U3L6uLu1RiFPX37DH
      PdCWpngHFN989TVPINDb3p62MFjd9rs/++BHwt1HJyJpco2leFxTvkoX72lLX08DurvPFzWv
      T6/70KBP1XjbpuILveNptKkp2rHGNjjgUqg1M541qTI4rAYAAIIrUAgRBODY5SeDYbriIhMA
      AEHIkhLHjF1WVEa7VUsBAKDEt584bG++waq9bIwpndlq1AAAJEmyVm1cWyj2jAYvX5kgCwsc
      CACJyba3LoxMTgx0d09MuzZRUuJAAACY9TNf+fLNDeQbJ3um3ZfCWexUoAgQRYbH1rWU5HkQ
      rTKXMOPPHE6gt2+YNXIPQdIHjovxid889oTKWansHd/eUnrVYebkgTdGQkl7eXMaFziK3/LA
      F8VQx5OHk2n9UUPnj5zsnRSIgrR1qAvrGs++fswrKW6xpFtklbjBUallwyylCLQFutix199B
      GndvSHNfUrKno3+SllZdvy3d7wZBEERrK44e+esxBn//lpltn6pOf3WZegRBEICcf+OPr/Vw
      lVVYuX27flrYRmrKHRzrOHDsooAqd9lnXBlBUVRTvP7r/9zy2u//Ul/nvPoo4ILPPfsqzfH1
      u5pnSB9FEERtbypG9x86LTsSZXLi/wOiMmAlrTY2XAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Failure Reasons' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Data Virtuality Jobs' width='192'>
      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
      aDrGYQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Tableau Background Jobs' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Search DV Jobs' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Search Tableau Jobs' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29aXAdV37Ye3rfu+++b7jYQYDgLomkttGMRqOxM7HHM/bYsfO8pJw3VXGc
      cvzsT7acqsRxVT74ZRLXS97US9mOd3s8I2nkGe0URVLEvl7s611x9/323u/DBSECpERCJAHo
      Er8vLIC3+5x7+o/T/9O/PudAhmGAY475rMCHXYFjPt8cB9AxD8RxAB3zQBwH0DEPxHEAHfNA
      HAfQMQ/EcQAd80AcB9AxDwTa/EeWZUmSDrcqx9yJqqoAABRFD7sinwi050l0JhlnrE4a/7Qa
      G4ZWq9ZqDcXpsN75v/mtmIILcjFt8QQZYuc8erVardUkp9O2tZVxOh2fWisjFV1TUB6Wigjn
      cFmZ5bn5uoG6HXabzQLt7wt+vpEk6Q9u/MF/eu4/HXZFPpFdgWLo0g+/91dtT33Ng5c2coqD
      g7I12MkayYJkZjCcJlVFS6WzFoGdW012d/inxkZw3krplURF/9pLX4AgCAAw+9Fbkao5tzB8
      +eWviZWy12XZjGWcDv7mzCZayXWePZePbQQ7OiFNHzx3BrlbnQxN2UjlFSne3tG5ujjnempg
      dmrBf6J/a2ttdmzC5PNrpRQmuEqpFdYeFAupYFdfdHXF3zPgsXB3O5t05f0rCkBQGBbsnjM9
      3rfeuYGxpFGXbYH2Ex2uoWsfiYDQxALGuRAp1z5wZvz6zf7zT/kE7Z+ujHMsrdWzkKW7x4mO
      Ty3SZrNUygue9u6Q68ZHHz3z7LNvvvX+T371JQTeFdiKWPy7v/yHjvOXWVjmKEzBBElSMhuz
      9mCf30omioqdBqNji5e/8gXyXleortYBAB/8+Pujy5n/89d/9fW/+u5qEf6//s2v7ecqP0KQ
      V155ZeeHQmxhNlrNZ7ONSrm7v3d6KtLf3zMxOesixfGlpCLXK+U6ZzMVMw2Wx0u5rAQ4uRzL
      lFW5Xhro719fjKgom0uur69vMJy1WC52BhwTk7O+QChdqpAETdGsVMtDECrno3lI6A37714p
      Q0tsZSFIpxDIEWhnKbhUAWdOdS/MjxuwAwK5UqYSz+ZZgZWLOZyzwfX0YjRLshaXlb/LyeRG
      ToJwIJMEEU/nu71CzrBghcWERGEIFPR5eZaEIEDyLkituu0miDAhkFKsNRykLJq6gFSkCPbc
      +UG9mkFtben1pc7Bs/ViPRz2i9Wi2e4T6yW32wNDuwIIRvRGvhqLr1CCZWlmpiAZm2vrCIEi
      shRZnK8UC6miYiJgezCAferl0TTt7c23Xwq/5PG4JA0Oh/yLK5tujvT39X36gQfGrh4Ioazf
      /Llv1vNbGIamitIXn3sqVTFeeuHpjZz4rbPUcizjtNswEtfajFI+S3EcAuOQrlx7+/sbkgAA
      aOs+AQCAT18KDQAIGCRNxuLpf/aTX9UhXNaNQibN8yYI0oBuzI1+GO478Ul1ghDMY6YkxFHO
      xWuAdJp9Xd0hBEFOnDhrGBSC6lkm1mtxkziEADiXy3iDPSqyFAy67no2mKCQeh6mzXqjfKKv
      Jy+hIL9I+k52lXOkzZbLxIaHpsI9ffX0JmNrY3gIwoAsqzavDbdw1dkhW7AD0SREV1SUzyxE
      wr0nEsvzzlB3qSaazFYUgWxW650jEQhCbW4XzNMulwuVRIPiGAQ223kBJ3kLXagYPGVk88Zd
      O+C78oO/+0tg752ZnrGxSLSKU/d94KNmbw50O6qiwCi652/rThRFQTFs50OGrhsAguG7H6Wp
      imZAOHZ0s8IjhSRJv3/99//z8/+5+WO5XOZ4/khlgbsCSJMbU5PTDq8/Ho1ZrdzIlZuDLz5X
      yVadPFLR4Hou1z5wRsD1yckply+QjEUtnlAtExuPrPzCz39jduwjmrflKw2tsFpFXR1hj9qQ
      c4USRyM1BfbbmFhBPjvQ/ebf/L9Q8IIJlgN+90ayePrUAH7/f4b7xDCMarX6qM5+ICiKAgDA
      sCNyv7oLu3qC5OJEBZDTP36DdnYkYxsWM/v+O2/ZaX5Nlc499/y7r/2gQbkGnepcZGottkWz
      7OL8G5SrG4cMAMD4zKKLXCzinJnEIDk3OZuv5SqMPZSKLqMIVkwj45Fk/0A3y9srpQ3U1/aj
      V191nn4Re5TPoSAI4ri7pNWfIyRJen319S+3f5nF2cOuy93ZlUSTLJfY2Ozq67eYzV4rXRLh
      wYFuFaLbAy670w0BEAi2cQRUrKser9flcllsDkKvc1ZnwOc2dL27K1yV0d4Ov45Shix6/QGX
      02k1cza7XTAJgskaCngNXfO3dSQ24/0DJ8xWu02gD+BLVgvZiqxtLM4URcgq0JHJsbIC5WIr
      ZQUxscTM+EhDR+Orc1UVUxtFgBLz46Mywgg0OjEy3JCVhflIRUEtLDo+Omog+HJkGlACBaSx
      8UmEpJfnphHGwpB7Ogl9YWZCghmeJsRKrmEQBApFo1FBEHY+kUkkCY779L8gTdN++8pvvxh+
      Uc1l3njrqjvYDoobf//G+75wL3U0eqVPy4E+CVmSZEWmaA65z/7DMCRZIQh8vwU9JIzlqaEG
      xMswplTzT54MDa3UjcxktEx1dXcOdPmrlcr05BRrczfKOaDUfZ19k+MzJ8+cc6L5mRIvZddd
      HIo5wlp2tYrYNhcmO04MZJO59q4QCTeuvTsKO8yd4RNtXsvtRSpi7of/+A5jN6uKzFCkApE1
      2SDFLYOyOzh9Iy257exWoviln/7qp6fDkiR97ftf++7L3+U1OrM0lredY9av3MijP/2VL5vp
      I5FH7qqEXCsOj07529o21tbDHW0rS2udPZ2rC/PeQKAkGbAk1qtZiDCvTg3b2jucgqlQqoZD
      7vWNqLv9pAuvDM1nnCZIhZhqIYUxVhsDkkXFShmFUiGSUP6Pb7z0CYn1owZyuF3xrFLIZQAC
      12W9nkshMGm1WGrlQq1mGhsa9rZ3JhMxGGX8LtaA8M7O8FYy6u6wFZMxAke2SsqFbiYnshur
      MYyiMsk4TJhRQ/xoZCHc6S0jdCGX2RNAGEl5nbbNfLr75Jm1iVHCFS4lNvCQw02RW8UtnuHq
      os7R93wG9DHl5Mrbs+mf/LIq+bsHoPnIeuFSn/1hN9RnYVcPlFmdfuO9D1XA9j/5hBKbw339
      SmyCCA0uXX1btwdBtUayhKFqDKTrBJAkyM5gC8ny2X5PHg6dpBMjeSE68bbT154r15yUkpbI
      TguxmMq/9MWLH80Xf+qF8/cazz0qdE1RdahRKcIki8GQWCujFK/LVZTkIF0ulyo4zQJVxGkB
      RwwIQSvFPMWZSRzJZdIUb4EMjcQxSVaq5RIrmKvlIssJmipXKlVGMMm1Km+xYcie76aLdVHV
      NQwnVEmCEaTakFiagCEYGFpN0mkM1GTdbBY+vRPf6YEElUhli0ZdsnaFyluFYNB/SH+Ne9kV
      QPXC1kRk2eHx5baSbe3h1aXV9p7OtYX5QFdfdGmeFmwkgRq6jqiNkgJYimJwJLq++NHE7PkX
      f27QYWQUWs6uaSh99erVC089Y2dAoqhaWdTh9SwsbJwaPHFEvvPnCEmSXl159aWOlzj8iI4G
      PksOdDuaKldrIstxHz/LN/SGJFPkPvrnR8TxMP4AeNAAOuaRIknSKzde+cPn/vCwK/KJHIlM
      /hFjzI9eN6wdcizCdpxut6FvvXMDY0ijsSNTb4iA0MQixjkRKdc+cPauMrXbiU5MLdImk1gu
      mNztXR3BlaF3TV1902PLF5+55DDteh6hiMW//Yu/77zwNANJPI3JqEmW5fT6rCPY57dS8aLi
      YMDI2OLT9yFTG2oD3CZTh999bXyj8hv/6l88subaH4/FC2VuvxfSgMfvhXQDSFXB30OL6YwE
      FYtFCCZ6+7rdDrPD302hms/r0jTY43MmUwmlmvf0nscJjBNcl852k7Aa6j9Ty2c7Bk5DsobU
      EhPzm+ms6POYksnknhJRAu8ItUUXxuuKPjYysbCyNjUx3TCQSjpx5fr1zeWZ0fm4hSXuv/N/
      8vKzgwP9GAJdunTJaL4ldDR4HHogCCdZ3sBIxDAQNC9pUH6R8J3sKuebMnVkaKqt50Q9vcHY
      2lgOAhiQZdXuteEWvjY7ZA12IJoI64qKCtnFSLi3P7Ey7wp1a4zlG1//iYqBRNdLbpttb5EQ
      ane7YY5xuVyo3DBInkEQi4MXMEKwMIWKzlMgW9iHTH317/8a2Htmpmaq2Y1gOHx0LttxDnSk
      kSTpleuv/OHz2zlQpVJhOe5IjWVbOYCOR2EHQCsHUAsgSdKH8Q9fCL9w2BX5RHbJ1FalWsiU
      JXVtYbaiIBaemp0cK8tQLnpLpo6NNHQkvjJX1XZk6sjdZerIiIESS5FpiBRISBofn9iWqfRd
      ZOr8Q5Kp/33yv78Ufml6+IPxpWQ46J26+f7ESqYj5H0UDfUZODrZ2KPDSEVXJcofCHcuLK0C
      K1RDbdWVoWiZ6uoRADCHOjqbMjUTW8mqDW8HHMtWzAFDKWwa1o6tzJrLRGMCG1+dp2y+6dGh
      jhMDG4tLWFeou9N37d0PYYdZqDXspl1WVBEL89NLTCo7KcssRSrwtkyNLKzZWX0jLXkcXFOm
      3ucF8Laf2Lz6gawBX+fJlStXALjwKFrqM/A4DOMhh9sFG9rkyE2T3V1XtFouJTdlaqlQq5VH
      bw45fIFSfksFhMtpNyC8o6MtnYzDBFVIbuoQslVSPGaaZtlcIoZRdCYRgwgK0cUbwwvhTq/F
      bC3mMnuKbMrUcjEX6OgsZdIajJYSCZ23ungqW64JHFkXdXY/MnXiwx9JlLNeKY1+8EOYOyrd
      D3hMciBdUxRVL5cKCMHQBC7VywjFG1INITnIkCqlalOmYhSPowYEY9VinuRMJI7ksxmKs0CG
      SuCYJKu1SonhTbVykeEFTVGq1SrDm+R6hTPfTaY2JFXTMBxXZQlGkFpDZigChiAAtLqkUxio
      S4bJzN9Tpv7O1d/54y/+cSq+UVdRsVoyCbSoYeHgUYmhxyKAPr8c/SS6lQPoeBh/ALRyALUA
      ex4kHkEei1HY3Mg1wxKqbS3LqOPS6cBbb1/HWNJoKLtlagHjXLCY6zi5W6YylFbPAWt3jxOZ
      mFqiTCapXBDc7R0u4trYytnB7qXZSVvP5f6A6fYiFbH4N3/xd53nn2EhiWcwGd0zM1W1M8bI
      6OIzL79wb5mqbcvUkaXMt//1r8YiH95cUX/hp77wyJprfzwWz4EI1KhKRJvHksgXQ1YiByxY
      YSkhURgMgn4fzxAQApG8E1JrXocJ4M2ZqfWdmakkwV44P6jXsqitLbO+1DV4Riw2/D6HJJZF
      lfa7+GpdcdnNt5cII7pUqMXiK7TZujg9U5BAdG0DIVBUkSOL89VSIVVULRRiD/jvc2aq2+1U
      DCQc8lkcpuW5WF9f+yNtsfvnceiBIIxkec1YXltz2j15CYUKi6T/ZHc5T9rsuUxsZHiqrftE
      I7fB2NqYpkxVVLvHh1v4WmTIFtiRqXx2IdLe159cWXCGuovlmqIaFhpsJIuhzr69RUKoze2G
      eMbt3JmZui1TefOOTJXuX6a+9g9/bdh6ZqZmBk62BwLuh9tAD8JxDnSk2fNC2bFMPVCOR2EH
      QCsHUAtw9J8DPRZJdDWfKcsA0+vxXE1giNmJsbICZaPLJRltytS6jsRX5ioqpjUKACXmxkcU
      hBFodHxkWNwtU3UEX5qbBqSJo/B4LEqS+NTEOM7aaGJPNnk3mbr5ADJ16MrYYrI95Ju6+f74
      croz5HsUDfUZeBySaCMVX5WpQCobyRHBAK/VsB2ZagLA3NbZOTUxzdpc2fhKTm14O5BEtmIJ
      GEphEzRlqnCbTB0b7jwxsLm4RPeGIwsLF0iQzOfRZMHK71pcpilT6VRmUlZYipRhoiYblJiO
      LK7ZWX09LXrsfDq5H5naMbD54RVZA/6uwZX3338ErfQZeTxkqssFqXK1Iedy2Zqs1XJJGSat
      FnOtVKhVy8Mf3XT4fKVcakemtreHtpoyNbGhQ8hWWXGbaYpls/EoTtHpRBQiKJyk3XZzo1q3
      uf2KWNpTZFOmVor5pkzVYax8m0w1cVRD2p9MHb/6hkg46uXi8PuvQZznobbPA/FY5EC6pqg6
      jCNAVDVIN8RGBSV5Xa4hJAvrcqVcxSgGqBJGcwQCAIxWSwWSFUgcKWSzJGduylRZVmvVMs0L
      tXKJ4XgIRiBdQzGsWMhzJuudMlVqSM2ZqYq0I1NxGIJ3ZGpD1gXT/crUrcRmXUUb1aJZYEQd
      a/MflRh6LALo84skSdcS177QdlSeO99JKwfQ8TD+AGjlAGoB9ixxdwR5LEZhcyPXDGs4OTce
      GjjX7mbeevs6ypLgNpnaMAhdKmCsC5ayHSfPjV27OXBhW6ayDKXXs8Da0+NAxqeX6G2ZGg7a
      6eWVZQxj8uWir+30QJfz9iIVsfg3//vvOi88zQCJZ3AFE0RJzqzP2oN9ARsVLygOBoyMLj79
      1RfuuVymqIlgW6amv/2vf+3Gm/84tJz/nd/4V4+sufbHY/EciMBAtQ4xNJIuVoIWIgcseGF5
      R6ZyDAEjMMk7Ia3mdZgBbkIhpXCnTK1nMVsos77cNXhGLIld3R04pOMYWpE0miKdd8rUUj0W
      W2HN9sXp6bwMxdY3UALHVHl2cb5WLiSLqnU/MtXlcqgGGg75/F6nbOBH543Ex6EHgjCC4Vlj
      q6w47O68hEKFJdJ/srucI22OXCY2Mjzd1t3XyG0y9jaGB02Z6vDeJlN16ZZMnWvv60+uLDpD
      XfHNpen5aG93O0eWLZa9K/ZDEGpzuWCOcbmciNwAJFdGYYudF3BCsDD5ssHTRjYv379Mff17
      f2vYumempmdHr1Ke/ofbQA/CcQ50pNmz1cGxTD1QjkdhB0ArB1ALIEnS1fjVL4a/eNgV+UQe
      iyS6kk9XJD2+ulAQgYWnZidGb8lUxMTi02OjOzJV3StThxqSsjAfqciIhcPGR0YAJdTySZQ2
      QUp1bGTUwIjF2RnK7KT2rpeuzU9PSsgumbq5uSkIH7/5mo4nCf7eMvVPJv/kpfBLU0NXxhaS
      4ZBv6qP3xleOZeqBYmzF12oaHU3E/WEGNKAa5qiuDN+SqZZwZ9f0xBRzu0zNVW/J1M50ds0p
      0LiJi6/O0zbf5uqaWon38s7c2pItHIwuR62Mup4smjt2rZmqiMX5mSU6lZlUFIYkmjNTKSkd
      WVi3s9pGWvQ4hH3JVH/nQPTqFUUDge5Tq8cy9WCBHC4XiuIms6VWLtRkrZZNyDBltZhrpWKt
      Whq6ccPm9RVvk6nhcHArGUcIKh9f1yF0R6Zm4pswSTvtFghGOJZKbm7ohqESFtAo7ClyW6aW
      8oGOznI2oyN4c2aqW6DylbqJZxqSxlLE/X+HsSs/FAl7rVwceu9VwB6/0nqw6Jqq6pDcqMA4
      jUCGVK8iJGfINYRkIV2uVGo4xQBVxCgORwCA0Vq5SLA8iSGFXFOmagSGyopaq1YY3gwbKgwj
      qq5Xy2VOMFXLJd5sQfeuQPuxTFVlCYKRurgtUw1Da8g6hYK6bAime9zCdmRqOhltaGi9XDSb
      GFHHQr6jEkOPRQB9fpEk6Xri+vNtzx92RT6RVg6g42H8AdDKAdQCSJL0e9d/74+e/6PDrsgn
      8liMwuZGrummoJRZjNWYf/Zc/5tvX8cY0hAV+8cyFdfFIsq5EDHbMbgjU9U3rkxwt2RqtwOZ
      mF6iBUGqFAVX2CvAkZVVAqYUDA/4g11tu+SUIhb/+s//tvPCMwwkCgwuoyZJkjMbs/ZAX8BO
      xQqKkzGGRxef+eoX7ylTJU0COzL1139t+L3XRtdKv/nrv/TImmt/PA7PgSACM2oyQcNKR/8g
      o5VywIIXlxMShW7LVBxBkG2Z6rQAnEchpVCtO0hVEjqBXCRx9sL5U6CeRa2hzMZy1+AZsSya
      CWBp76hupVECLZUaocCuVwQRVJdL9Vh8hbXYF6dmCjIU39hACBxXldnF+Ua5mCiqNgrdp0zF
      wiG/32Udnlw8d/7UERk/Pw49EMBIRjDwBhAsLJrPo3BhibhNpo4OT4d6+hrbe6YCCIcVRXN4
      HbiFq0eGrMFORBNhXVZQPrs439430JSpKAmWZmbcodBWKnmi/879X1Gr2w3xjMvpRKWGQfEV
      FLY4BB4jeAuTr+gCZWQL+5CpP/zHv9Wt3TNTU7VcNNTefnQu23EOdKSRJOk/3PgP//G5/9j8
      8VimHijHo7ADoJUDqAWQJOn7y99/ufPlI7vd0+OQRG/L1NjKfFlBzBw5OzFaUqDcjkwdHalr
      SHx1rqKiar1g3C5Th7dlallGLBw2NjICSKGaS2CMGYWMWHSDovGRG8M4b71jmd/7kamJ+5Gp
      v/PB73w5/GU5s/XGm1ddwXYpt/HmB8O+tjZ870Siw+HoZGOPDmMrvi4Tzq3EFlEHbWZjr0zt
      6p6enGKsrlx8NaeJ3nY0kb8lU23bMpUwc/HVecbm21xb06qJHsEl6tL80hJHgnRdbbujF2/K
      VCqVnlRUhiRkmKjJgN6Wqer6luh1mtLJ4pd+2nOfF4Dk7aeD7GqmVp2ZMOHylfH4yxf8D72l
      PgNHZDD4SIEcLidQZYw1GYZSk7VaNi7DlNVsqpWK1Wpp6PoNm8dXzCYVQLgcNgPCw22BrdQu
      meoy0RTDZmIbMEk7bGYIRnCSdtnMBsp2hlzJRHxPkU2ZWi0VmjIVIER5R6ZWG2aBFSWN2Y9M
      zUfnfzSZdKJysM2/vJZ2OIR7H3MgPBY5kK6pmg5JjQpM0AgAUqOKkqwu1xGCgQylWqlhJA1p
      EkqyOzKVZAUCg4v5HMmaIEPDMVRW1Hq1QjdlKoJoOgCGhqJYqVBgTZa7zEwV5VvL/MowAtdF
      hSbxW8v8Gs2Zqbxwb5na3DPVbNCZfFmr1s0doUah6nE7jsQN7DEJoM8vkiT9cPWHL7a/yOLs
      Ydfl7rRyAB0P4w+AVg6gFkCSpJ99/WcTYuK3zv3Wz3b/7GFX5y48FqOwuZEPNc6zFd8w2T1n
      e31vvn0dYwijodiDHTsytblnKizmOgbPjn14c+CJp/yCtlemTi1SJpNcLgju9u421/UbNy6f
      H/hwdMYXOnOye+/M1L/+87/pvPAMAySBwWVMECU5uzFrC/QFbVSsoDhYMDKy+MxP3FumiqrY
      UBuqrgK9/F/+8E++8q1/2eNj/vi/fOfln/+13pDzXkc/ch6LUZg3GEAhXGDoeCIBpKop0MvI
      uawMFwoFCCZ6erq8bqsz0EOjetDv0TXYF3QnkwmlWvT2nCNInDW5L5/toVG9rf9Mo5DrOHka
      Vg2TyRzwOMSGTNI80Gt7isRIvKe9M740KQF4fHRyYXUzMj0rAlzMbV258VF8NTK2kLTv3qf3
      nhiK3jd4Yn5uDhh6b2/v/MLSw2uiz87j0AMBjGQFHtSLoP9Eb15C4eIS6R/sKeWIpkwdmQ51
      94m5pkyFIBxW5ObM1G2Zit6SqbnF+Y4TA8nVRVeoq1htmCxWVjCxRMZi3TszFQDU5nbDPOt0
      OlCpASiujN5a5tfKFMr7XuYXAGDoRkOUwifap6eWG7LS0R98aA30ABznQEcaSZJ+8Z9+MSWm
      fuPMb/xM188AAAxDrtUMlt3HM6RHSisH0PEo7ABo5QBqASRJ+sflf2wYDQDARc/Fbkv3Yddo
      L60vUw1dm58ez9fU9OZSQQRWgZ6ZGC3JUC66XJQRM4dPj47UNCS2MldRUKVeACgR2ZapyNjt
      MpXFxoaHVYAszc3CtMBg2tDNER1A87OTNZ2ymZjdxWpz0xPyHpm6sSmY9i1Tf/eD330z+uaN
      5I0eS08X4fjB668nSkbARrz26muAsdlMh/yA8bFIogPhrtmJm4g5pKRjwIHWMUdt9S4yNZ9Y
      LWiipx1N5quWgK4UotDtMnVtnrH7Y4n0QEdgOZ4AVVCoKyHWZGIom828p0RFLC7MLFPJzISq
      MCShQGRNAbSUjiyu2RhtfUv0OoVMqnT/MrUJxtnbbSwWDEIIevHJc0MLaz3BQx7JPwbDeEMf
      H7rO2HyV3JasGTVZq2Zi0o5MrZRuXrtuvSVTnQ6bAeFtIX86lUAIKh9bu12mpqMbmiZeG55x
      uewEbQr5Lal4piiqFnpvjrItU8uFYEdXJZsF6I5MpQs10WpmJVnfl0zdYWGr1uMiMsnEX/7t
      ax2dh79nT+vnQIauF4t5CCURQ4EJGoUgWawiBGsoDRinYUOpVusYSQFVRikWhw0IRmuVEsHw
      BAaX8nmCFZoyVVG0eq1CUFStVicpGsfQeq3G8IKuKgRxZyjokihruoZiuKbIEIw0RJnalql6
      Q9ZJFIiKwfPspzvRpkyNi3EAwO89+Xvf6P5GrVYjCX1xIcVwBGeymnnmU0/wyGn9APpcI0nS
      G2tvSEACAJxzneswdRx2jfbSygF0PIw/AFo5gFoASZK++do3E2Ji5zcQBA39wtAhVmkPrT8K
      MzRlbGQoL0F2SGQ7T3fYsKZM1euyPdTR3+EeunajoeOa1JSpzWV+Pxp44uK2TKVJvZ4Ftt5u
      BzwxtWTxt9dSC4NPvajVc7MT45zTm81mrc7O8yfbbi9UEYt/9Wd/0/nEMwzYPTN19zK/9yNT
      JU1qrvR7O7nY/P9+Y+zpPvuNscjX/uW3V977qxjs/cZXX9i7zNWjp/UDCILR7q7OrbIqQLWy
      DpoyFSSHN1QzXihCcKi7pytTrEiaS6zknH6vrsP+oCeZTLgQwttzTsosIYTn1NmeWnKhrf9M
      uVDwe5wwRlkcnq6uUmR6peeZL2aWIwDsCiCMxHs7OjeXJoOdfROjU6gjVMvneB4Xc1sfLKVI
      nIoR5v3K1Nux+tp91sWBcxerKm5jMbG9b2V4ulATnfw+NnB5KLR+AOmaPDQ86gj1Oq28gWB5
      SWvK1I9npo7MhLp7xeYyvxwE4bAsq86mTJ0bsgU6EV3akame7pO0RqJ6I5POR9Pl3jOnVqeH
      Ap2n7ygWtbndsMC6nE5MbhgkV0YRq4PnMUKwsvmyLtBGZj/L/N4BHAoFrr/5/ZMaYIIAAB55
      SURBVKhiMk9NVMWG2enjKfwB2ukzcpwDHWkkSfqlf/qllJS6/ZdXfvbK7T/WqlWKZQ/rgV4r
      B9DxKOwAaOUAagEkSfre0vcaoHH7L9uF9mf9zx5WlfbQ+jmQoam5UrlayLEWe61cDvoc8a2q
      rpYghCMIxGpmC4V6uZQnGUZVtFo5720LV4qix2M15HKiqOlSw2WlczWIRqW6BKm6Xsol27pO
      yLUyjMJbsZTg9cIqZLPumnqsqfWlxbjb5xQbdYZhAQB1Sa0X07RgFxis3NBYHMQTuWBX+J59
      y5/O/mnzSfQOL7e9/Kz/mYXx67qpjYLlckU62e2JrBcIWAm3tx/wdJ/WDyAIQXkSzWiwCzOy
      ig7EYrykgsTkWl0IBzx2m5XGq4lqpapAYjltYrBypRGLLmfKhV6rnm04xHQ8n9I7Tp2txjZL
      sL2YzbCgKqqAZvl6PpGOxTeLeY8juCeAAFATS3MzkTGzzVnLpgFnL1fqdkbHsLgs5kp1YLU7
      UVnx3kcAfRKcCZ+Nls51oG9PzZ/sck98dCVZFH/z37Qf8EC+9WWqrkrvvftOQxLfffd91QB5
      EZKSi8DSFrKQOIZl09G33rqCUlwxtQKTVo4XUASGAIRjGGZyZRfHCNaCUCwF6xDBxxemOIuN
      F0yIoWYTax/cnHGG/CQE4/jeMEBQ3OX1WC2WUDhsNpnsNiuPoYLT43c7XV5/IBi2sKgCwQ/Q
      +hBvsvE0dGNowumwLK5FWRI7dfbsgT8GOs6Bjja3y9QdXm57+Y+euX3VRCOTzdlttgOuW5NW
      DiDDMOr1+mHX4oFQFKUklWB0V1eFIziLHZWJqi2eA5HkQT+ZfbjAMBwtRlVY3fVLAF/yXjqs
      Ku2hlXugbQxjY2Ue4V1aOUXbg3aBWluYJax+rZzEBK/TwqzMz/CutsrWBm0LmGgIRsmNxVna
      HvQ5hYWZScHm2tyM2r1tIZd5LjLjbuuhgKyiJIOB2ZmIv6MrtrIc7hug0D2jH2NjZR4z+TxW
      TqzkFUzgSDibzdpsH2+pUcoXWIv507OWu97CcBgf/cVRYOiprQyqlociiRdeeJaA9dRWxuU6
      6BcUW7wHAgAYukab7MuLsw4LOxtZee60Oy2S+szVVAkNdxMOEy5YXXPjQ5zdnVmaXaoV2vtP
      zSzGLvs61cJGBXfm16NBK9UAUGx1VsP4xcWlWnzJO/AkUkmTVtPM6DSL1xeihVNtltsLVcT8
      +PCsI1ScG6+aTLwKU3VRVnIbuNnnt9PposqR2sry1otf/+o9ZeonkYlG/vqfpsJEUQ+eRWEj
      tjz26oeb3/7ln37wFtsXrT8KAzBUTCeC7d2sxUciDc0wdE0DwLB6QmI5ZxhQJhXr7OnRdQ2C
      sVDQb0Dk089djq0tAgjWVQ2CoWi+HvZYeZ7VVbVRylYacqEiCSypaRoAwNs9oOQSe8rESMrr
      sCRjG85AMLG6mi9Vs9GEzlvNODQ7P18qJFNFzWM33a2694s90OG38aeef9kHZ9fSDW9Hn4M7
      hPv149AD6aquV+oiA8T2rr6qpLs5jQw+p1VShLm3XMprGiRqsIVGmUAbhxsQRibXl8NdfSiD
      mROzlp5+WJcMXQGEjYQ2Tz9xkYJUWdN13dA2N06eG0ysrfQP9t1RLNE5OOhXZIbjHRyL4kQq
      73ZZeRRG2zpD6bJqo0Gmoj2Y/MQuXbpAGPU4G5JiM1Xr2cuXzz/Q+T4Tj0EO9HlGkqT/Mfk/
      ynr59l+iMPq7F373sKq0h1YOoGOZegC0cgC1AJIk/bfx//ZbT/7WYVfkE3kMciBNGRsZakBs
      v5daKOBP9Do/uHIDFwSjVmWdwRMdrqFrHwHKpFQzhMmLKQV/d//0R0Mdg+d8FvjdqyMcL0jV
      LGJuP+FjRsZmBLujkt2yBns6/Y7RkeGzT17eHH+H7PxCcPd4XFPrb73xZmDgvJWCUSDLqAkG
      +uZKJNDea6KxsqgzmDE3u9z/5Ll7zg2LVqMAgA9+/P25ZP2X/8W3rr35vbkt5du//HOPrMH2
      R+sHEIRgAwMDyxux4dEJ1doDRJJ0d4HE0FpdCPMNGCFPnhpYWYsCd7tYTrMMKYkKbeLyhZwT
      0W0dZ8X0Es+aO0+0VWJzvu6Tq1ND3WfOZaMZKOCkKLxRTEzOrXa5ngia+d3FqjiAI6MfWmzO
      ajYNOHulUrcxRqUyKYu5cgOy2ByYouj3/S0uPf+ifHUIhsGzX/yKdOUIvVTf+sP4pkyVDfz0
      2bNWgWrKVMgSDllInMCz6ejbbzdl6ipM3SZTcRwzuXJLYyRrQSiOhHWIEOILU65g28bcDG3h
      RdUwCQLBWM+fOckQe/8OERR3eTxWqyUYDlvMZrvNyuGo4NqWqf5Am4XFFIDcf+v/w5/9z1RF
      WV5c/Iv/70/yjfsPvEfOcQ50pNnZM7X5YzabtdpsR2SB3yatHECtIVNrSs1EP9Ajx0dKi+dA
      LSBT12prLovrsCvyibRyDgRBEIIgCAzHVheSufLmcmQ9kUUQeGMpkspXE+uL6WIdhqHVhdlc
      ub6+GEkXarJYVzR9OTKVyJYRBFqKTGUy6ZGRkc1UHgb6/OxUqVqfn50uNxQEQeq1qmFokanJ
      iqQhe4GjawtbxRqCIEq9VFcAgsCFQv72T1RLZXDHYXvPAsN/OvenCILElqZvTi7CMJJYmZlc
      2LzXcQdHi/dAoClTLc6Vhclsunzqoh+IuYxE67NXUyUs3E06TbjZ5o6MD/G3ydTIcuKSv0st
      bNQIV2E9GrTRDQiKrUYMXBi6/kFbZ/f8zFxvT+jqhx+e6QwSLt/C7PwT50/eXqgi5idG5hyh
      0tx4xSQIKkzWRUXJb+Amn99BbRVVjtRX9yNTDdKUnrkpDnRrqvr2O++c6fu1R9FWn4FW7oG2
      gaFiKuYPn7hw+VIqtqrphq6qAACLOyiWc7oBbSWjHT09mqaBWzL18rOXomuLAII1RYFgKJqr
      h91WnmM1VYVhWFVVGKc4Xmjzu2EYUhQFAnvzWoykvA5zMrbhDIQSa6v5ci0bS+i81UxAswuL
      5cJWuqh57PvYMKWejzs7BlGg6wQfsnPqvY84IB6HHkjXAKg1RBqIwXBnVTY8gk62PauVt3Bz
      X6Vc0A1Y0hArg9HBNg43IJxMrq+0d/WhDGZJzlp6+2FNNnQVUDYSjj5x8ZlUdL27w19ryMG2
      TpqmivMLvQO9dxRLdA0OBhSZ5ngHz6E4vpXzOK08CiNtnaFMWbXSILsfmSorak0qjY2O+Zxc
      9+knjs5la+VRWAsgSdIPln/wzRPfPOyKfCKtHEDHMvUAaOUAagEkSfrO+Hf+/ZP//rAr8okc
      nZvpo6IpU+saghkqbfWc7HR/cOUGJghgl0wVlGoWN3lxpeDv6p+6OdQ5eM5nht+5OsILt8nU
      0WnB4axkt6yBHr8ZnZ1fpHhHPbNGBU6f6/beXqim1N58483gwHkLBaNAUTATDPTN5dlAe5+J
      wUoNjcXB3Mxy/1P3lqmxagw0ZWqi/su/+K1rb35vLiV/+1e+9cgabH+0fgA1ZWpkdiaWqdrp
      BhBLOzK1bVum9q+sxW7JVEqSFNbEN2WqvXO3TO0ZvCVTs1RbX1+XUgWmjFwd6PTcUapGQGhk
      7JrF7qpmUoB3VMp1G2tUpyalxo5MVfcnUz9sytSXpA9GHmoLPRCtP4xvylRAmV1WgSCwvAjJ
      qUXIGg5ZKGJbpn6wI1N5XkBRGADwsUzlLAj9sUx1h8KbczO0hc8mVq8ORWAIEAyDwXuH8c2Z
      qTarNdjWZjFbHFYrj2OC0+NzO12+HZm6j5mp//Dn/zNVVpYXF//if/0/+br2UFvogTjOgY40
      xzL1MGkNmVpX6gJ9VPZovpMWz4FaQKau1ladlsPfmfCTaOUc6HaZGk9lpidG51aiCAKvL82m
      8pX42o5MncmW62uLka1CVRZriqYvRyYTmTKCQEuzk+n01vDw8EYqBwN9fmayVK3PzUzdkqkV
      Q1dnJifrqnGHZISja/OpQlOmFpsyNZ/fI1NL9yNT/2zuzxAEiS5NfTSx0JSpE8cy9SDZlqlL
      y/0d3rWcAcRsVmb12aupMt7eRThNuNnumRsf4hye7FJkuSlTV1KX/N1qYaNGeQqbmyEb24CQ
      2GrEIM1D1z9o6+zZkamXL14MdXgj06tPnOu6vVBFzE+MzDuC5bmJHZkqq/lNzOTz26l0UeFI
      Y3VlHzIVoszZ2SHxZI+mae+8887ZY5l6cMBQIRX1t3evbyTawl5NB7oiAwBZXIFGOa/rYCu+
      2d7To6rKjky99PRT0bVFAMOqJEMQtJmrtbktPMeosgzDiKrIOzIVxbClhXj/yfCeMrdlanzD
      FQgl11YLt2SqhYAii4vlYjpd0ty2fWQ21WzMHh5AgaZhXMh2LFMPEEPXDQDXazVfezeDgXKd
      8JoMou1ZrbKFm/oqlaIBobKO2FicDoY5woAwKnVLptqSEXPvAKxLhq4CykGj0ScuPr0VW+/u
      8NdEORjuhA0Vx5FKpc5Y97xUT3SdOhVQZJrlnDyH4Hg673VYOAxB2rrasmXVQoPcfmSqqumN
      emVsbNzv4HvOPHl0Llsrj8JaAEmSXl159Rt93zjsinwirRxAxzL1AGjlAGoBJEn6r+P/9bef
      /O3DrsgncnRupo+K7ZmpBoYqDczkOtsX+ODKDYwXjFqVc90uUzO44MXUgr+rf/rmcOfgOZ8Z
      eufqKN+cmWpp7/PRo6MzvN1ZyW1ZAz2BpkzlHLXsKh04cxeZ+sMfB05esJAwBikyKsBAj65E
      /O29ZgYr1XWWAJHppYGL5+8pU+PVOADggx9/P5Ko/8ovfuvmu68u5Yxf+dY/f2QNtj9aP4Ag
      BBsY6F9ej26lKpoo7pKpQn1bpq7HAdchljM8Q8uStlemcubOE23V2PydMrUGTGnl7jKVRLC5
      sWtWh6uSTgHeWSnXbKxRnZqWGtmKCJutDlzd38xU5cMhGAaXL18e+V8/0AA4+AVZ70rrD+N1
      VXrv3fdkHWEZmqbJWzK1vc1CEQSRTUffefsqSrGl1CpCWTlewFAIAEB8LFOtTZkKSH5HpjK3
      ZCoEAfLuMpVweTw2qzUYClvNFofVwhOYyenxuZ1uX8DnD1k4VN63TFWXFhevXb/udLuPjg47
      zoGONHtkai6btRzL1APDMIxarXbYtXggVFWtK3We4u/90UOixXMgmv7sm7p9NnRdr1QqD+ts
      qqqm5JTLenRnpiKvvPLKYdfhUQFBEARBAIDN5fmqhhaT6wrKsCS+ujAjQmQptdYAFEfjK3PT
      GsZsrS9KMIUCRYeQlciUCCgTS87PTGgGiEQiCkSYWSIyM4XR3OriHMZZaBytVMqaXJ+cmtZQ
      2swzO8UpigJBILq+JAKSo0m5VpQAQWBwPp9nmO2PQRBUKZYwmkKgT0PX9e/MfOcr7V/ZmB+P
      RIsBjz22NLWcbnidlk897uBo8R4IAAB0jbW5lqaGICGgz884ToWzyo5MJZ0m3OLwRiaGb8nU
      Ynv/4Nxq6lKgWy1u1ClPsSlTESS2GgG3ZOrCzFxvT+jDa9ee/9LLTp5Ayb2btyticXZyyeYr
      L07XeJ7XYKIuKVoxhvJur5XMlFSWNDbXM8/9xJfuczAF0dZs5KZ4ssfQ9Xfffffcib327bBo
      /VEYgKFcYjPQcwZu5BuqoelAl6XbZWoyth7u7lYVGcBYKOgzIPLS5SdvyVQJaspUl4XjGFWS
      YBhRFAnGKY4TQj4XACBVlj2mvW8dYSTpspnSqbjD509vbpSq9XwipXMWMwEvra7WyrlsWXNY
      9pHZVDKbtrYBBGgqygaPZepBYug6BMN1UfF5PbTVXVUUrxkiw8+q1TQhBKuVEoTgioHaOZK2
      tXO4AWFUcmO1Y1umzu3IVJhyMHj0iUtPb8U2fB3emiSHwl0kCvX0dEN3GRfhHSdO+FSFZlg7
      xyE4li26bSYWhZFgOJCrqmYK5Kv6/RsK3QBSvToxNuFz8n1nnzo6l62VR2GHwsNNohVFeS/9
      3rFMPRwORaYahtFcwf6hoKoqgiDHMvWYz4gkSf/u/X/3+5d/38kc0deij87N9FFh6Or4yEcq
      zEq1PMLYLp7uvHLlBs7zRq22I1MNUlBqGUK4tczvzaHOwfO3ZCovVXOIpb3PS4+MzThC3Y3M
      as+Zy1o5NTE7bw+exHJTZNcLoT3L/Cq1H7/+4+DJ8xaqKVNNkKFHV2b97X0WBis2NA4HszPL
      J+9Dpq4WVxVdWY+MvHf15vmv/pKQmXpjdOZLX//VsPlIXLsjUYlHCgSjPV2d14bGrf5upZoF
      Yom6Q6aurscNvkMsZ3iWliWNNQu5fNaJGLtkanze3zNYzGY5GtcMuJIvdZ45szE8Gk+sdbme
      CJl3vZ8KQRqF4nPj160OdyWdhHhnuVyzsUZ9elpsZCsSbLbsT6aG+s6eLZZNLJZbrRCwXirX
      wd6FhQ+H1g8gQ1cWl9esLq+Y2UAFe1Omktb2NrJGEkQ2Hb3x4UjHwMlcYpW2hDgBglAIGIAk
      Ccxkyk2O2HwhRBNJWK8SfGJ6ytU1wGkQYigkz81OjDvD/QGfWaH2vpsKo4TL44YrRX+oLanK
      iMkCSYrJZbPiZE2mBQklETlX0O7/Icr8jR+/PRH/AmZXBRNLcSx5RGT8cQ50tGluOPfdl7/r
      43wAgHI+T5rM+B3y/xBp5QBqAZnaXOaXp3gYOqKPfFv8FnbwMvXhIknSan3VY7vjhbUjwxGN
      64cCBEEwDMMQFF2d30zlFLHekFUYgtYWZhLp9MTI8NxKFILA8txUplhdnZ9J5SpivSKr2uLM
      RDxdgiGwMDO+tZUaGhpaT2QhQ4tMTxQqtcj0RLEmQ4Y6Oz0jqur89FRdMeC9QBsrc8l8FYZh
      uVaoyQYMQ7lc9vZPVArFOw+7kz+f+3MYhjcWJq6PzUEQFFuaGptbv4/jDogW74EAALpSS1d1
      NbtcWK6xHWc7LWpWYfX1jYF252oJMwzF6vBFJoc5uye7HFmpF8MnBudXUxf9TZnqLW5uBm2M
      iCCx1QhEmoevfRDu6lmYnWsPe41Gbn5+PplMqKTrZPeuNy4UMT85Om8PlubGqyaBV2GyJipa
      YRMzeX02cqug8DRYW0nf/8xUhLbmIjfFwV7DMI5l6sECQZqqGAD2h4IIAKpuaLIEIGh+basv
      7NY1kIiuh7uaMhUPBnwGRD51+cno+iKAYUUUAQRFc/U2l5njGFmSYASRZQnGKZbEXOGO/Opa
      qG9Qrub2lNmcmZqKb7qCoeT6WqFSz23PTIXnl5drlVympLls+xiHl9MbtlA/YqgKQh/L1AMF
      xuiAnQe0ledwBkLrouS3wIS5j4A1BAKlagnBCBVgdp6irR4OBxBGpja3ZaoDnzeHmjJVgykH
      h8fCl55Oxzf9HV4NhsrFxqWXv5JYX2s7eZdlfrtPnQqqCs1yToFHcTyd9zksHAoj4a5wtqJa
      KJCr7mNmqgHBslifmJj0O/kT545l6jH3hyRJr6289jN9P3PYFflEWjmAjmemHgCtHEAtgCRJ
      v/neb77y9CvHMvXQMDT5xrVrKkKSsKZiwsXTHVfev4HzPK7WszL9pcv9Q9c+MkheqWVxwYvf
      2jO189S2TOV4Xq5mEUtHn5caGZvl7Y5qbsvq7/FbsMj8Ak0L+VLB6e8b6Nr1qEZTaj96/UfB
      kxcsJIRBqoIJkKFHVyL+cK+ZxYt1jSNAZHrp5KUL95Spa6W1bZn6wUfnf+KX7PnRf5gqfuvr
      P2W+z/HbI+YxCCBFIsxuRKwM9HRvpitALFGeLlBJCiwTCJ+EEezkYP/qxi2ZytGypLGWPTLV
      siNTd2amMu19vZ3Kxkq08+yl9NIsALsCCIJ0BiXmx69bne7K1m0ydXZGrGerEmz6jDIVVyoW
      Ox6Np0vm4JFYOLH1h/EQTqqlLVU33nv/qmoYTZkKk7wCk1Yazaaj77x7FaG40tYqQt+amWoA
      kiQxkzu/NEbxVpTmSVgHBJ9YmPK0tW/OzzBWPhNf/XBkzuy2L43d4G2BPYXCKO70euw2WzDU
      ZrVY7TaLicRNLq/P5XT7Al5fyMph8n72TJ2/8eN3Jtayi0s5XYUBRtNHJSs6zoGONMcy9TBp
      DZlaV+scyR3L1MPh8y5TZVleza26re7DrsgnckTj+qHwsUxdmd9MZjeW57KlxrZM3UpPjAzP
      LW/L1HShujI/k8xVGtsydXxbpk6Pp1KpoaGhtUQWGFpkaqJQrs5O3S5TjVKptF3QLu4iU7PZ
      XTK1fB8yFYKgbZk6P96UqWuR0RsTCw9HhD4MWrwHAk2ZWtPVzKLLxkfmVxyn3VmF1Tc2BsLO
      1fItmTo1wtndueXI6rZM3XqqKVNpbzG6GbQxEoLEVyMQZR6+fjXc3bMwO9fR7gWN/HIstTg5
      9s+/9hPo7rRkW6YGinPjNUHgm8v8aoUoJnh9NjJVUAQarK3uR6ay9tzcR+JgL8Y7YzdugDN3
      ypPDoZV7oG0gSFMU3TAI3kkgkqobmiwCCJpf3+oLuzXViEfXwl1diiLtyNQnLz0RW1+CYEQR
      G02ZGmrKVFFEUEQSRRinGAJ1hNulYi0YuMv9ZVumJqKuYCi1vlasNnKxpM5bLSQ8v7JSr+Yy
      Zc21d2HXT6OUWrMGT8CGmk8s+zsHH17rPCit3wPBGB10CoBuM+r5rp6+uqr7rShh6iObMrVW
      xjBSBZhTYGiLh8UNCCO3Ntc6uvsQGnMSC6a2AViTDV2DaQdHxtsvPpOObwYCXg2Cq8Vc/0C7
      0qghdxkVEd2nTwcVmWY5lyAgOJYJeO1mDkWQcPe2TM3vR6ZCCKZK4uTEJIHgsnSENgBp5VFY
      CyBJ0uurr3+99+uHXZFPpJUD6FimHgCtHEAtgCRJ//a9f/sHT//BsUw9NAxNvn7tQw03Dfjo
      +QLxVJ/ryvs3MI4ntN0ytZrFTV5MyQe6B6Y+Guo6dd5nht6+OsrzvFzNwuaOPh81OjbL2xzV
      3JY10BOykxPjk96+c2tzU194/jlk99NhTan96LV/Cp58wkwCHNZkVPh4ZiqLFevbM1MH70Om
      rpfWb5epJ7zsd//v7/z8b/7bvUsSHRKPQQApEmn2KNX0zeEFzd4LRGqPTB0YPLG2kTC4DrGS
      EThGljT+lkx1dJ4V00scZ+nub6vslqlku6896MqWqgxD39mHQ5DO4OTCxHWr01PeSkC8q1yu
      2lggzs7U69m6jAhmO6HtY8/UUN/ZM4WymSUWr78xtBD7crnB8EdCx7d+ADVlqkGZn7wYXMlr
      eRFSUkuEzaMgqo1Gs+nojWsjHf2DucQabQ1yPAyhkLEtU035yWGrvw3RRALWKwSfmJluylR7
      oKuYTUWzVZffR8LCnYMwGMVdHg9UKfpDoZQqw4IZVhSzy2ohqLpM10SURJR8Qd+XTH13Mv48
      ZrP3X/rpFxWWOCoX7jgHOtLcKVMpk/nOZakPkVYOoGOZegAclZ7wEdGUqdGVeYO265WkTjvC
      PsfawgxhdmxtbpBmV2+7b3lumneHq6l1yh4wURCMURsLM7Q95HMKCzMTJpt7Y3PT7guHXKa5
      2Rl3sCO5seIJ95gYolopUQy7NDvj7xlgsL0XeGNlDjP7PBZOquYVzMQScDabtdlsOx8oFwqs
      2fzpcSHL8kRy4oJwgUKPRMZzJ60cQM11aHW5tlXTtcxMLl05dTEAy/mszDQnFi4XUWCoFrs3
      MjHM293Z5bmVWqG9/9TcSvJSoFsvbdZJT3EzGrQxDRhOrM0BwjR842pbZ/fC7Hxzy8tnnzy1
      mkiopOdk965htiLmJkfnHaHyQnVny0tFyW/gJp/fQW0VVY7UV5fvveUlBEF/NPRH3335u6BW
      fu/G7Atf+gKFQptra+5w+Ig8GmrlANoBgWGAEBefP7extuIT/AgMwyiytJkZOH0OgoxSIdPb
      35/MFlGM8LYFAUw+/6Xn15cXLSEzDMMoCscL0vkOWyVTqRZgDEURBMFIxmQytwe9tWKp9+xT
      pVgCgF0BhJG0322LpeKdJ05tTI8jtkAjl6ftDiuJzC2t0BQrKZag5742LbhgvaCJ2lah2u0h
      xhcT/X7uh6++9jO/+iv72o66mahAd1sNdF/ceZ5WzoFaAEmSAAAEcc+nRYd2nseiB/r8giAP
      ZyGpR3ee4x7oqGPoaqFQ4kxmbB/v4O+iWi7oMAHrMkBJlt7Xre9jdE3TDCA3qjpCwJqoIyRH
      k+C4Bzr6pKMra7EtwtF5uvMzvdiqK9fev9LefzIeS+ow8tzlJz9THmQsTt5QaG8hHVcNBTMw
      FYaffeYi/Fi8UPY5R1IUfzCgSPJnO9wAoOfkYDqxTgl2Boc/6+0G8oWCiKaSvI3DDZyzcgTa
      9DDHAXTUcbl9sc1Ee+gz23hYqpVdoT4OlHmb5zNfb5wSHG6XgNRZR4cJbzA2dzMbOs6Bjnkg
      jnugYx6I4wA65oE4DqBjHojjADrmgfj/AWHLabMc4JKMAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
